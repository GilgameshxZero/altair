//standard dp n^2

#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <fstream>
#include <functional>
#include <limits>
#include <map>
#include <queue>
#include <utility>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

int main ()
{
	ios_base::sync_with_stdio (false);

#ifndef ONLINE_JUDGE
	freopen ("input0.txt", "r", stdin);
	freopen ("output.txt", "w", stdout);
#endif

	int n;
	cin >> n;

	vector<int> x;
	x.resize (n);
	for (int a = 0;a < n;a++)
		cin >> x[a];

	vector<int> lis;
	lis.resize (n);
	lis[0] = 1;
	int ans = 1;
	for (int a = 1;a < n;a++)
	{
		lis[a] = 1;
		for (int b = 0;b < a;b++)
			if (x[b] < x[a])
				lis[a] = max (lis[a], 1 + lis[b]);
		ans = max (ans, lis[a]);
	}

	cout << ans << "\n";

	return 0;
}