edge = [(0,85,1.29935605945006),(0,89,-2.56672872096927),(0,90,2.6299707022309),(0,93,1.75646229438154),(0,98,-1.62620929593799),(0,101,0.873424481948302),(0,105,-0.217528305917539),(0,108,1.78960539567248),(0,113,2.75745414593951),(0,114,0.675572985015412),(0,117,0.440076906643879),(0,118,1.00061037018952),(1,86,1.99851985229041),(1,92,2.31949827570421),(1,98,2.11897640919218),(1,102,0.912610248115482),(1,104,2.11965544602802),(1,107,-2.31000701925718),(1,108,-1.27010406811731),(1,109,1.19196905423139),(1,113,-0.188077944273202),(2,87,0.815637684255501),(2,88,-1.26544999542222),(2,100,-0.273171178319651),(2,106,1.63003936887722),(2,108,-2.15654469435713),(2,110,0.965056306649983),(2,113,-1.16081728568377),(2,118,-1.06031983397931),(3,89,0.145580919827876),(3,92,-0.490722373119297),(3,97,-2.04584643086032),(3,99,2.27674184392834),(3,101,0.827982421338542),(3,103,-0.271523178807947),(3,105,-0.687475203711051),(3,108,0.194074831385235),(3,109,0.973136082033754),(3,111,-1.0401165807062),(3,112,-1.0763191625721),(3,116,0.00041199987792595),(4,90,1.54684591204566),(4,91,-0.860072634052553),(4,97,-0.647022919400617),(4,99,-0.523422956022828),(4,101,-0.233878597369304),(4,108,-1.35780663472396),(4,113,1.91332743308817),(4,118,0.202017273476363),(5,86,0.321481978820154),(5,87,1.03805658131657),(5,89,-0.878673665578173),(5,92,1.13397625659963),(5,93,2.75855281228065),(5,99,-0.860805078279977),(5,104,-0.160435804315317),(5,114,2.37716299935911),(5,118,-2.5687887203589),(6,89,1.18132572405164),(6,92,0.725882747886593),(6,94,-0.096743675038911),(6,100,-0.402706991790521),(6,101,-1.54127628406629),(6,103,1.01965392010254),(6,107,2.92698446607868),(6,110,-0.786660359508042),(6,113,1.19354838709677),(7,85,-0.568445387127293),(7,86,0.786866359447005),(7,90,-1.51460310678426),(7,95,-0.762001403851436),(7,99,-1.34665974913785),(7,100,1.19173253578295),(7,104,1.82670064394055),(7,106,1.96565904721213),(7,108,1.91415143284402),(7,112,-0.066438795129246),(7,116,2.19870601519822),(8,92,-0.244941557054353),(8,93,-2.41151921140171),(8,95,2.73310037537767),(8,99,1.87067781609546),(8,106,0.0614337595751824),(8,107,1.79126865443892),(8,115,-0.504615924558245),(8,116,1.49681081575976),(8,118,-2.18646046327097),(9,85,-0.52356028931547),(9,87,1.44891201513718),(9,98,-1.81855220191046),(9,101,-1.77460554826502),(9,103,2.04130680257576),(9,105,1.85541856135746),(9,106,2.75449385052034),(9,113,-1.81132694479202),(10,89,0.0481124301889098),(10,96,-0.616275521103549),(10,106,0.874820703756829),(10,108,0.434156315805536),(10,109,4.01946317941832),(10,111,-2.50096133304849),(10,112,-2.81090731528672),(10,114,-1.10112308114872),(10,115,-0.784447767571032),(10,116,1.56331064790796),(10,117,0.594744712668233),(11,89,1.97135837885678),(11,97,2.11605426190985),(11,105,-2.33145390179144),(11,112,0.256729331339457),(11,115,-1.70949430829798),(12,92,-1.16927091280862),(12,93,0.49740592669454),(12,94,-0.742591631824702),(12,97,-2.12215033417768),(12,98,3.04797509689627),(12,99,1.06447035126804),(12,108,0.119190038758507),(12,116,1.78977324747459),(13,86,0.723487044892727),(13,87,0.914090395825068),(13,90,0.326197088534196),(13,99,-0.735099337748344),(13,102,-0.242316965239418),(13,104,0.722540971098971),(13,113,-0.528214362010559),(13,116,-0.529755546739097),(13,118,1.92632831812494),(14,90,-2.72273934141057),(14,93,-0.835184789574877),(14,95,-0.404675435651723),(14,102,2.13352610858486),(14,104,-1.52306436353648),(14,106,0.464125492110965),(14,109,1.54365672780541),(14,110,1.33257545701468),(14,111,-1.70639667958617),(15,85,-2.28241065706351),(15,92,2.82857753227332),(15,99,-1.37602618488113),(15,101,1.92754905850398),(15,104,-2.63003936887722),(15,108,-0.392101809747612),(15,117,2.51432844019898),(16,86,-0.625934629352702),(16,87,-0.154972991119114),(16,88,-1.75881221961119),(16,90,2.72145756401257),(16,91,2.92497024445326),(16,95,-0.146153141880551),(16,97,-0.524887844477676),(16,98,-2.68962675862911),(16,99,1.44835505233924),(16,101,2.2058473464156),(16,108,-1.80320139164403),(16,110,0.348689230018006),(17,89,-2.58378093813898),(17,96,0.477416302987762),(17,99,0.818979461043123),(17,101,-0.523819696646016),(17,106,-1.07858516190069),(17,107,-1.4446241645558),(17,109,-1.39155247657704),(18,90,2.36246070741905),(18,91,-1.03366191595202),(18,93,0.976149784844508),(18,99,0.318689535203101),(18,102,0.867305520798364),(18,103,-1.91325113681448),(18,104,1.77175206762902),(18,110,1.27785576952422),(18,111,-0.323740348521378),(18,116,0.0798440504165778),(18,117,2.86767174291208),(18,118,-0.457312234870449),(19,87,0.0609683523056734),(19,89,1.82517471846675),(19,93,-1.74146244697409),(19,95,0.904416028321177),(19,101,2.45573290200507),(19,105,-2.63559373760186),(19,115,1.26937162388989),(20,88,2.27976317636647),(20,101,2.44749290444655),(20,103,-0.813043610950042),(20,104,2.64574114200262),(20,105,-0.436445204016236),(20,106,1.74375896481216),(20,111,-1.3814966277047),(20,116,0.108859523300882),(21,86,1.21677297280801),(21,87,3.00338755455184),(21,94,-2.63975951414533),(21,96,-2.03817865535447),(21,101,-0.554872280037843),(21,102,0.563707388531144),(21,105,0.941892757957701),(21,107,-0.163762321848201),(21,108,-3.16907254249702),(22,86,0.836542863246559),(22,88,0.276375621814631),(22,91,-1.51828058717612),(22,92,-1.37075411236915),(22,93,-2.15878780480361),(22,98,0.678746910000916),(22,106,-2.96318704794458),(22,115,-0.372737815485092),(22,117,-0.103648487807856),(23,85,0.606753746147038),(23,86,-1.25432599871822),(23,88,1.5416653950621),(23,90,-0.942075869014557),(23,97,0.0832544938505203),(23,104,0.933774834437086),(23,112,2.65373699148534),(23,114,-2.4608447523423),(23,115,0.0487838373973815),(23,116,-0.897793511764885),(24,89,0.802995391705069),(24,90,0.726599932859279),(24,91,0.733504745628223),(24,101,0.13418988616596),(24,107,-0.159947508163701),(24,108,-0.0477309488204596),(24,110,0.193815424054689),(24,112,-1.30225531785028),(25,90,-1.67696157719657),(25,92,-0.643833735160375),(25,94,-2.20049134800256),(25,98,-0.69716483046968),(25,105,0.401577806939909),(25,108,-1.30726035340434),(25,109,2.12456129642628),(25,115,-1.75994140446181),(26,85,-0.463896603289895),(26,87,0.267929624317148),(26,89,2.58571886349071),(26,95,1.24925992614521),(26,98,1.04882198553423),(26,100,-1.04304635761589),(26,101,2.31250953703421),(26,102,-0.928914761803034),(26,103,-1.87936033204138),(26,104,0.272057252723777),(26,107,3.35564745017853),(26,109,2.68541520432142),(26,112,0.0771507919553209),(26,113,0.709265419476913),(26,117,-0.172490615558336),(27,85,-1.23031556138798),(27,87,-0.554353465376751),(27,94,-0.609057893612476),(27,100,1.37727744376965),(27,102,-0.808359019745476),(27,103,-1.40552995391705),(27,104,0.270195623645741),(27,105,0.797776726584674),(27,108,-0.583971678823206),(27,110,-0.826914273506882),(27,114,-3.15021210364086),(28,87,1.53341776787622),(28,88,-0.605380413220618),(28,97,-1.44642475661489),(28,99,-2.99951933347575),(28,104,-0.214209418012024),(28,113,-2.42300180059206),(28,114,0.334315012054811),(29,88,-3.07812738425855),(29,91,2.36092715231788),(29,102,2.01424451429792),(29,105,-0.240691854609821),(29,116,-1.13791314432203),(30,95,2.58091982787561),(30,96,2.64041566209906),(30,99,-0.646473586230049),(30,101,-2.40719321268349),(30,104,2.66567735831782),(30,109,0.726317636646626),(30,110,0.614429151280252),(30,114,0.119129001739555),(30,118,3.43046357615894),(31,85,1.31807916501358),(31,92,1.04527420880764),(31,94,-0.723113193151646),(31,96,2.41915646839808),(31,99,-2.18955046235542),(31,103,1.41761528366955),(31,107,2.56035035248878),(31,108,1.40351573229163),(31,109,-1.12104403820917),(31,111,-1.56004516739402),(31,112,1.55636768700217),(31,117,-0.223364970854823),(32,86,1.95337534714805),(32,87,-1.49740592669454),(32,89,-0.728354747154149),(32,92,-1.71378978850673),(32,98,-3.39845728934599),(32,99,-0.189123203222755),(32,104,1.37042603839229),(32,106,1.57763145847957),(32,109,-0.940870387890255),(32,116,0.611789300210578),(32,118,-1.05302591021455),(33,96,-0.160443433942686),(33,98,-1.06537064729759),(33,108,0.633610034485916),(33,110,-1.43638416699728),(33,111,-0.0244453260902738),(33,114,2.24056978057192),(34,85,-0.279259620960112),(34,90,0.251556443983276),(34,99,-0.385601367229225),(34,104,-1.30701620532853),(34,109,1.37963499862667),(35,86,1.55323953978088),(35,87,2.03097628711814),(35,97,0.435689870906705),(35,98,2.29903561510056),(35,100,-1.70669423505356),(35,104,2.15030365916929),(35,107,1.09463789788507),(35,109,-3.08772545548875),(35,110,-0.63678395947142),(35,112,2.66106143375958),(36,85,-3.22101504562517),(36,87,1.3565172276986),(36,90,-2.40783410138249),(36,91,1.37398144474624),(36,104,0.207220679342021),(36,107,1.16338084047975),(36,109,0.199209570604571),(36,112,-1.19577623828852),(36,115,0.474715414899136),(36,117,-1.94521927549059),(36,118,2.52305673390912),(37,85,2.27489547410504),(37,86,-0.686742759483627),(37,87,1.79944761497848),(37,91,2.1843623157445),(37,99,0.224112674336985),(37,105,0.832323679311502),(37,111,0.454512161626026),(37,112,3.15617847224342),(37,118,3.12824640644551),(38,87,2.67104098635823),(38,90,-1.29636524552141),(38,103,1.71547593615528),(38,105,-0.892010254219184),(38,106,1.92747276223029),(38,111,-1.13859981078524),(38,115,0.982863856929228),(39,87,-1.48715170751061),(39,89,1.15817743461409),(39,91,-3.22565385906552),(39,94,3.4485381633961),(39,97,1.80878627887814),(39,98,-0.655354472487564),(39,107,-0.107745597705008),(39,108,1.68382824182867),(39,109,1.57306131168554),(39,111,-2.34638508255257),(39,113,3.10531937620167),(39,116,2.46530808435316),(39,118,-0.16933194982757),(40,88,-1.1596041749321),(40,92,1.42658772545549),(40,99,0.315912350840785),(40,104,-2.96307260353404),(40,110,2.49223303933836),(40,116,-2.24103518784143),(40,118,-0.102771080660421),(41,88,-1.10454115421003),(41,93,2.27940458388012),(41,96,-1.51039155247658),(41,97,-0.0842310861537521),(41,100,1.99221015045625),(41,101,3.01512192144536),(41,104,2.43778801843318),(41,105,-0.400265511032441),(41,106,-2.03424176763207),(41,107,-1.8168431653798),(41,109,0.715796380504776),(41,110,-0.255958738975189),(41,111,0.426404614398633),(41,112,1.4352244636372),(42,85,0.312616351817377),(42,86,1.73288674581133),(42,87,-1.71951963866085),(42,99,0.832392345957823),(42,100,-3.75594347972045),(42,103,0.384533219397565),(42,109,-1.36475722525712),(42,113,1.15042573320719),(43,85,-1.55584887234107),(43,88,-1.05357524338511),(43,89,-0.284989471114231),(43,93,-1.47963652455214),(43,97,1.19508957182531),(43,98,-1.81910153508103),(43,101,-1.53203680532243),(43,102,-2.12277596362194),(43,103,-1.30027924436171),(43,105,2.12736899929807),(43,110,-0.976653340250862),(43,112,2.77285073397015),(43,114,-3.31948301644948),(43,116,1.40446180608539),(44,89,3.0062257759331),(44,98,-0.371372112186041),(44,99,-2.81279946287423),(45,87,0.0836741233558154),(45,88,2.50417340617084),(45,90,-0.395428327280496),(45,91,1.37388225959044),(45,95,0.960257271034883),(45,98,-2.00845362712485),(45,108,1.42674794763024),(45,109,-1.55075228125858),(45,112,-1.05313272499771),(45,115,0.0385143589587085),(46,85,2.51069673757134),(46,89,0.294869838557085),(46,91,-1.94003112887967),(46,94,-2.49136326181829),(46,97,-0.270065919980468),(46,100,-1.34291360209967),(46,101,0.18961149937437),(46,108,1.56216620380261),(46,112,1.38647877437666),(47,86,0.524338511307108),(47,91,-1.48802148503067),(47,92,0.752075258644368),(47,94,1.96473586230049),(47,95,0.100787377544481),(47,100,1.82341990417188),(47,101,1.78357799005097),(47,104,2.6528595843379),(47,105,-1.40981780449843),(47,108,-1.52165288247322),(47,112,1.68269905697806),(47,114,-1.73734244819483),(47,118,0.109546189764092),(48,86,1.7862025818659),(48,91,1.25283822138127),(48,98,2.76903592028565),(48,99,-1.15008239997559),(48,100,0.128231147190771),(48,103,0.793122653889584),(48,105,1.68720053712577),(48,106,-2.6523178807947),(48,111,-1.8019043549913),(48,115,-1.16199224829859),(49,87,-2.84372234260079),(49,89,0.722342600787378),(49,93,2.78623310037538),(49,94,1.99766533402509),(49,95,2.19121372112186),(49,102,0.623737296670431),(49,113,-1.00834681234169),(49,114,1.09623249000519),(50,89,-1.20592364268929),(50,105,1.55569627979369),(50,107,1.10365611743522),(51,87,2.58017212439345),(51,92,0.60582293160802),(51,97,-0.603396710104678),(51,98,-0.797227393414106),(51,103,0.548768578142644),(51,106,0.596186712240974),(51,112,0.0361644337290567),(51,118,-1.35741752372814),(52,89,1.24199652088992),(52,97,2.10097811822871),(52,106,-1.91881313516648),(52,110,0.10719626453444),(52,111,-0.323847163304544),(52,113,-2.11568041016877),(52,114,0.0270241401409956),(52,118,2.82285531174657),(53,88,-0.598055970946379),(53,90,-0.0180059205908383),(53,92,-1.15880306405835),(53,94,-0.731223487044893),(53,104,-0.731330301828059),(53,105,-1.11416974394971),(53,109,-1.32886745811335),(54,85,-0.121570482497635),(54,91,1.07707449568163),(54,94,1.39689321573534),(54,96,-0.342646565141759),(54,111,-0.846888637958922),(54,112,-3.16086306344798),(54,113,2.02424695577868),(54,118,1.12228766747032),(55,87,1.14842677083651),(55,95,0.982200079348125),(55,107,-2.24753563035981),(55,110,2.29087191381573),(55,117,1.62863551744133),(56,107,0.839098788415174),(56,111,0.945684682760094),(56,113,-0.333346049378948),(56,114,-0.872203741569262),(57,87,1.04344309823908),(57,90,2.62233344523453),(57,91,-1.68813135166478),(57,92,1.01904354991302),(57,93,-2.03862117374187),(57,94,1.96444593646046),(57,95,0.0785699026459548),(57,96,-2.07292397839289),(57,100,-1.18210394604328),(57,102,-1.5282525101474),(57,103,0.32670064394055),(57,115,-1.42857142857143),(58,86,-2.34792626728111),(58,87,1.31789605395672),(58,89,2.95325327311014),(58,90,0.608500930814539),(58,95,-1.27762688070315),(58,96,1.38199255348369),(58,101,0.147495956297494),(58,103,-1.02864925077059),(58,109,-2.48939481795709),(58,110,1.69218268379772),(58,113,2.59587389751885),(58,114,-0.92413861507004),(58,115,1.53547776726585),(58,118,-2.79061250648518),(59,85,2.15326395458846),(59,86,-1.27113406781213),(59,90,2.2696157719657),(59,91,1.80867946409497),(59,93,-0.741859187597278),(59,97,-0.641514328440199),(59,98,-2.03479110080264),(59,100,-1.17806787316507),(59,102,1.59048738059633),(59,112,2.54181035798212),(59,114,-0.00993377483443703),(60,85,-0.194280831324198),(60,87,-1.50302133243812),(60,90,1.35831781975768),(60,91,1.85308389538255),(60,96,2.99314859462264),(60,100,-0.0258949552903836),(60,101,-1.19566179387799),(60,105,-2.34946745200964),(60,107,2.37621692556536),(60,109,1.20527512436293),(60,110,2.25388348033082),(60,114,-1.47188482314524),(61,89,0.421063875240333),(61,94,0.12602618488113),(61,96,0.651402325510422),(61,98,-1.56315805536058),(61,100,-1.721549119541),(61,102,1.35567033906064),(61,103,-1.79795983764153),(61,114,-2.53805658131657),(61,115,0.723517563402203),(62,93,-1.78383739738151),(62,95,1.31534775841548),(62,107,-1.51623584704123),(62,109,0.826738792077395),(62,110,0.32090212714011),(62,111,0.914044618060854),(63,87,1.12597277748955),(63,90,3.1464125492111),(63,93,2.24616229743339),(63,97,-1.82825708792383),(63,100,0.756561479537339),(63,103,-1.03352458265938),(63,104,-0.686696981719413),(63,108,-1.94053468428602),(63,111,0.433843501083407),(63,114,-0.437910092471084),(63,117,-2.03906369212928),(64,87,0.339136936552019),(64,94,1.01147495956298),(64,99,-0.434217352824488),(64,110,-2.22397534104434),(64,112,0.938947721793268),(64,116,-0.103869747001556),(65,87,0.615222632526627),(65,88,2.21217993713187),(65,90,-0.0687429425946836),(65,97,-1.63521225623341),(65,99,-0.289185766167181),(65,107,2.15730002746666),(65,110,1.11193426313059),(65,111,-0.320169682912687),(65,114,0.793572801904355),(65,116,-2.59302041688284),(65,117,0.0117496261482589),(66,85,-0.600558488723411),(66,102,2.81707205420087),(66,105,2.15841395306253),(66,108,0.69266335032197),(66,111,-0.196966460158086),(66,115,0.173787652211066),(66,118,1.91345713675344),(67,86,-2.13377025666066),(67,90,0.839472640156255),(67,92,0.921208838160344),(67,104,2.05140842921232),(67,109,-2.16054261909848),(67,111,-0.272286141544847),(68,87,1.32745597705008),(68,88,-0.00811029389324625),(68,90,1.13625751518296),(68,93,1.48978392895291),(68,95,-0.283310953093051),(68,96,1.05050813318278),(68,97,-0.561586352122562),(68,103,-1.49006622516556),(68,107,-2.2217474898526),(68,112,-0.735267189550462),(68,114,-2.2477111117893),(69,87,-2.09379863887448),(69,88,-0.265449995422224),(69,92,1.6560106204413),(69,94,0.201933347575304),(69,95,0.750488296151616),(69,97,-1.55285805841243),(69,108,-1.50961333048494),(69,113,-0.82448805200354),(69,114,-0.735251930295724),(69,118,0.135044404431288),(70,85,0.947599719229713),(70,86,-2.93189794610431),(70,87,1.24724570451979),(70,90,0.743003631702627),(70,96,-0.488448744163335),(70,97,-0.417813653981139),(70,99,0.501518295846431),(70,105,0.182988982818079),(70,107,1.64757225257118),(70,109,-0.00379955442976163),(70,110,0.0257881405072176),(70,111,1.98286385692923),(71,85,-0.40042573320719),(71,93,-1.39584032715842),(71,96,-0.369716483046968),(71,100,0.933492538224433),(71,104,0.762924588763085),(71,106,0.658185064241463),(71,111,2.5466628009888),(71,113,0.171361430707724),(72,94,3.38026062807093),(72,96,1.48983733634449),(72,99,0.766533402508621),(72,110,-1.65356913968322),(72,112,2.55406353953673),(72,114,0.623676259651479),(72,115,0.335703604235969),(72,116,0.718008972441786),(73,88,1.70519119846187),(73,94,0.855464339121677),(73,99,-2.85733359782708),(73,100,-0.293649098178045),(73,106,0.0778221991637928),(73,110,1.45977660451064),(73,115,-1.85564745017853),(74,90,-0.0397732474745933),(74,94,1.56178472243416),(74,99,-1.99552903836177),(74,102,-0.518723105563524),(74,106,-2.34533219397565),(74,107,1.53793450727866),(74,110,-1.60251167332987),(74,113,-0.740348521378216),(74,116,-2.8721198156682),(75,85,-0.126758629108554),(75,86,0.253303628650777),(75,93,0.995513779107028),(75,98,0.338557084871975),(75,103,-1.49785607470931),(75,105,3.56113620410779),(75,111,0.924375133518479),(75,117,-1.06503494369335),(76,86,1.05302591021455),(76,89,2.39859462263863),(76,92,1.2443159276101),(76,94,1.79921872615741),(76,99,1.23371837519456),(76,101,2.14827417828913),(76,103,2.20740379039888),(76,106,-0.273003326517533),(76,110,0.054246650593585),(76,113,-0.489745780816065),(77,88,0.368236335337382),(77,91,-1.94734031189917),(77,93,2.68322550126652),(77,98,-0.535325174718467),(77,101,-1.14833521530808),(77,102,-0.169980468153935),(77,103,1.31244850001526),(77,104,-0.147862178411206),(77,105,-1.69927060762352),(77,109,1.34975737784967),(78,88,-0.534440137943663),(78,93,-1.35592211676382),(78,94,2.04583880123295),(78,101,-0.894734031189917),(78,104,-2.00158696249275),(78,110,-1.3107394634846),(78,114,1.00703451643422),(78,116,-0.684835352641377),(78,117,0.145115512558367),(78,118,2.05282753990295),(79,87,2.27053132724998),(79,92,-1.74436170537431),(79,94,3.53557695242164),(79,107,0.739158299508652),(79,108,-1.50494399853511),(79,114,0.185811944944609),(79,118,-2.57635731070894),(80,87,1.58664204840236),(80,88,1.51615955076754),(80,91,-0.367961668752098),(80,99,1.02308725241859),(80,101,-1.27739799188208),(80,107,0.89150669881283),(80,113,0.243079927976318),(81,85,1.00154118472854),(81,86,2.75172429578539),(81,90,1.73078096865749),(81,93,1.2884914700766),(81,96,2.13635670033876),(81,97,-2.42547379985961),(81,106,-0.907498397778252),(81,107,2.28078554643391),(81,110,0.156468398083437),(81,115,2.53378398998993),(82,86,-0.642506179998169),(82,92,0.750694296090579),(82,110,-0.804925687429426),(82,112,2.75478377636036),(83,87,-1.16405224768822),(83,91,-0.324320200201422),(83,93,1.41610461745048),(83,101,-0.454908902249214),(83,103,-0.734008301034577),(83,105,2.79657887508774),(83,108,-2.51113162633137),(84,85,-1.30942716757714),(84,86,-0.343485824152348),(84,89,-2.4028595843379),(84,95,1.23488570818201),(84,99,0.524155400250252),(84,104,0.336771752067629),(84,111,0.585367900631733),(84,113,-2.47441022980438),(84,114,2.72997222815638),(35,105,2.02964873195593)]
orgname='BHNEAT_10_3'
cnodes = 119

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()