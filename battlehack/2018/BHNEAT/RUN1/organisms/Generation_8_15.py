edge = [(0,85,0.49984740745262),(0,89,1.07267983031709),(0,90,-0.398037659840693),(0,93,-0.528794213690603),(0,98,1.41511276589251),(0,101,-0.900708029419843),(0,105,1.7547990356151),(0,108,-1.92449720755638),(0,113,0.204428235724967),(0,114,2.14516129032258),(0,117,2.0776238288522),(0,118,-0.492889187292093),(1,86,-0.449980162968841),(1,92,-0.272057252723777),(1,98,2.17055269020661),(1,102,2.00944547868282),(1,104,-3.03877376628925),(1,107,-1.80912198248238),(1,108,-0.304956205938902),(1,109,0.256035035248878),(1,113,-2.1989806817835),(2,87,-2.45175023651845),(2,88,0.259941404461806),(2,100,1.32638019959105),(2,106,-0.71439252906888),(2,108,-1.85357219153417),(2,110,0.7842341380047),(2,113,2.1041291543321),(2,118,1.00204474013489),(3,89,-0.0688802758873257),(3,92,2.00737022003845),(3,97,-1.20899075289163),(3,99,2.94776757103183),(3,101,-2.21555223242897),(3,103,1.9155095065157),(3,105,2.10496841334269),(3,108,1.04336680196539),(3,109,1.52922147282327),(3,111,-2.31502731406598),(3,112,-1.49702444532609),(3,116,-1.89242225409711),(4,90,-1.59183019501328),(4,91,-1.00671407208472),(4,97,-1.60271004364147),(4,99,1.2078157902768),(4,101,2.3568376720481),(4,108,-1.24713888973663),(4,113,1.52070680867946),(4,118,0.774925992614521),(5,86,0.0609759819330424),(5,87,0.972670674764244),(5,89,2.15807061983093),(5,92,1.06973479415265),(5,93,-0.765037995544298),(5,99,0.459196752830592),(5,104,1.50213629566332),(5,114,2.37670522171697),(5,118,1.30751976073489),(6,89,-2.1372569963683),(6,92,1.16260261848811),(6,94,1.10034485915708),(6,100,-1.71851252784814),(6,101,0.808343760490738),(6,103,-2.64340647602771),(6,107,-1.03286843470565),(6,110,-0.123264259773553),(6,113,-0.114932706686605),(7,85,0.0268562883388776),(7,86,1.50759910885952),(7,90,-1.32711264381848),(7,95,-1.38702047791986),(7,99,-1.53587450788903),(7,100,-0.709723197119053),(7,104,1.11004974517045),(7,106,-1.03411969359416),(7,108,2.23096407971435),(7,112,2.14394054994354),(7,116,-0.374462111270486),(8,92,-2.63652455214087),(8,93,-0.99946592608417),(8,95,1.75704214606159),(8,99,-0.692220831934568),(8,106,1.02360606707968),(8,107,1.05020294808802),(8,115,2.55261391033662),(8,116,-1.1529587694937),(8,118,-0.207449568163091),(9,85,-0.445204016235847),(9,87,-1.62010559404279),(9,98,0.104571672719504),(9,101,-0.740256965849788),(9,103,-0.348063600573748),(9,105,-0.233420819727164),(9,106,1.72380748924223),(9,113,1.98536637470626),(10,89,-1.37496566667684),(10,96,1.60654011658071),(10,106,2.58160649433882),(10,108,2.51498458815271),(10,111,-2.64401684621723),(10,112,1.33671071504868),(10,114,0.933851130710776),(10,115,-1.71831415753655),(10,116,0.779900509659108),(10,117,0.0480971709341716),(11,89,0.30405590990936),(11,97,0.188467055269021),(11,105,-1.07153538621174),(11,112,-0.163136692403943),(11,115,2.02833643604846),(12,92,-2.09909360026856),(12,93,-0.304467909787286),(12,94,-1.31168553727836),(12,97,-0.729438154240547),(12,98,2.61880855739006),(12,99,3.01147495956297),(12,108,0.981795709097568),(12,116,-0.666051210058901),(13,86,0.392742698446608),(13,87,0.315622425000763),(13,90,-1.15684987945189),(13,99,-1.05615405743583),(13,102,-1.26285592211676),(13,104,1.80861842707602),(13,113,-0.73665578173162),(13,116,0.14859462263863),(13,118,0.376598406933805),(14,90,-1.33475753044221),(14,93,1.90293588061159),(14,95,-0.0321970274971771),(14,102,-1.24742881557665),(14,104,-1.7909787285989),(14,106,0.286584063234352),(14,109,-1.06949064607685),(14,110,-0.112552262947478),(14,111,0.162556840723899),(15,85,0.567674794763024),(15,92,0.0878627887813959),(15,99,-0.313165684987945),(15,101,-1.82866908780175),(15,104,-0.454451124607074),(15,108,1.29442732016968),(15,117,2.19190038758507),(16,86,1.46099734488968),(16,87,-1.90108951078829),(16,88,-0.0309610278633991),(16,90,-0.192907498397778),(16,91,0.667516098513748),(16,95,0.762916959135716),(16,97,0.0189519943845943),(16,98,-0.273094882045961),(16,99,-0.0789056062501907),(16,101,-1.37649159215064),(16,108,-1.54257332071902),(16,110,-1.9126560258797),(17,89,0.307428205206458),(17,96,-0.880428479873043),(17,99,-0.492782372508927),(17,101,0.50038148136845),(17,106,1.02941984313486),(17,107,1.84199041718802),(17,109,1.87392803735466),(18,90,1.84038819544053),(18,91,-2.1614734336375),(18,93,1.70516067995239),(18,99,2.01178014465773),(18,102,-0.82700582903531),(18,103,-0.980834376049074),(18,104,-0.619220557267983),(18,110,-0.657170323801386),(18,111,0.434339426862392),(18,116,2.7531510361034),(18,117,0.152897732474746),(18,118,-2.40961943418683),(19,87,-1.53758354441969),(19,89,-0.948866237372967),(19,93,1.31153294473098),(19,95,0.280465102084414),(19,101,-1.15964232306894),(19,105,-2.05566576128422),(19,115,-2.44846949674978),(20,88,-2.09491256447035),(20,101,-0.0265053254799036),(20,103,0.543122653889584),(20,104,-1.86632892849513),(20,105,-0.237388225959044),(20,106,-2.63869136631367),(20,111,-0.473570970793786),(20,116,1.67720572527238),(21,86,2.27546006653035),(21,87,-1.44018372142705),(21,94,0.165654469435713),(21,96,0.447935422833949),(21,101,1.71662038026063),(21,102,-0.021683400982696),(21,105,-3.46841334269234),(21,107,-1.7862025818659),(21,108,0.679769280068361),(22,86,-2.45884578997162),(22,88,-2.39590136417737),(22,91,-2.10148930326243),(22,92,-1.01025421918393),(22,93,2.47682119205298),(22,98,-2.68286690878018),(22,106,0.59118930631428),(22,115,-0.372661519211402),(22,117,1.89611499374371),(23,85,-1.03669850764489),(23,86,1.28214362010559),(23,88,0.555726798303171),(23,90,2.7202215643788),(23,97,-0.0395062105166784),(23,104,-2.8593707083346),(23,112,-0.591296121097446),(23,114,-0.665364543595691),(23,115,0.359385967589343),(23,116,-0.923047578356273),(24,89,-2.86489455854976),(24,90,-0.559068575090792),(24,91,0.944380016479995),(24,101,-1.86729026154363),(24,107,1.63896603289895),(24,108,-0.109302041688284),(24,110,1.91967528305918),(24,112,1.50788903469955),(25,90,-0.627811517685476),(25,92,2.27831354716636),(25,94,0.330256050294504),(25,98,0.888576921903134),(25,105,0.707144383068331),(25,108,-1.25041962950529),(25,109,-0.962309640797143),(25,115,-1.94572283089694),(26,85,0.261986144596698),(26,87,1.63931699575793),(26,89,1.8893246253853),(26,95,-0.127277443769646),(26,98,0.602755821405683),(26,100,2.52708517715995),(26,101,1.61790826136052),(26,102,0.759331034272286),(26,103,-2.87014374217963),(26,104,3.28598895229957),(26,107,1.02113406781213),(26,109,1.55722220526749),(26,112,0.842097231971191),(26,113,-2.31626331369976),(26,117,-2.69347209082308),(27,85,1.94006164738914),(27,87,1.23220007934812),(27,94,1.4169133579516),(27,100,-0.04368724631489),(27,102,0.836741233558153),(27,103,1.34525589770196),(27,104,-0.206045716727195),(27,105,1.91593676564837),(27,108,-1.92114017151402),(27,110,0.268623920407727),(27,114,-0.0815759758293405),(28,87,-1.39666432691427),(28,88,-1.12823877681814),(28,97,-0.11009552293466),(28,99,-2.65161595507675),(28,104,-1.37200537125767),(28,113,-0.833063753166295),(28,114,0.207510605182043),(29,88,-1.1938383129368),(29,91,0.909558397167882),(29,102,-1.12691122165593),(29,105,1.8310190130314),(29,116,-1.0733664967803),(30,95,2.00442518387402),(30,96,1.12875759147923),(30,99,-2.21489608447523),(30,101,-0.404568620868557),(30,104,-2.38174077578051),(30,109,1.52069154942473),(30,110,-1.6813104647969),(30,114,0.658314767906735),(30,118,3.20714438306833),(31,85,-0.329538865321818),(31,92,-1.03973509933775),(31,94,-1.08746604815821),(31,96,1.49360637226478),(31,99,0.185323648792993),(31,103,2.07516708883938),(31,107,0.673924985503708),(31,108,1.4801629688406),(31,109,1.54358043153172),(31,111,-1.24066896572771),(31,112,-0.0821710867641225),(31,117,1.46621601001007),(32,86,-0.687734611041597),(32,87,-1.05488753929258),(32,89,-1.98228400524918),(32,92,1.23274941251869),(32,98,-2.80468153935362),(32,99,2.28524124881741),(32,104,3.2630695516831),(32,106,-0.0339365825373089),(32,109,0.0258033997619557),(32,116,-0.532654805139317),(32,118,-1.61181981872005),(33,96,-1.26990569780572),(33,98,-1.43815424054689),(33,108,-1.89690847499008),(33,110,-2.14860988189337),(33,111,0.611178930021058),(33,114,-2.22821741386151),(34,85,2.78235724967193),(34,90,2.0962553788873),(34,99,-3.22969756157109),(34,104,-2.01840266121403),(34,109,2.64210943937498),(35,86,-1.54210028382214),(35,87,-0.764748069704276),(35,97,-2.10066530350658),(35,98,1.54408398693808),(35,100,0.731620227668081),(35,104,2.01289407025361),(35,107,-1.92158268990143),(35,109,-2.86249885555589),(35,110,-0.207464827417829),(35,112,2.81762138737144),(36,85,-2.16293832209235),(36,87,-0.594149601733451),(36,90,1.25621814630573),(36,91,2.88895840327158),(36,104,-0.589312417981506),(36,107,2.30019531846065),(36,109,0.0454725791192357),(36,112,-0.711905270546586),(36,115,-1.98431348612934),(36,117,-1.67184972685934),(36,118,-0.898678548539689),(37,85,-0.956175420392468),(37,86,-2.31666005432295),(37,87,-0.2226325266274),(37,91,1.09012115848262),(37,99,1.66827906125065),(37,105,-0.158268990142521),(37,111,1.96090578936125),(37,112,0.747199926755577),(37,118,-1.53648487807855),(38,87,-2.28638569292276),(38,90,2.54782250434889),(38,103,-1.07650990325633),(38,105,2.4872280037843),(38,106,0.0822473830378124),(38,111,1.93102816858425),(38,115,-1.87817011017182),(39,87,1.91428876613666),(39,89,-0.529343546861171),(39,91,-2.46887112033448),(39,94,1.42335276345103),(39,97,0.575457014679403),(39,98,0.914975432599872),(39,107,-0.075701162755211),(39,108,0.452177495651112),(39,109,-1.01841792046876),(39,111,0.664296395764031),(39,113,0.729758598590045),(39,116,-1.05900753807184),(39,118,0.829691457869198),(40,88,2.18417920468764),(40,92,1.50593585009308),(40,99,-0.377468184453871),(40,104,0.290276802880947),(40,110,2.31133457441939),(40,116,-0.0531632435071872),(40,118,1.8015839106418),(41,88,-3.02888576921903),(41,93,3.28960539567248),(41,96,-0.49679555650502),(41,97,-2.48565630054628),(41,100,2.40302743614002),(41,101,1.42953276161992),(41,104,1.99626148258919),(41,105,-0.535996581926939),(41,106,-0.141788995025483),(41,107,-1.89405499435408),(41,109,2.9342631305887),(41,110,-0.800027466658528),(41,111,0.861293374431593),(41,112,-2.60832544938505),(42,85,-0.675496688741722),(42,86,1.69107638782922),(42,87,1.59570604571673),(42,99,0.270546586504715),(42,100,-0.534257026886807),(42,103,2.0982238227485),(42,109,-2.69086275826289),(42,113,-1.13441877498703),(43,85,0.0607776116214485),(43,88,-0.499969481490524),(43,89,0.793038727988525),(43,93,1.04979094821009),(43,97,2.02237006744591),(43,98,1.49154637287515),(43,101,2.11107211523789),(43,102,3.1170995208594),(43,103,0.532090212714011),(43,105,-1.35502182073428),(43,110,-0.768669698171941),(43,112,1.10036011841182),(43,114,-0.398022400585955),(43,116,1.49571214941862),(44,89,-0.289391766106143),(44,98,2.11241492965484),(44,99,0.650898770104068),(45,87,2.58241523483993),(45,88,2.68541520432142),(45,90,-1.89877010406812),(45,91,2.79772331919309),(45,95,-1.36666463209937),(45,98,-1.42501602221747),(45,108,-2.74906155583361),(45,109,-1.4705648976104),(45,112,-0.476485488448744),(45,115,-1.21831415753655),(46,85,0.225775933103427),(46,89,0.475157933286538),(46,91,-0.677327799310282),(46,94,-0.444486831263161),(46,97,2.35280922879727),(46,100,1.06549272133549),(46,101,-0.713583788567766),(46,108,-2.72049623096408),(46,112,0.0560472426526688),(47,86,-2.15572069460128),(47,91,2.08287301248207),(47,92,-1.11310159611805),(47,94,-2.5718405713065),(47,95,-1.62907803582873),(47,100,-0.822840052491836),(47,101,-1.04380932035279),(47,104,0.0943784905545213),(47,105,-0.893063142796106),(47,108,2.69280068361461),(47,112,1.91669972838527),(47,114,-1.38119144260994),(47,118,1.74785607470931),(48,86,2.14563432721946),(48,91,-2.70598467970824),(48,98,1.94686727500229),(48,99,1.26572466200751),(48,100,-1.04608294930876),(48,103,0.0130924405652029),(48,105,1.75540940580462),(48,106,-2.26221503341777),(48,111,0.160664693136387),(48,115,0.268410290841395),(49,87,-1.85259559923093),(49,89,2.22232734153264),(49,93,0.868144779808954),(49,94,-0.273369548631245),(49,95,-1.44651631214332),(49,102,2.82045960875271),(49,113,1.10605182042909),(49,114,-0.0106357005523851),(50,89,1.42187261574145),(50,105,0.883220923490097),(50,107,-1.89494003112888),(51,87,-1.20717490157781),(51,92,0.841731009857479),(51,97,0.233497116000854),(51,98,-2.27733695486312),(51,103,-0.99511703848384),(51,106,-1.44073305459761),(51,112,-0.276421399578844),(51,118,0.0662709433271279),(52,89,2.61464278084658),(52,97,0.940168462172307),(52,106,-0.196234015930662),(52,110,-1.97912533951842),(52,111,0.340693380535295),(52,113,3.14197210608234),(52,114,0.814783165990173),(52,118,0.531678212836085),(53,88,-0.467513046662801),(53,90,-1.20532853175451),(53,92,0.518112735374004),(53,94,-1.12437818536943),(53,104,-0.994933927426984),(53,105,2.98728904080325),(53,109,-1.64473403118992),(54,85,-0.235175634022034),(54,91,2.2842341380047),(54,94,2.69827875606555),(54,96,0.224158452101199),(54,111,-0.43816949980163),(54,112,1.06183050019837),(54,113,-0.135395367290262),(54,118,2.11288796655171),(55,87,1.07853938413648),(55,95,0.160069582201605),(55,107,-2.59277626880703),(55,110,0.699560533463546),(55,117,-1.79073458052309),(56,107,0.994857631153295),(56,111,0.136478774376659),(56,113,1.58623004852443),(56,114,-1.95942564165166),(57,87,0.773277993102817),(57,90,-0.199713126010926),(57,91,-1.04235969115268),(57,92,-1.25214392529069),(57,93,0.0956144901882992),(57,94,1.0873439741203),(57,95,0.491714224677267),(57,96,-3.06653035065767),(57,100,0.966475417340617),(57,102,0.348368785668508),(57,103,-1.56353953672903),(57,115,0.748466444898831),(58,86,-0.719153416547136),(58,87,-1.43128757591479),(58,89,2.11159092989898),(58,90,2.41340372936186),(58,95,0.317987609485153),(58,96,0.907315286721396),(58,101,0.402935880611591),(58,103,1.75757621997742),(58,109,1.46717734305856),(58,110,0.218024231696524),(58,113,0.36603900265511),(58,114,-1.33068330942717),(58,115,1.77459028901028),(59,85,-1.368724631489),(59,86,1.43520920438246),(59,90,2.93301187170019),(59,91,2.71034882656331),(59,93,0.343836787011322),(59,97,0.438612018189032),(59,98,2.2696157719657),(59,100,-1.81626331369976),(59,102,2.48660237434004),(59,112,-2.24616229743339),(59,114,-1.00798059022797),(60,85,1.07078768272958),(60,87,2.11899166844691),(60,90,2.3984801782281),(60,91,-2.98883022553178),(60,96,1.66818750572222),(60,100,2.45602282784509),(60,101,-2.29406109805597),(60,105,0.961867122409741),(60,107,2.11085848567156),(60,109,-0.991882076479385),(60,110,-2.03747672963652),(60,114,-1.06968901638844),(61,89,0.528702658162175),(61,94,-0.479918820764794),(61,96,2.41117587817011),(61,98,-1.39233069856868),(61,100,-1.88512833033235),(61,102,-1.4036225470748),(61,103,-2.97402874843593),(61,114,-2.53530991546373),(61,115,2.18092898342845),(62,93,1.18401135288553),(62,95,0.353480636005738),(62,107,-1.77861873226112),(62,109,-2.59701834162419),(62,110,3.01118503372295),(62,111,2.21565904721213),(63,87,-1.77744376964629),(63,90,2.94048890652181),(63,93,-1.4509262367626),(63,97,-2.41917172765282),(63,100,-2.18279061250649),(63,103,-3.14365062410352),(63,104,0.0347605822931608),(63,108,0.758674886318552),(63,111,0.477752006591998),(63,114,0.741554002502518),(63,117,1.54060487685781),(64,87,0.0010681478316599),(64,94,-1.86977752006592),(64,99,-0.494644001586962),(64,110,-1.15498825037385),(64,112,1.66261787774285),(64,116,1.35445722830897),(65,87,2.60342722861415),(65,88,-1.69609668263802),(65,90,1.66112247077853),(65,97,-1.24037903988769),(65,99,-1.12825403607288),(65,107,-1.3317819757683),(65,110,-0.656468398083438),(65,111,0.69907223731193),(65,114,1.06610309152501),(65,116,1.52842799157689),(65,117,0.11154515213477),(66,85,1.15936765648366),(66,102,-0.934492019409772),(66,105,3.23529770805994),(66,108,2.38160344248787),(66,111,1.77269814142277),(66,115,2.72597430341502),(66,118,-1.66396069215979),(67,86,0.961607715079196),(67,90,-0.446348460341197),(67,92,-0.929883724478896),(67,104,1.21787163914914),(67,109,-2.63480025635548),(67,111,-1.03929258095035),(68,87,-2.41866817224647),(68,88,-1.37302774132511),(68,90,-2.42735068819239),(68,93,-0.675923947874386),(68,95,1.06953642384106),(68,96,-1.46290475173193),(68,97,1.32697531052583),(68,103,2.19283120212409),(68,107,2.23899044770653),(68,112,-1.98652607806635),(68,114,1.83996093630787),(69,87,0.762901699880978),(69,88,-0.910000915555284),(69,92,2.63214514603107),(69,94,-0.253349406414991),(69,95,2.22342600787378),(69,97,-1.63458662678915),(69,108,-1.82227546006653),(69,113,-0.82448805200354),(69,114,0.291329691457869),(69,118,0.990844447157201),(70,85,0.425305948057497),(70,86,1.46879482406079),(70,87,-0.25693533127842),(70,90,2.74288155766472),(70,96,-0.00350962858973968),(70,97,0.0388195440534684),(70,99,1.01016266365551),(70,105,-0.960997344889676),(70,107,0.750511185033723),(70,109,0.119876705221717),(70,110,-1.2481307412946),(70,111,-0.274117252113407),(71,85,1.00392162846767),(71,93,-1.36393322550127),(71,96,-0.831385235145116),(71,100,-1.15421002838221),(71,104,2.31902523880734),(71,106,-0.206213568529313),(71,111,1.45722830896939),(71,113,0.801950132755516),(72,94,0.951902829065828),(72,96,1.7864009521775),(72,99,-1.23944822534867),(72,110,1.86918240913114),(72,112,0.448133793145543),(72,114,0.623676259651479),(72,115,0.147251808221686),(72,116,0.718008972441786),(73,88,0.847773674733726),(73,94,0.233008819849239),(73,99,0.914944914090396),(73,100,0.639301736503189),(73,106,-2.39921262245552),(73,110,0.158848841822565),(73,115,-0.0560930204168828),(74,90,-0.479293191320536),(74,94,-0.730185857722709),(74,99,0.772194586016419),(74,102,-0.518723105563524),(74,106,-0.253990295113987),(74,107,-0.315073091830195),(74,110,0.748863185522019),(74,113,-1.29006317331462),(74,116,-0.316232795190283),(75,85,0.223822748496963),(75,86,0.715124973296304),(75,93,1.88863795892209),(75,98,0.600970488601337),(75,103,-1.19270912808618),(75,105,-1.34803308206427),(75,111,2.72099978637043),(75,117,-0.725363933225501),(76,86,0.13052766502884),(76,89,0.451857051301614),(76,92,-1.68706320383312),(76,94,2.352824488052),(76,99,-0.0566423535874508),(76,101,-0.320062868129521),(76,103,-0.936124759666738),(76,106,-1.67403180028687),(76,110,-1.66469313638722),(76,113,0.151066621906186),(77,88,-3.09500411999878),(77,91,-1.86333811456648),(77,93,2.07754753257851),(77,98,-1.75183874019593),(77,101,-0.506988738670003),(77,102,0.76555681020539),(77,103,1.94959868160039),(77,104,-0.802407910397656),(77,105,0.161458174382763),(77,109,0.143925290688803),(78,88,1.83768730735191),(78,93,0.661275063325907),(78,94,0.521897030549028),(78,101,-2.04470961638234),(78,104,2.3736228522599),(78,110,1.68083742790002),(78,114,1.02877895443587),(78,116,-1.40339365825373),(78,117,-0.962950529496139),(78,118,2.39240699484237),(79,87,-0.950392162846767),(79,92,2.71225623340556),(79,94,0.36939603869747),(79,107,-0.170079653309732),(79,108,-1.40078432569353),(79,114,2.19301431318094),(79,118,0.84743797112949),(80,87,0.363078707235939),(80,88,-0.941343424787133),(80,91,-2.38538773766289),(80,99,-0.0514999847407453),(80,101,-2.03382976775414),(80,107,0.89150669881283),(80,113,0.243079927976318),(81,85,0.690023499252296),(81,86,-0.456648457289346),(81,90,-2.07657094027528),(81,93,-2.58149967955565),(81,96,0.411374248481704),(81,97,-0.780907620471816),(81,106,0.500473036896878),(81,107,0.13556321909238),(81,110,1.36965544602802),(81,115,1.89465010528886),(82,86,-0.364024781029695),(82,92,-1.75914792321543),(82,110,1.26308481093783),(82,112,0.838831751457259),(83,87,-3.21901608325449),(83,91,0.102710043641469),(83,93,-0.814386425366985),(83,101,-0.454908902249214),(83,103,0.281075472273934),(83,105,2.96467482528153),(83,108,-0.982726523636586),(84,85,-0.752616962187567),(84,86,1.16586809900204),(84,89,-1.86803796502579),(84,95,0.344431897946104),(84,99,-1.24301889095737),(84,104,0.336771752067629),(84,111,-1.29094821008942),(84,113,-0.465834528641621),(84,114,0.710257271034883),(10,119,1),(119,109,2.65036469618824),(58,120,0.281365398113956),(120,118,-0.688497573778497),(95,104,1.35973693044832)]
orgname='BHNEAT_8_15'
cnodes = 121

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()