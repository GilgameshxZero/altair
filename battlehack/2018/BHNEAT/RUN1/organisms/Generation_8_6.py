edge = [(0,85,-0.0675679799798576),(0,89,-1.70946378978851),(0,90,0.570925016022217),(0,93,0.253303628650777),(0,98,-1.50611896114994),(0,101,0.708334604937895),(0,105,-0.753120517593921),(0,108,0.148014770958586),(0,113,1.87882625812555),(0,114,-1.29490035706656),(0,117,-1.00199896237068),(0,118,-2.21024201178014),(1,86,-0.941328165532395),(1,92,-1.51789910580767),(1,98,3.19147312845241),(1,102,-1.47798089541307),(1,104,0.60971404156621),(1,107,-0.885250404370251),(1,108,1.19075594347972),(1,109,1.98164311655019),(1,113,2.30867946409497),(2,87,-0.602481154820399),(2,88,1.03213599047823),(2,100,1.40183721427046),(2,106,-2.60798974578082),(2,108,0.222602008117924),(2,110,-0.704000976592303),(2,113,0.075869014557329),(2,118,-0.310480056154057),(3,89,1.22402111880856),(3,92,1.21358378856777),(3,97,0.0490585039826655),(3,99,0.986724448377941),(3,101,-0.13563951536607),(3,103,0.0361796929837946),(3,105,-1.06521805475021),(3,108,-1.04951628162481),(3,109,0.608096560563982),(3,111,-1.19365520187994),(3,112,-0.334101382488479),(3,116,0.300943021942808),(4,90,-0.572130497146519),(4,91,0.940061647389142),(4,97,0.76342051454207),(4,99,0.032624286629841),(4,101,-0.9383983886227),(4,108,-0.515381328775902),(4,113,-0.247917111728263),(4,118,-1.8926206244087),(5,86,-0.0134281441694388),(5,87,2.12550737022004),(5,89,-2.0135349589526),(5,92,1.27588732566301),(5,93,-1.34182256538591),(5,99,-1.38030640583514),(5,104,1.08456678975799),(5,114,-2.0142979216895),(5,118,0.687078463087863),(6,89,-0.712652974028748),(6,92,-0.823847163304544),(6,94,2.29010895107883),(6,100,-1.50488296151616),(6,101,-0.813257240516373),(6,103,-2.910367137669),(6,107,0.730460524307993),(6,110,1.49795525986511),(6,113,-1.54190191351054),(7,85,0.170674764244514),(7,86,1.67590868861965),(7,90,-0.580614642780847),(7,95,-0.586443678090762),(7,99,-1.08473464156011),(7,100,3.14255195776238),(7,104,-0.362773522141179),(7,106,3.07649464400159),(7,108,1.22638630329295),(7,112,-1.71214941862239),(7,116,-0.251472518082217),(8,92,-1.7917416913358),(8,93,-0.289452803125095),(8,95,-1.25307473982971),(8,99,1.76076540421766),(8,106,0.439710684530168),(8,107,-0.496169927060762),(8,115,-1.64429151280251),(8,116,1.06466872157964),(8,118,-2.93671987060152),(9,85,0.0645313882869961),(9,87,0.79970702230903),(9,98,-2.3519394512772),(9,101,0.131351664784692),(9,103,1.1931974242378),(9,105,0.528702658162175),(9,106,0.718375194555498),(9,113,0.263817255165258),(10,89,-2.68428601947081),(10,96,0.0407879879146703),(10,106,1.29738761558885),(10,108,0.594119083223975),(10,109,2.6422772911771),(10,111,-1.6668141727958),(10,112,-0.723136082033753),(10,114,-0.933271279030732),(10,115,-0.997344889675588),(10,116,-1.43917661061434),(10,117,0.121768852809229),(11,89,-0.135868404187139),(11,97,0.724524674214911),(11,105,0.902172917874691),(11,112,1.28658406323435),(11,115,0.600909451582385),(12,92,-2.43400372325816),(12,93,2.22498245185705),(12,94,-3.19322794274728),(12,97,-0.617664113284707),(12,98,-0.737479781487472),(12,99,1.87566759239479),(12,108,-2.04136783959471),(12,116,1.81586657307657),(13,86,3.21875667592395),(13,87,-0.452223273415326),(13,90,1.63917966246529),(13,99,-0.634540849024934),(13,102,0.791497543259987),(13,104,-2.0406811731315),(13,113,-0.675298318430128),(13,116,-2.36831263161107),(13,118,2.49168370616779),(14,90,-1.62556840723899),(14,93,1.81424909207434),(14,95,0.881374553666799),(14,102,1.13866084780419),(14,104,-1.80143131809442),(14,106,-1.69093905453658),(14,109,-0.386181218909269),(14,110,2.41270180364391),(14,111,0.522476882229072),(15,85,-2.37865840632344),(15,92,1.26602984710227),(15,99,-2.37487411114841),(15,101,-0.0460829493087558),(15,104,1.7209845271157),(15,108,-1.53067110202338),(15,117,-0.419568468276009),(16,86,-0.508590960417493),(16,87,0.832453382976776),(16,88,0.621814630573443),(16,90,2.05935850093081),(16,91,1.42551957762383),(16,95,-0.851741080965606),(16,97,-0.548081911679434),(16,98,-2.69595934934538),(16,99,1.40414136173589),(16,101,1.43037202063051),(16,108,1.16190069277016),(16,110,1.84493545335246),(17,89,-0.956038087099826),(17,96,1.87989440595721),(17,99,1.25409710989715),(17,101,-2.13397625659963),(17,106,-1.87520981475265),(17,107,-0.0424512466811121),(17,109,-0.546494949186682),(18,90,2.056260872219),(18,91,-2.99966429639576),(18,93,0.941282387768181),(18,99,1.84850611896115),(18,102,-1.20207831049532),(18,103,-1.51796014282662),(18,104,-1.38355662709433),(18,110,0.867381817072054),(18,111,-2.01355021820734),(18,116,-1.53729361857967),(18,117,0.579699087496567),(18,118,1.85389263588366),(19,87,-0.778603473006378),(19,89,1.43559068575091),(19,93,0.21759697256386),(19,95,-1.46984771263771),(19,101,2.2823877681814),(19,105,-0.792199468977935),(19,115,-1.90783410138249),(20,88,0.375255592516861),(20,101,1.70751060518204),(20,103,-2.20285653248695),(20,104,1.85216834009827),(20,105,-1.71613208410901),(20,106,1.77777947325053),(20,111,-0.275963621936705),(20,116,-1.18587298196356),(21,86,-1.11667226172674),(21,87,1.49714651936399),(21,94,0.787850581377606),(21,96,-1.66081728568377),(21,101,3.13252662739952),(21,102,-0.675679799798578),(21,105,-0.119922482985931),(21,107,-0.0460371715445418),(21,108,0.558992278817102),(22,86,0.730719931638539),(22,88,-0.659932248908963),(22,91,-0.821787163914914),(22,92,-0.366542558061464),(22,93,-0.264275032807398),(22,98,2.2926267281106),(22,106,-1.22481460005493),(22,115,-0.427060762352367),(22,117,0.171895504623554),(23,85,2.48771629993591),(23,86,-0.963408307138279),(23,88,-2.07100131229591),(23,90,1.53045747245704),(23,97,0.508529923398541),(23,104,0.529801324503311),(23,112,0.479445783867916),(23,114,-1.80187383648183),(23,115,-2.39753410443434),(23,116,0.409009063997314),(24,89,-0.65256202887051),(24,90,-2.46014282662435),(24,91,-0.97926267281106),(24,101,1.87786492507706),(24,107,2.47563097018342),(24,108,-0.25830866420484),(24,110,-0.754280220954008),(24,112,0.845484786523026),(25,90,-1.02249214148381),(25,92,0.432477797784356),(25,94,-1.96893215735343),(25,98,0.913068025757622),(25,105,1.7511062959685),(25,108,-0.54719687490463),(25,109,-1.73557237464522),(25,115,-0.423688467055269),(26,85,2.09294412060915),(26,87,-1.64889980773339),(26,89,2.18108157597583),(26,95,-1.08662678914762),(26,98,-1.70413830988495),(26,100,1.62663655507065),(26,101,0.493911557359539),(26,102,-1.90348521378216),(26,103,1.97485274819178),(26,104,0.701910458693197),(26,107,0.866481521042512),(26,109,0.19251075777459),(26,112,-1.40673543504135),(26,113,-1.09323404644917),(26,117,0.102404858546708),(27,85,0.673924985503708),(27,87,1.19541001617481),(27,94,1.90116580706198),(27,100,0.54315317239906),(27,102,-3.25952940458388),(27,103,-1.61442915128025),(27,104,0.592242194891201),(27,105,3.14827417828913),(27,108,-2.21076082644124),(27,110,-0.582598345896786),(27,114,-2.0669423505356),(28,87,-0.436628315073092),(28,88,-2.33753471480453),(28,97,-2.71774956511124),(28,99,-0.402615436262093),(28,104,0.535096285897397),(28,113,-1.93539231543931),(28,114,-2.13057344279305),(29,88,1.3275246436964),(29,91,2.39509262367626),(29,102,0.634311960203864),(29,105,2.25560777611621),(29,116,-1.39274269844661),(30,95,2.06195257423627),(30,96,0.273934141056551),(30,99,-0.345561082796716),(30,101,-0.899807733390301),(30,104,0.713446455275124),(30,109,-0.97499008148442),(30,110,-1.37623218482009),(30,114,-1.48240607928709),(30,118,-2.25241859187597),(31,85,0.334849085970641),(31,92,1.88650166325877),(31,94,0.00120548112430185),(31,96,2.91958372753075),(31,99,0.309915463728751),(31,103,0.32578508865627),(31,107,1.62259285256508),(31,108,1.02404858546709),(31,109,0.0884273812067019),(31,111,-0.441389202551347),(31,112,1.03862117374187),(31,117,0.575609607226783),(32,86,1.00856044190802),(32,87,-1.32863856929228),(32,89,-2.04171880245369),(32,92,-0.319299905392621),(32,98,-1.5811181981872),(32,99,1.4496444593646),(32,104,0.562410351878414),(32,106,-1.00434888760033),(32,109,1.23609118930631),(32,116,-2.24474318674276),(32,118,-0.0122074037903989),(33,96,2.59732352671895),(33,98,0.207861568041017),(33,108,-0.780999176000244),(33,110,-1.10744041261025),(33,111,-1.56700338755455),(33,114,1.84699545274209),(34,85,0.919736320078127),(34,90,-2.10097048860134),(34,99,0.509277626880703),(34,104,1.46673482467116),(34,109,-0.666859950560015),(35,86,-0.751136814477981),(35,87,0.32494582964568),(35,97,1.65051728873562),(35,98,0.749382000183111),(35,100,0.245078890346995),(35,104,2.82148197882015),(35,107,-2.25919370097964),(35,109,-1.04435865352336),(35,110,-0.345103305154576),(35,112,0.519272438734092),(36,85,-1.73377178258614),(36,87,2.10005493331706),(36,90,-1.96493423261208),(36,91,-0.488372447889645),(36,104,1.62190618610187),(36,107,-0.592120120853297),(36,109,2.45979186376537),(36,112,-0.334543900875881),(36,115,-0.884197515793329),(36,117,-2.45945616016114),(36,118,1.76116214484085),(37,85,-1.03697317423017),(37,86,0.0860621967223121),(37,87,-1.84484389782403),(37,91,1.04533524582659),(37,99,0.227515488143559),(37,105,0.69586779381695),(37,111,0.225241859187597),(37,112,0.93099765007477),(37,118,1.71765800958281),(38,87,-0.538438062685018),(38,90,0.963835566270943),(38,103,0.200689718314158),(38,105,0.685110019226661),(38,106,0.955687124240852),(38,111,-0.998214667195654),(38,115,-1.38300729392376),(39,87,-1.79744865260781),(39,89,0.10757774590289),(39,91,-2.56294442579424),(39,94,2.2453230384228),(39,97,1.32628864406262),(39,98,2.03653065584277),(39,107,-2.19696646015809),(39,108,2.26413769951476),(39,109,0.106952116458632),(39,111,-1.77022614215522),(39,113,0.904629657887509),(39,116,0.519714957121494),(39,118,-3.33455916013062),(40,88,-2.13560899685659),(40,92,1.96668904690695),(40,99,2.51667836542863),(40,104,-2.57243568224128),(40,110,0.768913846247749),(40,116,-0.775994140446181),(40,118,0.619067964720603),(41,88,-0.694296090578936),(41,93,-0.0160069582201606),(41,96,1.20735801263466),(41,97,2.19443342387158),(41,100,0.124744407483139),(41,101,2.32517471846675),(41,104,1.752067629017),(41,105,-1.59826960051271),(41,106,-0.0122379222998749),(41,107,-1.69194616534928),(41,109,1.54490798669393),(41,110,0.431775872066408),(41,111,-0.710638752403333),(41,112,0.440321054719688),(42,85,2.79476302377392),(42,86,1.13708914456618),(42,87,0.660390026551103),(42,99,-0.569170201727348),(42,100,-2.3404950102237),(42,103,-0.65614795373394),(42,109,1.31324198126163),(42,113,1.36695455793939),(43,85,-2.24234748374889),(43,88,0.938444166386914),(43,89,-0.799264503921628),(43,93,-0.65591906491287),(43,97,-1.7958006530961),(43,98,-1.18454542680136),(43,101,-0.718146305734428),(43,102,-1.01586962492752),(43,103,1.10774559770501),(43,105,1.76084170049135),(43,110,-1.81781975768303),(43,112,1.41889706106754),(43,114,-2.12887966551714),(43,116,1.43391216772973),(44,89,-0.0266273995178076),(44,98,-0.453276161992248),(44,99,1.26720480971709),(45,87,1.89277321695608),(45,88,2.72806482131413),(45,90,-1.05279702139348),(45,91,3.13930173650319),(45,95,0.804422132023072),(45,98,0.315836054567095),(45,108,1.70465712454604),(45,109,0.0884731589709158),(45,112,-1.57858516190069),(45,115,-1.65472884304331),(46,85,1.64610736411634),(46,89,2.41018402661214),(46,91,-0.100833155308695),(46,94,-1.9012115848262),(46,97,-0.347315897091586),(46,100,0.116138187810907),(46,101,-2.02519302957244),(46,108,-1.63403729361858),(46,112,-2.05977050080874),(47,86,-2.57153538621174),(47,91,-0.0834070863979003),(47,92,0.877697073274941),(47,94,0.898342844935453),(47,95,-1.09324930570391),(47,100,1.01666310617389),(47,101,2.32978301339763),(47,104,0.707953123569445),(47,105,-0.0486159855952635),(47,108,-0.787911618396558),(47,112,-1.62327951902829),(47,114,0.898007141331217),(47,118,0.741203039643544),(48,86,-1.18156987212745),(48,91,-0.575106051820429),(48,98,-1.43862727744377),(48,99,1.34011352885525),(48,100,1.25707266457106),(48,103,2.34221930600909),(48,105,1.60626544999542),(48,106,-0.738120670186468),(48,111,-0.0663167210913419),(48,115,-0.312814722128971),(49,87,-0.613467818231758),(49,89,-2.3053987243263),(49,93,2.12771996215705),(49,94,0.247352519302957),(49,95,1.31800286873989),(49,102,1.59659108249153),(49,113,-1.25623340556047),(49,114,1.68008972441786),(50,89,0.998046815393536),(50,105,-1.44627216406751),(50,107,-0.291573839533677),(51,87,1.29053621021149),(51,92,0.27774895474105),(51,97,-0.433256019775994),(51,98,-2.42672505874813),(51,103,-0.513168736838893),(51,106,-1.99708548234504),(51,112,0.507217627491073),(51,118,-0.499816888943144),(52,89,0.614764854884487),(52,97,1.75928525650807),(52,106,-0.346308786278878),(52,110,-1.34655293435469),(52,111,-0.522141178624836),(52,113,-1.03006073183386),(52,114,-1.25589770195624),(52,118,2.24353770561846),(53,88,1.82869960631123),(53,90,1.12239448225349),(53,92,-0.427655873287149),(53,94,0.681325724051637),(53,104,1.28540910061953),(53,105,-1.31490524002808),(53,109,-0.491134372997223),(54,85,0.282113101596118),(54,91,0.98055970946379),(54,94,1.11047700430311),(54,96,-1.86437574388867),(54,111,2.11798455763421),(54,112,-1.4864650410474),(54,113,1.04597613452559),(54,118,1.53416547135838),(55,87,-0.739524521622364),(55,95,-1.73093356120487),(55,107,-0.632343516342662),(55,110,-1.94715720084231),(55,117,0.576433606982635),(56,107,-1.19774468214972),(56,111,-0.5405590990936),(56,113,-2.81659901730399),(56,114,-0.661397137363811),(57,87,1.01971495712149),(57,90,-0.0214850306711021),(57,91,-0.768608661152989),(57,92,3.00816370128483),(57,93,-0.111529892880032),(57,94,0.241523483993042),(57,95,-0.133915219580676),(57,96,0.768272957548753),(57,100,0.399594103823969),(57,102,-2.00514236884671),(57,103,-0.416577654347362),(57,115,-2.3612170781579),(58,86,-1.54597613452559),(58,87,-0.127185888241218),(58,89,0.350825525681326),(58,90,1.75321207312235),(58,95,2.29148228400525),(58,96,-0.291680654316843),(58,101,-2.09500411999878),(58,103,0.0531174657429732),(58,109,-1.50341807306131),(58,110,0.0644398327585681),(58,113,0.173009430219428),(58,114,-0.414670247505112),(58,115,-1.32753990295114),(58,118,1.84499649037141),(59,85,-1.69992675557726),(59,86,-2.44750816370128),(59,90,2.36132389294107),(59,91,1.90862758262886),(59,93,0.396176030762658),(59,97,-0.449461348307749),(59,98,-1.12862025818659),(59,100,-1.76404614398633),(59,102,0.4315317239906),(59,112,1.40430921353801),(59,114,-1.92220831934568),(60,85,-0.157963805047761),(60,87,-1.24307992797632),(60,90,-1.97759941404462),(60,91,-1.30802331614124),(60,96,-1.10090945158238),(60,100,0.0686361278115177),(60,101,-2.51470992156743),(60,105,1.52325510422071),(60,107,2.33474227118748),(60,109,1.56933805352947),(60,110,-1.1143681142613),(60,114,-0.920148319956053),(61,89,-1.16901150547807),(61,94,0.245979186376537),(61,96,-0.281319620349742),(61,98,-0.810876796777245),(61,100,1.10057374797815),(61,102,0.144581438642537),(61,103,-1.54690694906461),(61,114,-0.582201605273598),(61,115,-0.010681478316599),(62,93,-1.7183751945555),(62,95,-2.3871578112125),(62,107,-0.701010162663656),(62,109,-0.654362620929594),(62,110,-0.536667989135411),(62,111,0.73970763267922),(63,87,0.744453260902738),(63,90,0.349162266914884),(63,93,-0.516449476607562),(63,97,2.52681051057466),(63,100,1.18782616657002),(63,103,0.484847560045168),(63,104,1.57869197668386),(63,108,-0.579638050477615),(63,111,-0.454130680257576),(63,114,0.418286690878018),(63,117,0.304757835627308),(64,87,-0.0175481429486984),(64,94,1.80449842829676),(64,99,0.0310373241370891),(64,110,-1.03976561784722),(64,112,1.93667409283731),(64,116,0.15225684377575),(65,87,0.350474562822352),(65,88,2.00823999755852),(65,90,0.520493179113132),(65,97,-0.469557786797693),(65,99,-1.05149998474075),(65,107,2.04847865230262),(65,110,-1.03282265694143),(65,111,-1.45782341990417),(65,114,-1.31426435132908),(65,116,-2.54747154148991),(65,117,-0.179525131992553),(66,85,-0.903073213904233),(66,102,2.83645130771813),(66,105,-0.612399670400098),(66,108,-0.291909543137913),(66,111,-1.60046693319498),(66,115,-0.532486953337199),(66,118,1.29519028290658),(67,86,-0.812356944486831),(67,90,0.594180120242927),(67,92,-0.201193273720511),(67,104,3.27970213934751),(67,109,-0.657734916226692),(67,111,-1.55102694784387),(68,87,-0.112598040711692),(68,88,2.67816705832087),(68,90,-0.712286751915036),(68,93,-0.63068025757622),(68,95,0.0625782036805322),(68,96,2.28025147251808),(68,97,-2.93737601855525),(68,103,2.38311410870693),(68,107,-1.00924710837123),(68,112,-1.47053437910092),(68,114,-1.25841547898801),(69,87,0.762901699880978),(69,88,-0.972563859981079),(69,92,1.79433576464125),(69,94,1.19975890377514),(69,95,0.599917600024415),(69,97,-0.210974456007569),(69,108,-2.47697378460036),(69,113,-2.45597705008087),(69,114,2.41752372814112),(69,118,-0.828058717612232),(70,85,-1.13144322031312),(70,86,-0.302499465926084),(70,87,-1.29181798760949),(70,90,-1.72350230414747),(70,96,-0.136265144810327),(70,97,-0.484344004638813),(70,99,0.259849848933378),(70,105,-1.33484908597064),(70,107,2.19016083254494),(70,109,-0.606616412854396),(70,110,-0.766853846858119),(70,111,0.796319467757195),(71,85,-0.936902981658376),(71,93,-0.46134830774865),(71,96,-0.289376506851405),(71,100,1.73578600421155),(71,104,-0.726722006897183),(71,106,1.52258369701224),(71,111,2.69032868434706),(71,113,0.519196142460402),(72,94,0.951902829065828),(72,96,-2.4219336527604),(72,99,0.88570818201239),(72,110,2.18008972441786),(72,112,2.04104739524522),(72,114,-1.72032837916196),(72,115,0.524155400250252),(72,116,2.21364482558672),(73,88,2.56260872219001),(73,94,-1.26163518173772),(73,99,-2.35244300668355),(73,100,-0.650410473952452),(73,106,0.203176976836451),(73,110,2.25165562913907),(73,115,-0.118564409314249),(74,90,0.879558702352977),(74,94,0.329187902462844),(74,99,-1.47419660023804),(74,102,-2.94532609027375),(74,106,-2.60420545060579),(74,107,0.163991210669271),(74,110,-0.598529007843257),(74,113,-0.740348521378216),(74,116,-2.16771446882534),(75,85,-0.585833307901242),(75,86,2.67815179906613),(75,93,-0.286538285470138),(75,98,0.076143681142613),(75,103,-2.18028809472945),(75,105,2.64432203131199),(75,111,2.64691610461745),(75,117,-1.4047059541612),(76,86,-0.379589220862453),(76,89,1.15157017731254),(76,92,1.28402050843837),(76,94,0.744651631214332),(76,99,1.09886471144749),(76,101,-0.343333231604968),(76,103,-1.50575273903623),(76,106,1.16245002594073),(76,110,-1.49189733573412),(76,113,-1.32015442365795),(77,88,0.508316293832209),(77,91,1.67294839320048),(77,93,1.5873439741203),(77,98,0.0988494521927549),(77,101,-0.831965086825159),(77,102,-0.546998504593036),(77,103,1.94456312753685),(77,104,2.54356517227699),(77,105,0.867122409741508),(77,109,0.162999359111301),(78,88,0.523621326334422),(78,93,-0.465773491622669),(78,94,1.05597094637898),(78,101,-1.05217139194922),(78,104,-0.0575579088717307),(78,110,1.5361033967101),(78,114,-2.20435193945128),(78,116,0.153050325022126),(78,117,0.317835016937773),(78,118,2.18390453810236),(79,87,0.894375438703574),(79,92,-0.248878444776757),(79,94,2.55764946440016),(79,107,-2.49824518570513),(79,108,2.84907071138646),(79,114,0.772301400799585),(79,118,0.250801110873745),(80,87,-0.273232215338603),(80,88,-0.76326792199469),(80,91,-2.78907132175665),(80,99,1.75217444380016),(80,101,-0.674810022278512),(80,107,3.35427411725211),(80,113,-0.250251777703177),(81,85,0.275429548020875),(81,86,1.21080660420545),(81,90,-3.28090762047182),(81,93,-0.181142612994781),(81,96,-0.570482497634816),(81,97,1.39269692068239),(81,106,0.500473036896878),(81,107,0.602649006622517),(81,110,-0.613208410901212),(81,115,1.35142063661611),(82,86,2.42567217017121),(82,92,-1.59892574846644),(82,110,-0.10635700552385),(82,112,0.838831751457259),(83,87,1.19525742362743),(83,91,0.991027558214057),(83,93,0.776970732749412),(83,101,-1.62880336924345),(83,103,-1.69476912747581),(83,105,2.44010742515336),(83,108,-0.398068178350169),(84,85,-0.752616962187567),(84,86,-0.648991363261818),(84,89,-0.208273567918943),(84,95,1.24541459395123),(84,99,0.457167271950438),(84,104,-1.05479598376415),(84,111,-1.92451246681112),(84,113,-0.465834528641621),(84,114,-0.995117038483841),(35,105,-0.954832605975524)]
orgname='BHNEAT_8_6'
cnodes = 119

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()