edge = [(0,85,2.13371684926908),(0,89,-0.924985503707999),(0,90,0.284783471175268),(0,93,1.10919522690512),(0,98,-1.61435285500656),(0,101,1.48454237495041),(0,105,2.11642811365093),(0,108,2.31044953764458),(0,113,2.34148686178167),(0,114,0.857005523850215),(0,117,1.31130405590991),(0,118,-1.64548173467208),(1,86,-0.917798394726402),(1,92,0.782189397869808),(1,98,0.895733512375256),(1,102,0.686162907803583),(1,104,-1.72803430280465),(1,107,0.649678029725028),(1,108,1.26798303170873),(1,109,-1.84247871333964),(1,113,-2.09524826807459),(2,87,-0.101931821649831),(2,88,1.25714896084475),(2,100,-1.89135410626545),(2,106,-2.2240363780633),(2,108,-0.143818475905637),(2,110,-1.22003845332194),(2,113,1.6197088534196),(2,118,0.00131229590746787),(3,89,0.308755760368664),(3,92,-1.64561906796472),(3,97,-1.79996642963958),(3,99,0.27721488082522),(3,101,1.84842982268746),(3,103,1.18858912930692),(3,105,0.193548387096774),(3,108,1.9773094882046),(3,109,0.198217719046602),(3,111,0.513611255226295),(3,112,1.81145664845729),(3,116,-0.397167882320627),(4,90,-1.49568163090915),(4,91,0.785088656270028),(4,97,-0.581148716696677),(4,99,-1.21999267555773),(4,101,-1.82116153447066),(4,108,-0.0928067873165075),(4,113,0.507721182897427),(4,118,1.34945219275491),(5,86,-0.549790948210089),(5,87,-1.99427777947325),(5,89,-0.886333811456649),(5,92,0.764748069704276),(5,93,0.577013458662679),(5,99,2.05172887356182),(5,104,-0.951872310556352),(5,114,-0.155049287392804),(5,118,-1.10115359965819),(6,89,-0.385601367229225),(6,92,-2.49519333475753),(6,94,-0.507080294198431),(6,100,0.832956938383129),(6,101,1.53523361919004),(6,103,1.51315347758415),(6,107,-1.32549516281625),(6,110,-1.09843745231483),(6,113,-1.68881801812799),(7,85,-1.65776543473617),(7,86,1.18640705587939),(7,90,-1.50808740501114),(7,95,0.551072725608081),(7,99,2.45132297738578),(7,100,0.754173406170843),(7,104,-1.4153874324778),(7,106,2.63310647907956),(7,108,1.3231452375866),(7,112,0.15660573137608),(7,116,1.63357951597644),(8,92,1.77404095583972),(8,93,0.336420789208655),(8,95,2.12666707358013),(8,99,-0.626148258919034),(8,106,-1.09837641529588),(8,107,-0.699789422284616),(8,115,2.07715079195532),(8,116,1.18659016693625),(8,118,0.797494430372021),(9,85,1.43418683431501),(9,87,-1.99775688955351),(9,98,-0.824381237220374),(9,101,-1.28510391552477),(9,103,-0.881679738761559),(9,105,2.39791558580279),(9,106,-0.118106631672109),(9,113,0.494552446058535),(10,89,-2.65558336130863),(10,96,-2.24852748191778),(10,106,0.324304940946684),(10,108,-2.45025482955412),(10,109,1.10753196813868),(10,111,-0.671330912198248),(10,112,0.885113071077609),(10,114,-1.92153691213721),(10,115,-2.37324137089145),(10,116,-0.548677022614215),(10,117,0.930249946592608),(11,89,-2.27503280739769),(11,97,1.35685293130284),(11,105,-0.125049592577898),(11,112,1.35796685689871),(11,115,1.22211371196631),(12,92,1.72194586016419),(12,93,1.19139683217872),(12,94,-1.49613940855129),(12,97,1.45643482772301),(12,98,0.305566576128422),(12,99,-0.610904263435774),(12,108,1.6989806817835),(12,116,2.50015259254738),(13,86,2.50019837031159),(13,87,-2.37641529587695),(13,90,1.33062227240822),(13,99,1.32984405041658),(13,102,1.53146458326975),(13,104,1.54568620868557),(13,113,0.608096560563982),(13,116,0.0576799829096347),(13,118,0.301507614368114),(14,90,-2.56733909115879),(14,93,-1.4544206060976),(14,95,-0.0146794030579547),(14,102,1.11198767052217),(14,104,1.3121433149205),(14,106,0.709677419354839),(14,109,0.54429761650441),(14,110,-1.59672841578417),(14,111,-0.514923551133763),(15,85,-0.705603198339793),(15,92,-1.00131229590747),(15,99,0.623722037415693),(15,101,0.242316965239418),(15,104,-2.49320963164159),(15,108,-1.42031617175817),(15,117,0.0732444227423933),(16,86,2.1217993713187),(16,87,0.315713980529191),(16,88,0.849299600207526),(16,90,0.165898617511521),(16,91,-0.422238837855159),(16,95,0.627994628742332),(16,97,-0.605563524277474),(16,98,0.897961363567004),(16,99,0.204260383922849),(16,101,1.97172460097049),(16,108,0.592837305825983),(16,110,1.26779992065188),(17,89,0.395458845789972),(17,96,-2.15877254554888),(17,99,-2.33359782708213),(17,101,-1.0462202826014),(17,106,1.16718039490951),(17,107,1.52394177068392),(17,109,0.202810754722739),(18,90,-0.333597827082125),(18,91,1.53540147099216),(18,93,1.83440656758324),(18,99,-2.02063051240577),(18,102,-1.77639088106937),(18,103,-0.838038270210883),(18,104,0.310037537766655),(18,110,-1.9949797051912),(18,111,0.00778221991637928),(18,116,2.24506363109226),(18,117,1.37900936918241),(18,118,-0.691549424726096),(19,87,2.76792199468978),(19,89,-0.445142979216895),(19,93,-0.45661793877987),(19,95,1.07531968138676),(19,101,2.17322305978576),(19,105,-1.02386547441023),(19,115,-1.31939146092105),(20,88,-2.17177343058565),(20,101,-0.201498458815271),(20,103,-0.287484359263894),(20,104,-1.23056733909116),(20,105,-1.84536271248512),(20,106,-1.39852595599231),(20,111,2.49166844691305),(20,116,-1.65378276924955),(21,86,0.586657307657094),(21,87,-0.0952635273293253),(21,94,-1.31984923856319),(21,96,-0.228278450880459),(21,101,2.06968901638844),(21,102,-1.50073244422742),(21,105,-0.761940366832484),(21,107,2.2926267281106),(21,108,0.224921414838099),(22,86,-2.54017761772515),(22,88,0.0300607318338572),(22,91,1.41665395062105),(22,92,2.11803033539842),(22,93,1.33617664113285),(22,98,0.258964812158574),(22,106,0.160145878475295),(22,115,-1.68184453871273),(22,117,0.753028962065493),(23,85,0.937986388744774),(23,86,1.48068178350169),(23,88,0.801339762565996),(23,90,-2.14743491927854),(23,97,0.314706869716483),(23,104,1.37513351847896),(23,112,0.696462904751732),(23,114,0.355647450178533),(23,115,-0.337839899899289),(23,116,2.35038300729392),(24,89,0.26029236732078),(24,90,-1.54770043031098),(24,91,0.443723868526261),(24,101,-1.04135258033998),(24,107,2.32615131076998),(24,108,-1.70194097720267),(24,110,1.00291451765496),(24,112,-0.450148014770959),(25,90,2.43139439069796),(25,92,1.45677053132725),(25,94,1.35285500656148),(25,98,0.652684102908414),(25,105,2.28560747093112),(25,108,-0.313226722006897),(25,109,0.0609607226783044),(25,115,1.3084505752739),(26,85,2.39806817835017),(26,87,0.121555223242897),(26,89,2.22928556169317),(26,95,-0.109210486159856),(26,98,2.42323068941313),(26,100,0.861186559648427),(26,101,-1.48236030152287),(26,102,1.92724387340922),(26,103,1.72038941618091),(26,104,2.87943662831507),(26,107,2.22988067262795),(26,109,0.961378826258126),(26,112,1.74034852137822),(26,113,-0.505264442884609),(26,117,1.85395367290262),(27,85,1.28582110049745),(27,87,-0.423688467055269),(27,94,0.697882015442366),(27,100,1.48263496810816),(27,102,-1.76889858699301),(27,103,-2.01428266243477),(27,104,0.0657063509018219),(27,105,-0.780846583452864),(27,108,-1.14960173345134),(27,110,-1.11775566881314),(27,114,1.02572710348827),(28,87,0.27973265785699),(28,88,-1.02819910275582),(28,97,-0.887356181524094),(28,99,-2.51617481002228),(28,104,2.6532792138432),(28,113,-1.2796563615833),(28,114,-0.25579088717307),(29,88,-1.10734885708182),(29,91,0.266502883999145),(29,102,0.349757377849666),(29,105,0.395733512375256),(29,116,0.236289559617908),(30,95,-0.34423352763451),(30,96,2.36832789086581),(30,99,-1.34176152836695),(30,101,-2.50856044190802),(30,104,-0.0659352397228919),(30,109,2.04426709799493),(30,110,1.89374980925932),(30,114,-0.709418012024293),(30,118,2.20911282692953),(31,85,1.91515854365673),(31,92,0.0155644398327586),(31,94,0.967345194860683),(31,96,0.538712729270302),(31,99,-0.60353404339732),(31,103,-0.584810937833796),(31,107,1.1223181859798),(31,108,-1.18259224219489),(31,109,-0.187520981475265),(31,111,0.579317606128117),(31,112,-1.84330271309549),(31,117,-1.37791070284127),(32,86,-2.29941709646901),(32,87,0.17017120883816),(32,89,-1.29528183843501),(32,92,-1.45512253181555),(32,98,1.58528397473067),(32,99,-1.62640766624958),(32,104,2.58514664143803),(32,106,1.21791741691336),(32,109,0.0594042786950285),(32,116,-2.66153447065645),(32,118,0.0879238258003479),(33,96,-0.228980376598407),(33,98,-1.23618274483474),(33,108,0.610065004425184),(33,110,-1.76389355143895),(33,111,-0.460448011719108),(33,114,-1.44260994293039),(34,85,-1.7230750450148),(34,90,-1.17836542863247),(34,99,2.05195776238289),(34,104,-0.110950041199988),(34,109,1.02649006622517),(35,86,0.460753196813868),(35,87,-0.885509811700797),(35,97,0.880275887325663),(35,98,-1.83979308450575),(35,100,-0.40972624897),(35,104,-0.363246559038057),(35,107,-0.113269447920164),(35,109,-0.115009002960295),(35,110,-2.31498153630177),(35,112,1.91663869136631),(36,85,-1.68630024109622),(36,87,0.390041810357982),(36,90,-2.25646229438154),(36,91,0.36603900265511),(36,104,-1.83071382793664),(36,107,0.439283425397504),(36,109,0.0770592364268929),(36,112,2.07287820062868),(36,115,-0.319681386761071),(36,117,0.336176641132847),(36,118,-1.4739371929075),(37,85,-1.72865993224891),(37,86,1.09213538010804),(37,87,-0.714377269814142),(37,91,2.06648457289346),(37,99,-0.149327066866054),(37,105,-1.63289284951323),(37,111,-0.116809595019379),(37,112,0.605868709372234),(37,118,-0.116962187566759),(38,87,-2.42809839167455),(38,90,0.740440076906644),(38,103,1.53012176885281),(38,105,1.31746879482406),(38,106,0.545548875392926),(38,111,-1.83175145725883),(38,115,-0.54025391399884),(39,87,0.0748313852351452),(39,89,0.0063631092257454),(39,91,-2.01510666219062),(39,94,-0.897656178472243),(39,97,0.182210760826441),(39,98,0.410397656178472),(39,107,-1.49270607623524),(39,108,-1.73342081972716),(39,109,2.85192419202246),(39,111,1.61644337290567),(39,113,2.07281716360973),(39,116,0.297769096957305),(39,118,-0.463454084902493),(40,88,1.5643330179754),(40,92,-0.886593218787195),(40,99,1.73291726432081),(40,104,1.02458265938292),(40,110,1.07795953245643),(40,116,0.228675191503647),(40,118,1.49632251960814),(41,88,-1.2880489516892),(41,93,-0.753532517471847),(41,96,1.57564012573626),(41,97,0.889736625263222),(41,100,2.02507095553453),(41,101,0.111377300332652),(41,104,-1.85064241462447),(41,105,-1.71242408520768),(41,106,0.144367809076205),(41,107,0.120090334788049),(41,109,-1.51203955198828),(41,110,2.20667134617145),(41,111,-2.1919919431135),(41,112,-3.04193243202002),(42,85,2.66342661824396),(42,86,-1.27990050965911),(42,87,-1.63708914456618),(42,99,-0.809793389690847),(42,100,-1.64258247627186),(42,103,0.122531815546129),(42,109,0.135456404309214),(42,113,-1.97721793267617),(43,85,0.318613238929411),(43,88,0.5864589373455),(43,89,1.61026337473678),(43,93,-1.02504043702506),(43,97,1.19573046052431),(43,98,1.47228919339579),(43,101,-1.20145268105106),(43,102,3.36660359508042),(43,103,-0.840495010223701),(43,105,-2.42080446790979),(43,110,-1.19846186712241),(43,112,-1.06753746147038),(43,114,1.85505233924375),(43,116,1.93417157506027),(44,89,-2.06753746147038),(44,98,0.370067445905942),(44,99,1.09622486037782),(45,87,1.61253700369274),(45,88,-2.15651417584765),(45,90,-0.00866725669118323),(45,91,-0.136143070772423),(45,95,1.98405407879879),(45,98,0.399441511276589),(45,108,2.48748741111484),(45,109,0.766106143375958),(45,112,-2.02031006805628),(45,115,-1.37583544419691),(46,85,-2.31839960936308),(46,89,1.37150181585131),(46,91,-1.65408795434431),(46,94,-0.563325907162694),(46,97,-0.189184240241707),(46,100,-0.878368480483413),(46,101,-0.477217932676168),(46,108,0.56175420392468),(46,112,-2.51435895870846),(47,86,0.966933194982757),(47,91,0.122058778649251),(47,92,2.28217413861507),(47,94,0.507415997802667),(47,95,0.126819666127506),(47,100,-0.930494094668416),(47,101,1.88985869930113),(47,104,2.85929441206091),(47,105,1.34731589709159),(47,108,1.97309793389691),(47,112,-0.843989379558702),(47,114,2.03671376689962),(47,118,1.0780663472396),(48,86,-1.5080721457564),(48,91,1.52958769493698),(48,98,-0.760032959990234),(48,99,-1.0599536118656),(48,100,-1.26169621875668),(48,103,-2.76616718039491),(48,105,0.592349009674368),(48,106,-2.32839442121647),(48,111,0.0810266426587725),(48,115,-2.00785851619007),(49,87,1.37083040864284),(49,89,1.51173436689352),(49,93,0.690740684224982),(49,94,-0.259117404705954),(49,95,1.05226294747765),(49,102,1.71190527054659),(49,113,0.143452253791925),(49,114,0.459624011963256),(50,89,-0.972975859859005),(50,105,-0.17177343058565),(50,107,-1.42541276284066),(51,87,0.925702688680685),(51,92,-0.425611133152257),(51,97,1.72635578478347),(51,98,1.7651600695822),(51,103,-0.596728415784173),(51,106,0.812112796411023),(51,112,0.725440229499191),(51,118,0.517120883816034),(52,89,-1.67566454054384),(52,97,-0.833063753166295),(52,106,0.289727469710379),(52,110,0.211874752037111),(52,111,1.96011230811487),(52,113,2.52539139988403),(52,114,-0.951948606830042),(52,118,-2.58169804986724),(53,88,-0.89257484664449),(53,90,-0.309488204596088),(53,92,-0.0240333262123478),(53,94,-1.59442426831874),(53,104,-0.437910092471084),(53,105,-2.06279183324686),(53,109,-0.662984099856563),(54,85,0.36863307596057),(54,91,2.76871547593616),(54,94,-1.01239051484725),(54,96,1.34502700888089),(54,111,-0.917538987395856),(54,112,-2.83849604785302),(54,113,1.41857661671804),(54,118,0.426313058870205),(55,87,-0.382778405102695),(55,95,-1.47976622821741),(55,107,2.26264229255043),(55,110,0.890560625019074),(55,117,-0.501464888454848),(56,107,1.16350291451765),(56,111,-1.29619739371929),(56,113,1.42735068819239),(56,114,-0.604647968993194),(57,87,-0.818445387127293),(57,90,1.03094576860866),(57,91,-1.12166203802606),(57,92,0.173924985503708),(57,93,1.13812677388836),(57,94,-2.27942747276223),(57,95,-0.687627796258431),(57,96,0.484481337931456),(57,100,-0.482024597918638),(57,102,-0.450025940733055),(57,103,-0.0148319956053347),(57,115,2.23834955900754),(58,86,-0.796746726889859),(58,87,1.33281960509049),(58,89,1.72096926786096),(58,90,0.174398022400586),(58,95,-1.89585558641316),(58,96,2.01193273720512),(58,101,-0.529313028351695),(58,103,2.00846888637959),(58,109,0.928098391674551),(58,110,2.21027253028962),(58,113,-1.99153111362041),(58,114,-0.628788109988708),(58,115,0.407147434919279),(58,118,0.628147221289712),(59,85,0.291543321024201),(59,86,-1.26767784661397),(59,90,1.2401806695761),(59,91,-1.2125919370098),(59,93,2.20300912503433),(59,97,2.42823572496719),(59,98,-1.39240699484237),(59,100,1.82270271919919),(59,102,0.552873317667165),(59,112,0.253181554612873),(59,114,2.45521408734397),(60,85,-1.35236671040986),(60,87,-1.23142185735649),(60,90,1.32074953459273),(60,91,-0.903622547074801),(60,96,-0.953749198889126),(60,100,-1.02940458388012),(60,101,-2.25971251564074),(60,105,-2.67964720603046),(60,107,-0.622653889584033),(60,109,-1.48147526474807),(60,110,-1.16779076509903),(60,114,-1.24892422254097),(61,89,1.58841212195196),(61,94,-0.555146946623127),(61,96,-0.564531388286996),(61,98,-0.41079439680166),(61,100,2.27274391918699),(61,102,1.17194128238777),(61,103,1.48985259559923),(61,114,1.14886928922391),(61,115,1.6087069307535),(62,93,-0.486938077944273),(62,95,-0.387752922147282),(62,107,0.157414471877193),(62,109,-0.841883602404859),(62,110,0.103640858180486),(62,111,0.952101199377422),(63,87,1.42722861415448),(63,90,-1.7233954893643),(63,93,-0.0881221961119419),(63,97,2.14276558732871),(63,100,1.17114780114139),(63,103,-0.353923154393139),(63,104,-0.662587359233375),(63,108,0.194463942381054),(63,111,1.48449659718619),(63,114,-1.48854029969176),(63,117,0.594119083223975),(64,87,2.79819635608997),(64,94,1.57727286599322),(64,99,-0.851680043946654),(64,110,1.54022339548936),(64,112,1.85276345103305),(64,116,-1.59067049165319),(65,87,1.19832453382977),(65,88,-1.59762871181371),(65,90,0.839640491958373),(65,97,-1.28363902706992),(65,99,2.04325998718223),(65,107,0.651738029114658),(65,110,-0.314111758781701),(65,111,-1.57347331156346),(65,114,-1.81998657185583),(65,116,-1.57458723715934),(65,117,-1.78312021240883),(66,85,1.136051515244),(66,102,0.0229651783806879),(66,105,-1.11705374309519),(66,108,-1.94486831263161),(66,111,-1.18594927823725),(66,115,-1.80120242927335),(66,118,2.66127506332591),(67,86,-0.32532731101413),(67,90,1.76424451429792),(67,92,0.623203222754601),(67,104,0.872219000824),(67,109,0.823694570757164),(67,111,-2.29531235694449),(68,87,1.93635364848781),(68,88,0.250251777703177),(68,90,1.97097689748833),(68,93,0.0137485885189367),(68,95,-0.621509445478683),(68,96,2.29015472884304),(68,97,-0.376903592028565),(68,103,-1.04509109775079),(68,107,-1.03538621173742),(68,112,1.5787072359386),(68,114,2.32673116245003),(69,87,2.58546708578753),(69,88,0.295953245643483),(69,92,-1.25867488631855),(69,94,-0.40842921231727),(69,95,1.03282265694143),(69,97,0.504394665364544),(69,108,-0.113422040467544),(69,113,-0.670140690328684),(69,114,2.7439954832606),(69,118,0.48139896847438),(70,85,1.26125370036927),(70,86,2.35236671040986),(70,87,-0.893124179815058),(70,90,-0.357112338633381),(70,96,-2.56778160954619),(70,97,-1.10484633930479),(70,99,-0.39265114291818),(70,105,0.472960600604266),(70,107,0.764519180883206),(70,109,0.730140079958495),(70,110,0.814661091952269),(70,111,-0.406598101748711),(71,85,-0.656483657338176),(71,93,-2.03434858241523),(71,96,-0.568514053773614),(71,100,-0.153645435956908),(71,104,-0.80878627887814),(71,106,-0.0933866389965514),(71,111,1.96717734305857),(71,113,2.62131107516709),(72,94,0.0902584917752617),(72,96,0.58821375164037),(72,99,0.228415784173101),(72,110,-0.820047608874783),(72,112,2.70125431073946),(72,114,-0.12663655507065),(72,115,-0.966902676473281),(72,116,0.297189245277261),(73,88,1.42887661366619),(73,94,0.465422528763695),(73,99,0.790322580645161),(73,100,0.0574510940885647),(73,106,1.21352275154881),(73,110,-0.141590624713889),(73,115,1.64961699270608),(74,90,-2.20946378978851),(74,94,-0.552415540025025),(74,99,1.83454390087588),(74,102,1.76708273567919),(74,106,1.40064699240089),(74,107,-1.31217383342998),(74,110,0.65530869472335),(74,113,-1.09106723227638),(74,116,-1.46658223212378),(75,85,2.19804986724448),(75,86,-0.364299447614978),(75,93,-1.09465315713981),(75,98,-0.424588763084811),(75,103,-0.213644825586718),(75,105,0.788903469954528),(75,111,-1.466628009888),(75,117,-0.257820368053224),(76,86,-3.01057466353343),(76,89,0.727637562181463),(76,92,2.11694692831202),(76,94,2.09602649006623),(76,99,-2.42933439130833),(76,101,-0.0954924161503952),(76,103,-1.40762047181616),(76,106,-0.620288705099643),(76,110,-0.903942991424299),(76,113,-0.217917416913358),(77,88,0.0151371807000946),(77,91,0.873317667165136),(77,93,-1.57538071840571),(77,98,-0.718405713064974),(77,101,1.82361827448347),(77,102,0.931806390575884),(77,103,-1.12585833307901),(77,104,2.37998596148564),(77,105,0.128055665761284),(77,109,0.970961638233589),(78,88,0.531281472212897),(78,93,2.25791192358165),(78,94,-0.209921567430647),(78,101,-0.244804223761711),(78,104,-1.18274483474227),(78,110,2.18164616840114),(78,114,-1.57309183019501),(78,116,0.719000823999756),(78,117,2.05534531693472),(78,118,-0.824228644672994),(79,87,0.654972991119114),(79,92,1.8208563493759),(79,94,2.16629535813471),(79,107,1.45968504898221),(79,108,-0.580904568620868),(79,114,0.159291360209967),(79,118,0.327600939970092),(80,87,-1.38392284920804),(80,88,-2.16194647053438),(80,91,1.41885128330332),(80,99,1.8324228644673),(80,101,0.493469038972137),(80,107,0.539506210516678),(80,113,0.493301187170019),(81,85,-2.14651936399426),(81,86,0.590212714011048),(81,90,-1.16621906186102),(81,93,-2.10322885830256),(81,96,-0.974669637134922),(81,97,-2.3002563554796),(81,106,2.33970152897732),(81,107,-1.75193029572436),(81,110,1.88227484969634),(81,115,1.48152104251228),(82,86,-0.37115085299234),(82,92,0.054063539536729),(82,110,0.303735465559862),(82,112,1.50418103579821),(83,87,-1.29985961485641),(83,91,-2.10518204290902),(83,93,1.47975096896268),(83,101,1.29839472640156),(83,103,2.39861751152074),(83,105,1.99366740928373),(83,108,-2.7807397686697),(84,85,1.81005279702139),(84,86,-1.84163945432905),(84,89,1.78720969267861),(84,95,2.0596331675161),(84,99,0.826792199468978),(84,104,0.517975402081362),(84,111,-0.545533616138188),(84,113,-1.86944181646168),(84,114,-0.196066164128544)]
orgname='BHNEAT_4_4'
cnodes = 119

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()