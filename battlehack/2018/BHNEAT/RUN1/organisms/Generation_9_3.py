edge = [(0,85,-2.0814386425367),(0,89,-0.117236854152043),(0,90,0.65370647297586),(0,93,-2.3631855220191),(0,98,2.32891323587756),(0,101,-1.00782799768059),(0,105,0.397106845301675),(0,108,1.0666219061861),(0,113,-1.61958677938169),(0,114,0.0229804376354259),(0,117,0.788140507217628),(0,118,1.4162724692526),(1,86,2.12257759331034),(1,92,-1.47036652729881),(1,98,1.13155003509629),(1,102,1.82877590258492),(1,104,-1.19347209082308),(1,107,-2.18808557390057),(1,108,-1.32671590319529),(1,109,-0.568498794518876),(1,113,0.124088259529405),(2,87,-0.145695364238411),(2,88,1.21387371440779),(2,100,0.812677388836329),(2,106,1.61355937376019),(2,108,-1.70822779015473),(2,110,-0.704000976592303),(2,113,-0.641697439497055),(2,118,-0.940229499191259),(3,89,1.62627033295694),(3,92,0.549272133548998),(3,97,-1.37211218604083),(3,99,-1.34923856318857),(3,101,-2.03831598864711),(3,103,-1.83858760338145),(3,105,0.268517105624561),(3,108,2.32857753227332),(3,109,0.337549974059267),(3,111,1.11342204046754),(3,112,0.691610461745048),(3,116,0.159718619342631),(4,90,0.789529099398785),(4,91,-2.02246162297433),(4,97,-0.523850215155492),(4,99,-1.92414624469741),(4,101,2.05595568712424),(4,108,0.747016815698721),(4,113,1.37722403637806),(4,118,-1.86605426190985),(5,86,0.744132816553239),(5,87,0.622470778527177),(5,89,0.465437788018433),(5,92,2.18297372356334),(5,93,0.920041505172887),(5,99,1.95826593829157),(5,104,0.129398480178228),(5,114,0.716727195043794),(5,118,-0.946424756614887),(6,89,-0.768196661275063),(6,92,-0.748924222540971),(6,94,-1.46740623187964),(6,100,0.197439497054964),(6,101,-2.08458204901273),(6,103,-0.374156926175726),(6,107,-0.596453749198889),(6,110,-2.32883693960387),(6,113,2.4193243202002),(7,85,0.964461195715201),(7,86,0.923703726310007),(7,90,-0.330607013153478),(7,95,-0.71538438062685),(7,99,0.318735312967315),(7,100,-1.0776238288522),(7,104,-2.04022339548936),(7,106,2.73064363536485),(7,108,-2.25876644184698),(7,112,1.47732474745933),(7,116,-1.82683797723319),(8,92,-0.495010223700674),(8,93,-0.13296914578692),(8,95,-1.07667775505844),(8,99,1.42110965300455),(8,106,1.07516708883938),(8,107,-2.16064943388165),(8,115,-1.50764488662374),(8,116,-1.50880458998383),(8,118,-0.800424207281716),(9,85,-2.12173833429975),(9,87,2.05401776177252),(9,98,1.02668843653676),(9,101,0.743476668599506),(9,103,2.30147709585864),(9,105,-1.35978270821253),(9,106,1.58075197607349),(9,113,-0.297952208014161),(10,89,0.879665517136143),(10,96,1.0528885769219),(10,106,-0.215872676778466),(10,108,-2.36358226264229),(10,109,-1.20938749351482),(10,111,-2.75960570085757),(10,112,1.5408795434431),(10,114,0.713965269936216),(10,115,1.46847437971129),(10,116,-1.70995208594012),(10,117,1.75595873897519),(11,89,-0.135868404187139),(11,97,0.0209051789910581),(11,105,0.335901974547563),(11,112,-0.724600970488601),(11,115,-2.17116306039613),(12,92,1.06331064790796),(12,93,3.21973326822718),(12,94,1.86590166936247),(12,97,-1.40804773094882),(12,98,0.709341715750603),(12,99,-1.07899716177862),(12,108,-0.600817896053957),(12,116,-2.25553147984252),(13,86,-1.59138767662587),(13,87,-1.4862666707358),(13,90,-0.960112308114872),(13,99,0.768318735312967),(13,102,1.25278481398968),(13,104,1.71126438184759),(13,113,0.179509872737815),(13,116,1.8366801965392),(13,118,0.607242042298654),(14,90,-1.84914700766015),(14,93,2.07757805108798),(14,95,-0.525528733176672),(14,102,-2.30886257515183),(14,104,2.28972746971038),(14,106,-1.13153477584155),(14,109,1.55758842738121),(14,110,2.31717886898404),(14,111,-2.18431653798029),(15,85,-0.813364055299539),(15,92,1.0881069368572),(15,99,1.372219000824),(15,101,-0.912503433332316),(15,104,-0.521866512039552),(15,108,1.38933988464003),(15,117,2.29787591174047),(16,86,-0.11383404034547),(16,87,-0.354106265449995),(16,88,-0.862208929715873),(16,90,3.2991729483932),(16,91,-1.42048402356029),(16,95,-2.43488876003296),(16,97,-1.29143650624104),(16,98,1.25595873897519),(16,99,0.586016418958098),(16,101,0.675954466383862),(16,108,-0.0601367229224525),(16,110,-1.1383404034547),(17,89,-0.346583452864162),(17,96,-2.00411999877926),(17,99,-3.15208899197363),(17,101,0.125766777550584),(17,106,-0.195135349589526),(17,107,-1.95776238288522),(17,109,-0.546494949186682),(18,90,1.37383648182623),(18,91,-1.0079500717185),(18,93,1.57010101626637),(18,99,0.272530289620655),(18,102,1.07788323618274),(18,103,-0.327814569536424),(18,104,2.62184514908292),(18,110,-2.24311044648579),(18,111,-1.50450148014771),(18,116,2.43652150028993),(18,117,0.929136020996735),(18,118,-0.493362224188971),(19,87,0.859340189825129),(19,89,-0.619373149815363),(19,93,-1.45519882808924),(19,95,-2.8782006286813),(19,101,0.204153569139683),(19,105,-2.26464125492111),(19,115,-0.994872890408033),(20,88,1.32964568010498),(20,101,-0.663396099734489),(20,103,-1.47842341380047),(20,104,0.98086489455855),(20,105,1.23886837366863),(20,106,-0.167607654042177),(20,111,1.90031128879666),(20,116,-1.609027375103),(21,86,0.896633808404798),(21,87,-1.24311044648579),(21,94,1.19718008972442),(21,96,-2.58125553147984),(21,101,0.794122135074923),(21,102,0.360789819025239),(21,105,1.88406018250069),(21,107,2.21828363902707),(21,108,-0.732932523575549),(22,86,-0.211310159611805),(22,88,1.31598864711447),(22,91,1.74542985320597),(22,92,-0.363414410840175),(22,93,1.8629413739433),(22,98,-0.398556474501785),(22,106,-0.664418469801935),(22,115,0.6954863124485),(22,117,-1.53927732169561),(23,85,0.613895077364422),(23,86,0.137775811029389),(23,88,2.44644001586963),(23,90,-2.06366161076693),(23,97,2.35413678395947),(23,104,0.231086153752251),(23,112,-1.78556169316691),(23,114,2.17796868800928),(23,115,-0.193838312936796),(23,116,-2.8845484786523),(24,89,1.12044129764702),(24,90,-2.28923917355876),(24,91,-0.0553910946989349),(24,101,2.4394817957091),(24,107,0.325830866420484),(24,108,1.87722403637806),(24,110,2.82844019898068),(24,112,-0.755211035493027),(25,90,-0.371639149143956),(25,92,-0.87176122318186),(25,94,0.342387157811213),(25,98,2.33080538346507),(25,105,-0.656422620319224),(25,108,-0.619296853541673),(25,109,0.691869869075594),(25,115,0.188222907193213),(26,85,0.528183843501083),(26,87,-2.20571001312296),(26,89,-1.06624042481765),(26,95,0.978179265724662),(26,98,-2.14986114078188),(26,100,0.22194586016419),(26,101,2.23987548448134),(26,102,-1.42609942930387),(26,103,-1.5209204382458),(26,104,0.962691122165593),(26,107,-0.329615161595508),(26,109,0.0292367320780054),(26,112,0.830957976012452),(26,113,-0.34766685995056),(26,117,0.733909115878781),(27,85,3.06001464888455),(27,87,-0.100695822016053),(27,94,-0.445265053254799),(27,100,0.540665913876766),(27,102,-0.0706503494369335),(27,103,-1.4417706839198),(27,104,-0.788949247718741),(27,105,2.98713644825587),(27,108,-1.31351664784692),(27,110,-1.57606738486892),(27,114,-0.924649800103763),(28,87,0.242698446607868),(28,88,-0.550981170079653),(28,97,-1.89916684469131),(28,99,-0.73787652211066),(28,104,2.06765953550829),(28,113,2.30858790856655),(28,114,0.0834528641621143),(29,88,-0.72103030487991),(29,91,0.684179204687643),(29,102,0.123584704123051),(29,105,-0.815469832453383),(29,116,-0.93603320413831),(30,95,-1.65649891659291),(30,96,1.46671956541643),(30,99,-1.99760429700613),(30,101,1.11098055970946),(30,104,1.69217505417035),(30,109,-0.69655446028016),(30,110,-0.236106448561052),(30,114,2.22243415631581),(30,118,2.98283333841975),(31,85,-1.45200964384899),(31,92,-1.77881710257271),(31,94,-0.3037507248146),(31,96,0.899105807672353),(31,99,0.300836207159642),(31,103,-0.226996673482467),(31,107,0.461592455824458),(31,108,0.431089205603198),(31,109,1.46850489822077),(31,111,-1.90763573107089),(31,112,-0.307931760612812),(31,117,-1.94792016357921),(32,86,-1.49876400036622),(32,87,0.78720969267861),(32,89,1.330576494644),(32,92,-0.622775963621937),(32,98,-0.439039277321696),(32,99,-1.18471327860347),(32,104,0.912381359294412),(32,106,-1.22659993285928),(32,109,2.39770195623646),(32,116,-0.39646595660268),(32,118,-0.638966032898953),(33,96,2.43557542649617),(33,98,-1.45165868099002),(33,108,-2.80872524185919),(33,110,-0.349009674367504),(33,111,1.7202215643788),(33,114,-2.3342692342906),(34,85,-0.949751274147771),(34,90,1.45773186437574),(34,99,-0.535370952482681),(34,104,-1.05073702200385),(34,109,2.68948942533647),(35,86,-1.29825739310892),(35,87,1.43227942747276),(35,97,-1.59504989776299),(35,98,2.17734305856502),(35,100,1.50205999938963),(35,104,1.35201574755089),(35,107,-0.0862758262886441),(35,109,1.50302133243812),(35,110,1.06929227576525),(35,112,-1.56819360942412),(36,85,0.0525528733176671),(36,87,0.289773247474593),(36,90,0.470748008667257),(36,91,2.04519791253395),(36,104,-1.70560319833979),(36,107,0.942960905789361),(36,109,2.17642750328074),(36,112,-0.334543900875881),(36,115,-1.237449262978),(36,117,-0.553575243385113),(36,118,2.53251747184667),(37,85,0.557542649616993),(37,86,1.94288460951567),(37,87,0.378810998870815),(37,91,2.1530808435316),(37,99,-0.806924649800104),(37,105,-0.0697653126621296),(37,111,-1.51683095797601),(37,112,-0.281228064821314),(37,118,-2.36292611468856),(38,87,-1.11149937437056),(38,90,0.860225226599933),(38,103,-0.076036866359447),(38,105,1.46127201147496),(38,106,1.13628040406507),(38,111,0.862956633198035),(38,115,0.480071413312174),(39,87,-1.11734366893521),(39,89,-1.47816400646992),(39,91,0.0175481429486984),(39,94,0.065233314004944),(39,97,-2.53415021210364),(39,98,0.787942136906034),(39,107,-0.683706167790765),(39,108,-0.618610187078463),(39,109,-1.02185125278481),(39,111,-0.352427747428816),(39,113,2.41378521073031),(39,116,-0.427732169560839),(39,118,1.90282906582843),(40,88,1.39725943784906),(40,92,0.0266273995178076),(40,99,2.10544145023957),(40,104,0.424634540849025),(40,110,0.98178044984283),(40,116,-1.84589678640095),(40,118,-1.3144322031312),(41,88,0.593127231666005),(41,93,0.475569933164464),(41,96,-0.463759269997253),(41,97,0.952330088198492),(41,100,0.671788689840388),(41,101,1.53207495345927),(41,104,2.83910641804254),(41,105,-0.882747886593219),(41,106,-2.14918973357341),(41,107,-0.953093050935392),(41,109,2.74680318613239),(41,110,-0.604861598559526),(41,111,-0.84698019348735),(41,112,-0.878917813653981),(42,85,-1.00143436994537),(42,86,1.67352824488052),(42,87,0.739890743736076),(42,99,-0.201193273720511),(42,100,2.01434369945372),(42,103,-0.641117587817011),(42,109,-1.38390758995331),(42,113,-2.36706137272256),(43,85,1.4150669881283),(43,88,0.405362102114933),(43,89,-0.499038666951506),(43,93,2.429120761742),(43,97,-1.73163548692282),(43,98,-1.13068025757622),(43,101,2.2598193304239),(43,102,2.75652333140049),(43,103,-0.662862025818659),(43,105,-1.97111423078097),(43,110,0.738700521866512),(43,112,2.67519150364696),(43,114,-0.775994140446181),(43,116,2.07571642200995),(44,89,-0.813013092440565),(44,98,-1.84705648976104),(44,99,-1.82598345896786),(45,87,-0.116718039490951),(45,88,-0.824442274239326),(45,90,-0.788521988586077),(45,91,2.72264778588214),(45,95,0.365794854579302),(45,98,-2.59036530655843),(45,108,-0.385174108096561),(45,109,-0.60414441358684),(45,112,2.76496169927061),(45,115,-0.710943937498093),(46,85,-1.60350352488784),(46,89,-1.77283547471541),(46,91,1.16469313638722),(46,94,1.11325418866543),(46,97,1.94456312753685),(46,100,0.612140263069552),(46,101,-1.44022949919126),(46,108,-2.0532090212714),(46,112,0.37488937040315),(47,86,-2.83971678823206),(47,91,3.11317789239174),(47,92,0.431363872188482),(47,94,1.10068056276131),(47,95,1.86895352031007),(47,100,-0.832682271797845),(47,101,-0.847270119327372),(47,104,2.68463698232978),(47,105,-1.21991637928404),(47,108,2.11401715140233),(47,112,-0.84369945371868),(47,114,0.0601214636677145),(47,118,-0.43595690786462),(48,86,0.490310373241371),(48,91,1.4463484603412),(48,98,-0.146397289956359),(48,99,-1.38030640583514),(48,100,-1.28237250892666),(48,103,1.64804528946806),(48,105,0.833918271431623),(48,106,-1.15507980590228),(48,111,0.922025208288827),(48,115,1.16580706198309),(49,87,1.39403973509934),(49,89,0.47560045167394),(49,93,1.30478835413678),(49,94,-0.968886379589221),(49,95,0.45692312387463),(49,102,3.26511429181799),(49,113,0.293435468611713),(49,114,0.463621936704611),(50,89,2.53869747001556),(50,105,2.29271828363903),(50,107,-2.07502975554674),(51,87,0.639820551164281),(51,92,0.27774895474105),(51,97,2.5646534623249),(51,98,-0.373546555986206),(51,103,1.35280922879727),(51,106,0.117160557878353),(51,112,0.507217627491073),(51,118,0.432416760765404),(52,89,0.656804101687674),(52,97,-1.64314706869716),(52,106,0.637455366679891),(52,110,1.87124240852077),(52,111,2.64041566209906),(52,113,2.53030487990967),(52,114,0.0240485854670859),(52,118,-1.123645741142),(53,88,-1.45173497726371),(53,90,-0.711233863338115),(53,92,1.7815027314066),(53,94,2.23731192968535),(53,104,0.856852931302835),(53,105,1.10078737754448),(53,109,0.659260841700491),(54,85,-2.36353648487808),(54,91,-0.249107333597827),(54,94,0.466231269264809),(54,96,2.60856959746086),(54,111,2.58377330851161),(54,112,-1.55986205633717),(54,113,-0.00709555345316935),(54,118,0.0053559984130375),(55,87,-1.79660939359722),(55,95,2.30964079714347),(55,107,-3.08069093905454),(55,110,-0.836359752189703),(55,117,-1.52560502945036),(56,107,0.267342143009735),(56,111,-2.29194006164739),(56,113,2.21007415997803),(56,114,-1.74268318735313),(57,87,-2.38599810785241),(57,90,1.1495864741966),(57,91,-0.534226508377331),(57,92,1.88386181218909),(57,93,-1.64233832819605),(57,94,-1.63548692281869),(57,95,-1.75016022217475),(57,96,-0.774895474105045),(57,100,-1.06941434980316),(57,102,-0.752281258583331),(57,103,1.36005737479781),(57,115,0.0342570268868068),(58,86,2.00476088747826),(58,87,0.366252632221442),(58,89,3.06819360942412),(58,90,2.71523178807947),(58,95,0.0533158360545671),(58,96,0.294351023895993),(58,101,-0.0692770165105136),(58,103,-1.48120059816279),(58,109,-2.38814966277047),(58,110,1.60112308114872),(58,113,-1.44798120059816),(58,114,-0.835367900631733),(58,115,0.680043946653645),(58,118,0.211264381847591),(59,85,1.91087069307535),(59,86,1.72978911709952),(59,90,0.209692678609577),(59,91,0.101702932828761),(59,93,0.0799279763176367),(59,97,-1.67395550401318),(59,98,-0.614459669789727),(59,100,1.48675496688742),(59,102,0.968840601825007),(59,112,1.18160039063692),(59,114,-0.134815515610218),(60,85,2.22754600665303),(60,87,1.16490676595355),(60,90,0.0796838282418286),(60,91,-0.54582354197821),(60,96,-1.13951536606952),(60,100,-1.31011383404035),(60,101,-0.338511307107761),(60,105,-0.589999084444716),(60,107,0.645130771813105),(60,109,-2.17096469008454),(60,110,-1.29831843012787),(60,114,-2.47239600817896),(61,89,0.165334025086215),(61,94,0.0715506454664754),(61,96,-0.202429273354289),(61,98,0.969267860957671),(61,100,-0.708792382580035),(61,102,-0.0531022064882351),(61,103,-3.00660725730155),(61,114,-1.46113467818232),(61,115,0.769524216437269),(62,93,0.645741142002625),(62,95,1.98225348673971),(62,107,-1.19434186834315),(62,109,0.385097811822871),(62,110,1.81669057283242),(62,111,0.415814691610462),(63,87,1.3409375286111),(63,90,-1.53115939817499),(63,93,-0.813928647724845),(63,97,-1.88395336771752),(63,100,0.80611590929899),(63,103,-0.532944730979339),(63,104,-0.988143559068575),(63,108,1.2183751945555),(63,111,0.544969023712882),(63,114,-0.622623371074557),(63,117,0.136143070772423),(64,87,-0.583513901181066),(64,94,-0.010452589495529),(64,99,-1.6895046845912),(64,110,0.571672719504379),(64,112,-0.262794885097812),(64,116,-1.97099215674306),(65,87,-1.70751060518204),(65,88,0.541367839594714),(65,90,1.59848323007904),(65,97,-2.77492599261452),(65,99,0.902905362102115),(65,107,-0.0412305063020723),(65,110,0.739524521622364),(65,111,2.2499008148442),(65,114,-3.09677419354839),(65,116,-2.54045228431043),(65,117,1.15283669545579),(66,85,2.19928586687826),(66,102,2.81623279519028),(66,105,-0.97949156163213),(66,108,1.93412579729606),(66,111,0.00575273903622553),(66,115,-0.258568071535386),(66,118,-0.449476607562487),(67,86,0.493148594622639),(67,90,0.322641682180242),(67,92,-2.48107852412488),(67,104,1.6634418774987),(67,109,1.72072511978515),(67,111,0.95440534684286),(68,87,-1.02655110324412),(68,88,-0.200872829371014),(68,90,-0.357356486709189),(68,93,0.732047486800745),(68,95,1.86063722647786),(68,96,1.6663716544084),(68,97,-2.24010437330241),(68,103,2.2933896908475),(68,107,-0.140690328684347),(68,112,2.01208532975249),(68,114,2.85349589526048),(69,87,2.32613605151524),(69,88,-3.17622913296915),(69,92,-1.68218024231697),(69,94,-0.795892208624531),(69,95,0.235526596881008),(69,97,0.1323587755974),(69,108,-1.2862025818659),(69,113,-2.338206122013),(69,114,0.413327433088168),(69,118,-1.36692403942991),(70,85,0.584810937833796),(70,86,-1.1158940397351),(70,87,-2.04570146794031),(70,90,1.77994628742332),(70,96,0.43038727988525),(70,97,2.58665730765709),(70,99,-1.11720633564257),(70,105,0.833567308572649),(70,107,1.87580492568743),(70,109,-0.831232642597736),(70,110,2.50450148014771),(70,111,-0.274117252113407),(71,85,1.52890102847377),(71,93,-0.612186040833766),(71,96,0.529282509842219),(71,100,1.97802667317728),(71,104,1.58902249214148),(71,106,-0.206213568529313),(71,111,-1.64059877315592),(71,113,1.56140324106571),(72,94,-0.168584246345408),(72,96,-1.86794640949736),(72,99,1.8554338206122),(72,110,1.64830469679861),(72,112,0.448133793145543),(72,114,-0.724555192724387),(72,115,0.147251808221686),(72,116,-0.635166478469191),(73,88,2.94622638630329),(73,94,-1.24677266762291),(73,99,1.55659657582324),(73,100,0.533005767998291),(73,106,1.69087801751762),(73,110,-0.0249488814966277),(73,115,0.2390972624897),(74,90,1.71889400921659),(74,94,-0.87099826044496),(74,99,0.417493209631642),(74,102,-2.03077791680654),(74,106,-1.23804437391278),(74,107,1.0138554033021),(74,110,-0.400921658986175),(74,113,1.59134189886166),(74,116,-0.935071871089816),(75,85,-2.49545274208808),(75,86,2.61261329996643),(75,93,1.20162053285318),(75,98,1.98574785607471),(75,103,-2.23682363353374),(75,105,-0.796029541917173),(75,111,-0.265007477034822),(75,117,-1.45086519974364),(76,86,-0.379589220862453),(76,89,-1.24588763084811),(76,92,0.280999176000244),(76,94,1.62907803582873),(76,99,-1.46400341807306),(76,101,-2.31467635120701),(76,103,-2.36205633716849),(76,106,-1.07417523728141),(76,110,-0.930036317026276),(76,113,-0.53910946989349),(77,88,-2.00968962675863),(77,91,0.0854213080233161),(77,93,0.121311075167089),(77,98,1.24787133396405),(77,101,1.22971282082583),(77,102,0.207037568285165),(77,103,1.01565599536119),(77,104,0.125354777672658),(77,105,0.0820337534714805),(77,109,-0.711127048554949),(78,88,-0.12869655446028),(78,93,-1.1258125553148),(78,94,-1.92095706045717),(78,101,0.751243629261147),(78,104,-2.14395580919828),(78,110,2.08311716055788),(78,114,-1.27132480849635),(78,116,-0.684835352641377),(78,117,-0.168248542741173),(78,118,2.02566606646931),(79,87,3.03440961943419),(79,92,-2.17940305795465),(79,94,0.238166447950682),(79,107,-1.67006439405499),(79,108,1.11667226172674),(79,114,0.841883602404859),(79,118,-2.70216986602374),(80,87,-2.43415631580554),(80,88,-3.05825983458968),(80,91,-1.4345835749382),(80,99,0.519760734885708),(80,101,1.91720328379162),(80,107,-0.0440992461928159),(80,113,-0.272148808252205),(81,85,-0.413907284768212),(81,86,-0.456648457289346),(81,90,0.945524460585345),(81,93,1.53285317545091),(81,96,-0.22278511917478),(81,97,1.48081911679434),(81,106,-1.99655140842921),(81,107,0.0376750999481185),(81,110,1.76335947752312),(81,115,-1.9985961485641),(82,86,0.991607409894101),(82,92,-1.0216834009827),(82,110,-1.56672872096927),(82,112,-0.64737388225959),(83,87,-3.33307901242103),(83,91,2.25211340678121),(83,93,-2.14693136387219),(83,101,1.26206244087039),(83,103,-2.17032380138554),(83,105,0.661214026306955),(83,108,0.649479659413434),(84,85,-0.916501358073672),(84,86,-0.498306222724082),(84,89,1.06366161076693),(84,95,2.83848078859828),(84,99,2.05069124423963),(84,104,1.9556260872219),(84,111,-1.79915768913846),(84,113,-1.65804010132145),(84,114,-0.823908200323496),(35,105,1.54118472853786)]
orgname='BHNEAT_9_3'
cnodes = 119

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()