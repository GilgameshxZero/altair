edge = [(0,85,1.85845515305033),(0,89,-1.26641132847072),(0,90,0.462546159245582),(0,93,-1.61964781640065),(0,98,-0.467268898586993),(0,101,1.64226203192236),(0,105,0.837115085299234),(0,108,-0.0238044373912778),(0,113,3.27211066011536),(0,114,-3.00396740623188),(0,117,-2.12729270302438),(0,118,0.299691763054292),(1,86,-0.230971709341716),(1,92,0.280556657612842),(1,98,1.45046845912046),(1,102,-0.744392223883786),(1,104,2.07090975676748),(1,107,-0.885250404370251),(1,108,-0.81122013000885),(1,109,0.706572161015656),(1,113,-1.2044206060976),(2,87,-0.192197943052461),(2,88,1.20120853297525),(2,100,2.55795464949492),(2,106,-0.492721335489975),(2,108,1.36082033753471),(2,110,-2.71593371379742),(2,113,2.25168614764855),(2,118,-2.47672200689718),(3,89,-0.280915250099185),(3,92,1.32318338572344),(3,97,-0.00476851710562455),(3,99,-0.564592425305948),(3,101,1.64362773522141),(3,103,-2.11554307687613),(3,105,-1.2945951719718),(3,108,-1.80771050141911),(3,109,-0.576418347727897),(3,111,-2.47988067262795),(3,112,0.842379528183844),(3,116,-0.160115359965819),(4,90,1.50631733146153),(4,91,0.940061647389142),(4,97,1.69545579393902),(4,99,-0.196264534440138),(4,101,-0.454947050386059),(4,108,1.2816248054445),(4,113,-2.06754509109775),(4,118,-0.893711661122471),(5,86,0.978087710196234),(5,87,1.20457319864498),(5,89,-0.717894528031251),(5,92,2.34296700949126),(5,93,-0.778077028717917),(5,99,-0.568857387005219),(5,104,0.321680349131748),(5,114,0.679342020935698),(5,118,0.175481429486984),(6,89,-2.46231727042451),(6,92,0.639515366069521),(6,94,-0.188833277382732),(6,100,-1.00930051576281),(6,101,-1.82242805261391),(6,103,-1.62775048066652),(6,107,1.00283822138127),(6,110,1.88985106967376),(6,113,-1.55124820703757),(7,85,1.11800744651631),(7,86,2.78498947111423),(7,90,-0.546708578753014),(7,95,-0.419736320078127),(7,99,-1.35478530228584),(7,100,2.0262611774041),(7,104,0.00672933133945736),(7,106,3.43993194372387),(7,108,2.21643726920377),(7,112,-0.299233985412152),(7,116,-0.251472518082217),(8,92,-1.70728171636097),(8,93,-0.415074617755669),(8,95,-1.87719351786859),(8,99,2.43285927915281),(8,106,2.36107974486526),(8,107,-0.886120181890316),(8,115,-0.482642597735527),(8,116,0.497299111911374),(8,118,-1.26945554979095),(9,85,0.83165227210303),(9,87,2.29488509781182),(9,98,-1.6931974242378),(9,101,2.12909329508347),(9,103,-0.725768303476058),(9,105,-1.98724326303903),(9,106,0.718375194555498),(9,113,-1.61585589159825),(10,89,1.57147434919279),(10,96,0.737334818567461),(10,106,-1.38301492355113),(10,108,-0.291146580401013),(10,109,4.04029206213569),(10,111,-2.61391796624653),(10,112,-0.723136082033753),(10,114,-0.554826502273629),(10,115,-2.54911954100162),(10,116,0.185285500656148),(10,117,1.28774376659444),(11,89,0.319620349742119),(11,97,-0.232955412457655),(11,105,0.149548326059755),(11,112,-1.21601763969848),(11,115,-2.32398449659719),(12,92,-1.43430890835292),(12,93,0.548142948698386),(12,94,-3.95233771782586),(12,97,0.245857112338633),(12,98,-0.0140690328684347),(12,99,-0.934095278786584),(12,108,-2.5648747215186),(12,116,3.11645100253304),(13,86,0.927884762108218),(13,87,-2.23700674459059),(13,90,1.51893673512986),(13,99,-0.852214117862484),(13,102,0.22019104586932),(13,104,0.552934354686117),(13,113,0.821474349192785),(13,116,-2.57291634876553),(13,118,2.28476821192053),(14,90,-1.24295785393841),(14,93,1.50316629535813),(14,95,-1.2389751884518),(14,102,0.0848948637348552),(14,104,0.450415051728873),(14,106,-0.0581225012970367),(14,109,-0.467360454115421),(14,110,1.59289834284494),(14,111,0.227271340067751),(15,85,0.959883419293802),(15,92,1.65936765648366),(15,99,-1.55898464918973),(15,101,0.10780663472396),(15,104,-0.679105502487259),(15,108,-1.67056031983398),(15,117,-1.52349925229652),(16,86,-0.637302774132511),(16,87,0.759208960234382),(16,88,-0.334131900997955),(16,90,-0.266304513687551),(16,91,-0.515610217596973),(16,95,-2.26749473555712),(16,97,1.30607013153478),(16,98,-2.5970412305063),(16,99,0.711310159611805),(16,101,1.11572618793298),(16,108,0.794457838679159),(16,110,-1.80051576281014),(17,89,-0.617702261421552),(17,96,2.36647389141514),(17,99,1.95631275368511),(17,101,-2.96652119510483),(17,106,1.24654377880184),(17,107,-1.96755882442701),(17,109,1.45536667989135),(18,90,2.27311777092807),(18,91,-2.82975249488815),(18,93,-2.00193792535173),(18,99,1.96371349223304),(18,102,-0.736022522659993),(18,103,0.664387951292459),(18,104,-2.63359477523118),(18,110,0.828508865627003),(18,111,-2.40510269478439),(18,116,-2.46002075258644),(18,117,1.0925626392407),(18,118,0.680265205847346),(19,87,-1.32441938535722),(19,89,0.758171330912198),(19,93,0.120090334788049),(19,95,-1.15615558336131),(19,101,1.84482863856929),(19,105,-2.72989593188269),(19,115,-3.35769219031343),(20,88,0.775170140690329),(20,101,-0.232871486556597),(20,103,2.41096224860378),(20,104,0.62839136936552),(20,105,-2.57757042146062),(20,106,-1.46854304635762),(20,111,1.7852183599353),(20,116,-2.0021668141728),(21,86,-2.56385998107852),(21,87,1.10864589373455),(21,94,-1.96236304818873),(21,96,-0.913113803521836),(21,101,3.57248908963286),(21,102,1.7823877681814),(21,105,-1.33215582750938),(21,107,-0.403065584276864),(21,108,1.65533158360546),(22,86,-1.97768333994568),(22,88,-2.40391247291482),(22,91,2.29827265236366),(22,92,1.70616016113773),(22,93,1.43833735160375),(22,98,0.883739738151189),(22,106,0.31648457289346),(22,115,0.00442518387401959),(22,117,0.317812128055666),(23,85,0.644367809076205),(23,86,-1.06028931546983),(23,88,0.907261879329814),(23,90,-0.53156376842555),(23,97,-1.60908841212195),(23,104,-0.00149540696432382),(23,112,-2.16048158207953),(23,114,-0.765923032319102),(23,115,-0.660863063447981),(23,116,0.469817194128239),(24,89,-2.16363261818293),(24,90,-2.30110324411756),(24,91,0.892887661366619),(24,101,1.71535386211737),(24,107,-0.0445570238349559),(24,108,-1.20407727286599),(24,110,1.34710989715262),(24,112,-1.5612811670278),(25,90,1.55616931669057),(25,92,-0.784066286202582),(25,94,-1.13303018280587),(25,98,0.570841090121158),(25,105,1.89436017944884),(25,108,-2.27027191991943),(25,109,-2.96947386089663),(25,115,-1.41813409833064),(26,85,2.83458204901273),(26,87,-1.10151219214454),(26,89,-2.35023041474654),(26,95,-0.10528885769219),(26,98,-1.09456923123875),(26,100,0.985061189611499),(26,101,1.76813562425611),(26,102,1.10506759849849),(26,103,2.19922482985931),(26,104,-1.42948698385571),(26,107,2.02732932523576),(26,109,0.603595080416272),(26,112,-1.59141056550798),(26,113,-0.54223761711478),(26,117,-1.09945219275491),(27,85,1.66451765495773),(27,87,1.74375133518479),(27,94,-2.38845484786523),(27,100,-2.35099337748344),(27,102,-0.389645069734794),(27,103,-0.881450849940489),(27,104,0.852183599353008),(27,105,0.720999786370434),(27,108,-1.8092135380108),(27,110,2.22396008178961),(27,114,-0.746177556688131),(28,87,1.7066103091525),(28,88,-2.6328012939848),(28,97,-1.49864955595569),(28,99,-2.65923795281838),(28,104,-1.62549974059267),(28,113,-2.34220404675436),(28,114,-0.925176244392224),(29,88,2.3705710013123),(29,91,1.50297555467391),(29,102,2.08252967925047),(29,105,-1.19676046021912),(29,116,-0.120242927335429),(30,95,3.22119815668203),(30,96,0.965865047151097),(30,99,-0.40903958250679),(30,101,-0.507904293954283),(30,104,0.303315836054567),(30,109,0.0990859706411938),(30,110,-0.457167271950438),(30,114,-0.790551469466231),(30,118,-0.991988891262551),(31,85,-0.217001861629078),(31,92,1.02017273476363),(31,94,0.0611362041077914),(31,96,-1.19190038758507),(31,99,0.906781212805567),(31,103,-0.594622638630329),(31,107,0.894001586962493),(31,108,0.915631580553606),(31,109,-1.17320780053102),(31,111,-0.880474257637257),(31,112,-1.65688802758873),(31,117,-1.16753135776849),(32,86,-1.9841990417188),(32,87,-2.17861720633564),(32,89,1.85102389599292),(32,92,2.28286080507828),(32,98,-1.39278084658345),(32,99,-0.422627948850978),(32,104,1.23438978240303),(32,106,-2.32871486556597),(32,109,0.285729544969024),(32,116,2.1950437940611),(32,118,2.40475173192541),(33,96,-0.802781762138737),(33,98,-0.342387157811212),(33,108,-0.60841700491348),(33,110,-1.24950407422102),(33,111,1.51116977446822),(33,114,1.50598925748466),(34,85,-0.886349070711386),(34,90,-0.669034394360179),(34,99,-1.1249504074221),(34,104,1.34744560075686),(34,109,-1.90499588000122),(35,86,-1.50383770256661),(35,87,0.504722739341411),(35,97,0.768875698110904),(35,98,2.71256141850032),(35,100,-1.99028748435926),(35,104,1.82211523789178),(35,107,-0.628360850856044),(35,109,1.1093707083346),(35,110,-1.44033631397443),(35,112,-0.101702932828761),(36,85,1.18848994415113),(36,87,-1.2167500839259),(36,90,-1.93998535111545),(36,91,0.438283944212165),(36,104,-0.0917081209753714),(36,107,1.52914517654958),(36,109,3.44103823969237),(36,112,-0.797967467268899),(36,115,0.216566972869045),(36,117,0.965483565782647),(36,118,-0.78598895229957),(37,85,-2.26774651326029),(37,86,0.458693197424238),(37,87,-1.01680043946654),(37,91,0.172620319223609),(37,99,-1.39519943845943),(37,105,0.31305124057741),(37,111,-1.98110904263436),(37,112,0.544480727561266),(37,118,0.246459852900784),(38,87,-0.346934415723136),(38,90,0.963835566270943),(38,103,-1.4981536301767),(38,105,1.54507583849605),(38,106,0.911893063142796),(38,111,-0.382541886654256),(38,115,-2.91801202429273),(39,87,0.932966093935972),(39,89,1.84331797235023),(39,91,-1.59527878658406),(39,94,1.05726035340434),(39,97,1.29290902432325),(39,98,-1.26313058870205),(39,107,-3.05102694784387),(39,108,1.56656086916715),(39,109,2.23954741050447),(39,111,-2.12474440748314),(39,113,0.663151951658681),(39,116,2.32436597796564),(39,118,-0.886410107730339),(40,88,0.923665578173162),(40,92,0.799165318765831),(40,99,3.25209814752647),(40,104,-2.12694174016541),(40,110,-0.772988067262795),(40,116,-1.97849971007416),(40,118,-1.79265724662007),(41,88,-1.25041962950529),(41,93,0.459585863826411),(41,96,-1.9306695760979),(41,97,-1.20479445783868),(41,100,0.144314401684622),(41,101,-1.0657368694113),(41,104,1.20172734763634),(41,105,-3.14605395672475),(41,106,-1.98930326242866),(41,107,-0.810876796777245),(41,109,-1.28125858333079),(41,110,-1.52050843836787),(41,111,-1.83011871700186),(41,112,-0.884334849085971),(42,85,2.86220892971587),(42,86,0.00180059205908367),(42,87,0.792001098666341),(42,99,-0.76326792199469),(42,100,-1.35436567278054),(42,103,1.14558854945524),(42,109,0.844325083162938),(42,113,1.14314706869716),(43,85,-1.96998504593036),(43,88,0.076067384868923),(43,89,1.57322916348766),(43,93,1.33256782738731),(43,97,-1.9223761711478),(43,98,-0.742484817041536),(43,101,-1.57758568071535),(43,102,-2.21822260200812),(43,103,-1.09282967619861),(43,105,3.16381572923978),(43,110,-1.92200231940672),(43,112,-1.39233069856868),(43,114,-2.28971221045564),(43,116,-1.60916470839564),(44,89,-1.26152073732719),(44,98,-0.101207007049776),(44,99,-2.33085116122929),(45,87,2.70735038300729),(45,88,0.867542039246803),(45,90,-3.16536454359569),(45,91,4.144466994232),(45,95,-0.0263222144230476),(45,98,0.538010803552355),(45,108,-0.964613788262581),(45,109,0.142109439374981),(45,112,-0.455923642689291),(45,115,-0.991851557969909),(46,85,0.561082796716208),(46,89,2.02027191991943),(46,91,-0.100833155308695),(46,94,1.19023712881863),(46,97,-1.25207525864437),(46,100,-0.666318247016816),(46,101,-1.39212469862972),(46,108,-1.33728293710135),(46,112,-0.0166096987823114),(47,86,-3.11495559556871),(47,91,-0.73635059663686),(47,92,-2.15971861934263),(47,94,-1.87719351786859),(47,95,1.3003555406354),(47,100,0.216391491439558),(47,101,0.743964964751122),(47,104,2.3997085482345),(47,105,1.86329233680227),(47,108,0.682966093935972),(47,112,-1.28109073152867),(47,114,-1.17023224585711),(47,118,0.546647541734062),(48,86,-1.42773216956084),(48,91,-0.72636341441084),(48,98,-0.819750053407392),(48,99,1.62992492446669),(48,100,1.66071810052797),(48,103,0.965628528702658),(48,105,-1.27102725302896),(48,106,-1.45042268135624),(48,111,-1.09080782494583),(48,115,-1.61305581835383),(49,87,-0.916470839564196),(49,89,0.434781945249794),(49,93,0.625598925748466),(49,94,0.617923520615253),(49,95,-1.17795342875454),(49,102,3.59665974913785),(49,113,-2.6253700369274),(49,114,1.17641987365337),(50,89,-1.55301065095981),(50,105,-0.255775627918332),(50,107,1.62717062898648),(51,87,0.234153263954588),(51,92,0.27774895474105),(51,97,-0.300691244239631),(51,98,-2.03948332163457),(51,103,2.33489486373485),(51,106,1.44498275704215),(51,112,-1.44871364482559),(51,118,0.910390026551103),(52,89,0.0691702017273476),(52,97,2.82396160771508),(52,106,-1.40354625080111),(52,110,-1.01065858943449),(52,111,-0.36870937223426),(52,113,0.789132358775597),(52,114,-0.944837794122135),(52,118,1.23207800531022),(53,88,-0.618198187200537),(53,90,-1.95955534531693),(53,92,1.00793481246376),(53,94,1.76572466200751),(53,104,0.36931974242378),(53,105,-2.70544297616504),(53,109,-2.88065736869411),(54,85,0.14828943754387),(54,91,3.12753685110019),(54,94,-0.650746177556688),(54,96,-1.74573503830073),(54,111,1.85079500717185),(54,112,0.342585528122807),(54,113,-1.46901608325449),(54,118,1.87449262977996),(55,87,-0.739524521622364),(55,95,1.31790368358409),(55,107,-0.632343516342662),(55,110,0.193983275856807),(55,117,0.0426496169927061),(56,107,0.799508651997436),(56,111,-0.585123752555925),(56,113,-3.1783577990051),(56,114,-0.402829065828425),(57,87,-1.64798425244911),(57,90,-2.13657032990509),(57,91,-1.02847376934111),(57,92,-0.384693441572314),(57,93,1.13335825678274),(57,94,-0.629551072725608),(57,95,0.0271462141788995),(57,96,-0.240134891811884),(57,100,-1.41019165623951),(57,102,-0.264404736472671),(57,103,1.41521958067568),(57,115,-0.466628009887997),(58,86,-2.62129581591235),(58,87,1.75677510910367),(58,89,2.15771202734458),(58,90,2.85885952330088),(58,95,-0.0391094698934903),(58,96,-0.780091250343333),(58,101,-2.69515060884426),(58,103,0.514366588335826),(58,109,-0.785966063417463),(58,110,0.314035462508011),(58,113,-2.16180913724174),(58,114,1.6563539536729),(58,115,-1.11064485610523),(58,118,1.61420026245918),(59,85,0.65050202948088),(59,86,-0.212370677816096),(59,90,-0.965147862178411),(59,91,-1.9418927579577),(59,93,2.15498825037385),(59,97,-1.82631153294473),(59,98,-0.448782311471908),(59,100,0.894291512802515),(59,102,2.05749687185278),(59,112,0.132526627399518),(59,114,-2.67267372661519),(60,85,-2.10504470961638),(60,87,-0.78415784173101),(60,90,-1.70291756950591),(60,91,-0.926923429059725),(60,96,-0.390781884212775),(60,100,1.13838618121891),(60,101,-0.371356852931303),(60,105,-1.6487243263039),(60,107,-0.501777703176977),(60,109,2.39524521622364),(60,110,-2.84419537949767),(60,114,-0.556024353770562),(61,89,-0.482970671712393),(61,94,-1.05568102053896),(61,96,0.345835749382),(61,98,-2.36602374340037),(61,100,1.33148442030091),(61,102,-1.9704657124546),(61,103,0.951757866145817),(61,114,-0.750892666402173),(61,115,2.13698232978301),(62,93,-1.09012115848262),(62,95,-0.495620593890194),(62,107,-2.38921781060213),(62,109,-3.0601748710593),(62,110,-0.299081392864773),(62,111,-0.254676961577197),(63,87,0.454641865291299),(63,90,-0.204626606036561),(63,93,-2.01418347727897),(63,97,-0.119556260872219),(63,100,0.949964903714103),(63,103,1.51911984618671),(63,104,-1.63940855128636),(63,108,-1.93168431653798),(63,111,1.29751731925413),(63,114,-1.40511795403912),(63,117,-1.49972533341472),(64,87,0.302743614001892),(64,94,-0.24207281716361),(64,99,0.412747581408124),(64,110,-2.1456495864742),(64,112,-0.0197149571214941),(64,116,-1.77617725150304),(65,87,0.972823267311625),(65,88,2.31765190588092),(65,90,2.34405041657765),(65,97,0.357264931180761),(65,99,-0.610087893307291),(65,107,-0.386516922513504),(65,110,-0.597560045167394),(65,111,0.498146000549333),(65,114,-2.14590899380474),(65,116,-1.5739310892056),(65,117,-1.83511612292856),(66,85,1.89481795709098),(66,102,2.15009002960295),(66,105,-1.42773979918821),(66,108,0.650090029602954),(66,111,0.115337076937162),(66,115,-1.84226508377331),(66,118,-1.47936185796686),(67,86,1.53440198980682),(67,90,-0.168057802056948),(67,92,-1.24598681600391),(67,104,3.16823328348644),(67,109,-0.624240852076785),(67,111,-0.636913663136693),(68,87,1.839632862331),(68,88,4.02895443586535),(68,90,0.435476241340373),(68,93,-0.653302102725303),(68,95,0.478965117343669),(68,96,1.56382946256905),(68,97,-1.60020752586444),(68,103,2.06713309121982),(68,107,-0.574968718527787),(68,112,-1.88238166447951),(68,114,-0.917256691183203),(69,87,2.74820703756829),(69,88,1.94166386913663),(69,92,3.02720725119785),(69,94,0.332171086764122),(69,95,-0.311441389202551),(69,97,-0.968657490768151),(69,108,-0.346690267647328),(69,113,-1.60025330362865),(69,114,2.73226111636708),(69,118,0.0813928647724846),(70,85,-2.47123630481887),(70,86,-0.187612537003693),(70,87,-0.774376659443953),(70,90,-1.95284890285958),(70,96,-2.00300607318339),(70,97,1.39929654835658),(70,99,-1.94660023804437),(70,105,1.20212408825953),(70,107,1.45721304971465),(70,109,-0.24336985381634),(70,110,-2.40691854609821),(70,111,2.58027893917661),(71,85,1.73068178350169),(71,93,0.588030640583514),(71,96,0.133686330759606),(71,100,0.801881466109195),(71,104,-1.29093295083468),(71,106,-0.850726340525529),(71,111,3.83507797479171),(71,113,0.827318643757439),(72,94,2.6599475081637),(72,96,-3.48569444868313),(72,99,-0.447416608172857),(72,110,3.42081972716452),(72,112,3.46969512009033),(72,114,-0.766151921140171),(72,115,-1.03968932157353),(72,116,0.911992248298593),(73,88,1.70519119846187),(73,94,0.255394146549883),(73,99,-1.33178960539567),(73,100,-2.04556413464766),(73,106,1.86189611499374),(73,110,0.118793298135319),(73,115,-1.38261055330058),(74,90,1.43612475966674),(74,94,0.0689794610431227),(74,99,-0.855510116885891),(74,102,-1.73202459791864),(74,106,0.457396160771508),(74,107,-2.24403363139744),(74,110,-0.180959501937925),(74,113,-2.14656514175848),(74,116,-2.01294747764519),(75,85,0.58958708456679),(75,86,2.18092898342845),(75,93,-1.29482406079287),(75,98,1.39274269844661),(75,103,-2.99639118625446),(75,105,1.38111514633625),(75,111,-0.0631656849879452),(75,117,1.13199255348369),(76,86,0.653767509994812),(76,89,-1.14506210516678),(76,92,2.52906125064852),(76,94,2.07945493942076),(76,99,0.521111178930021),(76,101,-0.343333231604968),(76,103,0.843333231604968),(76,106,0.417416913357952),(76,110,-2.36864833521531),(76,113,-0.584543900875881),(77,88,-1.18477431562243),(77,91,-0.857089449751274),(77,93,3.07996612445448),(77,98,0.0449842829676199),(77,101,0.226569414349803),(77,102,-1.75114444410535),(77,103,-1.97096163823359),(77,104,2.98615985595264),(77,105,-1.28038880581072),(77,109,2.10245063631092),(78,88,-2.281945249794),(78,93,-1.03677480391858),(78,94,-0.939252906888027),(78,101,-1.47610400708029),(78,104,1.43624683370464),(78,110,1.77770317697684),(78,114,1.38744773705252),(78,116,-0.516067995239113),(78,117,1.63215277565844),(78,118,-0.764458143864254),(79,87,-0.854564043092135),(79,92,1.53157139805292),(79,94,2.94473860896634),(79,107,-1.93949705496384),(79,108,-2.47009186071352),(79,114,-1.43853572191534),(79,118,2.060396130253),(80,87,0.788811914426099),(80,88,-1.02732932523576),(80,91,-1.42500839259011),(80,99,3.32963805047761),(80,101,-0.811029389324625),(80,107,0.630458998382519),(80,113,-0.938901944029054),(81,85,0.270317697683645),(81,86,2.68137913144322),(81,90,-0.713980529190954),(81,93,-0.228713339640492),(81,96,1.71558275093844),(81,97,-2.16162602618488),(81,106,1.39291055024873),(81,107,2.77861873226112),(81,110,0.156468398083437),(81,115,-1.55293435468612),(82,86,-1.27986999114963),(82,92,-1.02227851191748),(82,110,-2.02272103030488),(82,112,0.838831751457259),(83,87,0.600451673940245),(83,91,0.381954405346843),(83,93,0.0680257576219977),(83,101,-2.93430890835292),(83,103,1.42097994933927),(83,105,3.76165044099246),(83,108,-1.75320444349498),(84,85,-0.889950254829554),(84,86,-0.407193212683493),(84,89,-0.166043580431532),(84,95,-2.15895565660573),(84,99,0.43679616687521),(84,104,0.0705359050263985),(84,111,0.902226325266274),(84,113,-0.465834528641621),(84,114,0.445646534623249),(35,105,-0.171040986358226)]
orgname='BHNEAT_9_7'
cnodes = 119

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()