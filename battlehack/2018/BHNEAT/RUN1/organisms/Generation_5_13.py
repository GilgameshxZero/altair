edge = [(0,85,-0.694296090578936),(0,89,1.20646534623249),(0,90,0.631962034974212),(0,93,0.352793969542528),(0,98,0.340777306436354),(0,101,2.11569566942351),(0,105,2.8214209418012),(0,108,-0.195623645741142),(0,113,0.795342875453963),(0,114,-1.26924954985199),(0,117,0.563676870021668),(0,118,1.79517502365184),(1,86,1.26065858943449),(1,92,-1.90469069490646),(1,98,0.940473647267068),(1,102,-1.79300820947905),(1,104,0.675061799981689),(1,107,-2.36381115146336),(1,108,-3.46163823358867),(1,109,-0.596110415967284),(1,113,0.959685048982208),(2,87,-0.830530716879788),(2,88,-0.389797662282174),(2,100,-0.224387340922269),(2,106,-2.66017639698477),(2,108,-0.17261268959624),(2,110,1.23393963438826),(2,113,0.678067873165075),(2,118,-2.39417706839198),(3,89,-0.594424268318735),(3,92,-0.78560747093112),(3,97,-2.23776970732749),(3,99,3.07676931058687),(3,101,1.69020661030915),(3,103,1.71483504745628),(3,105,2.37957396160771),(3,108,-1.92810602130192),(3,109,-0.926313058870205),(3,111,-0.769569994201483),(3,112,0.0189672536393322),(3,116,-2.09441663869137),(4,90,-0.606006042664876),(4,91,-0.599147007660146),(4,97,0.928571428571428),(4,99,1.0475478377636),(4,101,-0.313119907223731),(4,108,-0.719092379528184),(4,113,-0.819147312845241),(4,118,2.1446882534257),(5,86,0.74603259376812),(5,87,1.665288247322),(5,89,0.0227668080690939),(5,92,-2.07733390301218),(5,93,0.920041505172887),(5,99,0.417462691122166),(5,104,-0.684171575060274),(5,114,0.716727195043794),(5,118,-0.788720358897671),(6,89,0.0289849543748283),(6,92,2.07632679219947),(6,94,0.5568025757622),(6,100,0.548707541123691),(6,101,0.549661244544816),(6,103,-2.19775994140446),(6,107,1.54247413556322),(6,110,-0.0184179204687643),(6,113,-0.438428907132176),(7,85,2.27187414166692),(7,86,-1.35959959715567),(7,90,-0.457602160710471),(7,95,-0.803857539597766),(7,99,1.8627430036317),(7,100,-1.00125125888852),(7,104,2.20645008697775),(7,106,0.645771660512101),(7,108,-2.25527970213935),(7,112,-1.94332712790307),(7,116,-1.49718466750084),(8,92,-2.43478194524979),(8,93,0.0704367198706015),(8,95,-0.103953672902615),(8,99,0.750846888637959),(8,106,0.482039857173376),(8,107,-1.18779564806055),(8,115,0.793832209234901),(8,116,1.67442854091006),(8,118,-0.519882808923612),(9,85,-2.42654194769127),(9,87,1.15509506515702),(9,98,-0.728797265541551),(9,101,-1.05807672353282),(9,103,-0.167470320749535),(9,105,-0.471083712271493),(9,106,1.99267555772576),(9,113,-0.0475478377636037),(10,89,-1.65370647297586),(10,96,0.438978240302744),(10,106,-0.354503006073183),(10,108,1.0436109500412),(10,111,-1.15421765800958),(10,112,1.13879818109684),(10,114,0.107104709006012),(10,115,2.16764580217902),(10,116,1.01451155125584),(10,117,2.1721549119541),(11,89,-1.82333597827082),(11,97,1.15105136265145),(11,105,-1.1808679464095),(11,112,-1.45300912503433),(11,115,0.802941984313486),(12,92,2.02211066011536),(12,93,-0.91003143406476),(12,94,-2.02017273476363),(12,97,-1.43543809320353),(12,98,1.92634357737968),(12,99,-1.85995056001465),(12,108,1.63328959013642),(12,116,-1.24239326151311),(13,86,-0.314714499343852),(13,87,-1.51997436445204),(13,90,0.242873928037355),(13,99,0.188390758995331),(13,102,-0.52272103030488),(13,104,1.83059175389874),(13,113,-0.347605822931608),(13,116,-0.876522110660115),(13,118,0.0113605151524399),(14,90,0.208288827173681),(14,93,0.200987273781549),(14,95,-3.11059907834101),(14,102,-1.67032380138554),(14,104,0.0381481368449965),(14,106,-1.58532975249489),(14,109,1.92022461622974),(14,110,2.60573900570696),(14,111,0.780075991088595),(15,85,0.328028199102756),(15,92,-0.551423688467055),(15,99,-1.15150914029359),(15,101,-2.54723502304147),(15,104,-1.30321665089877),(15,108,1.95875423444319),(15,117,0.450178533280435),(16,86,1.48388622699667),(16,87,-2.07382427442244),(16,88,-0.75983458967864),(16,90,2.57217627491073),(16,91,-2.4322946867275),(16,95,-0.64059114352855),(16,97,1.26239814447462),(16,98,-2.10753196813868),(16,99,-2.38602862636189),(16,101,-0.679448835718864),(16,108,-1.96481978820154),(16,110,0.941991943113498),(17,89,-2.19127475814081),(17,96,-1.92656483657338),(17,99,-0.987029633472701),(17,101,1.60252693258461),(17,106,-1.44685201574755),(17,107,-0.0424512466811121),(17,109,-2.30252998443556),(18,90,2.87580492568743),(18,91,-2.26702169866024),(18,93,0.794717246009705),(18,99,0.351573229163488),(18,102,-1.2612231818598),(18,103,-2.14293343913083),(18,104,-0.566423535874508),(18,110,0.224768822290719),(18,111,1.73129978331858),(18,116,1.44581438642537),(18,117,1.76816614276559),(18,118,-0.164571062349315),(19,87,-0.569750053407392),(19,89,-2.04844050416578),(19,93,-2.07422101504562),(19,95,0.781235694448683),(19,101,-1.01460310678426),(19,105,-0.086664937284463),(19,115,-2.70167394024476),(20,88,-1.13731803338725),(20,101,2.4344615009003),(20,103,1.80224005859554),(20,104,0.500579851680044),(20,105,0.700086977752007),(20,106,-1.29696035645619),(20,111,-2.54597613452559),(20,116,-0.651356547746208),(21,86,0.736610003967406),(21,87,0.486831263161107),(21,94,-0.0424207281716361),(21,96,1.46183660390027),(21,101,-2.17009491256447),(21,102,1.07890560625019),(21,105,-3.05423139133885),(21,107,-2.38185522019105),(21,108,1.17255928220466),(22,86,1.40942106387524),(22,88,-2.56353190710166),(22,91,-2.67477950376904),(22,92,-1.14886928922391),(22,93,0.315958128604999),(22,98,-2.49792474135563),(22,106,-0.0901364177373577),(22,115,1.24885555589465),(22,117,-0.936002685628834),(23,85,-1.14320810571612),(23,86,-0.234321115756707),(23,88,-1.4809259315775),(23,90,-0.228049562059389),(23,97,-1.69507431257057),(23,104,1.40720847193823),(23,112,2.03093050935392),(23,114,-1.2903378398999),(23,115,-1.5219046601764),(23,116,0.21828363902707),(24,89,-0.65538499099704),(24,90,-0.946043275246437),(24,91,0.835901974547563),(24,101,1.37652211066012),(24,107,-0.0834681234168523),(24,108,-2.47868282113102),(24,110,0.2849971007416),(24,112,-3.03784295175024),(25,90,-0.609195226905118),(25,92,-1.4257484664449),(25,94,-1.94306772057253),(25,98,2.20809045686209),(25,105,1.98815881832331),(25,108,0.467314676351207),(25,109,-2.10729544969024),(25,115,1.86004211554308),(26,85,2.78418836024049),(26,87,-2.3978392895291),(26,89,-2.7020325327311),(26,95,-1.13191625721),(26,98,-0.402142399365215),(26,100,1.9849391155736),(26,101,-0.52500991851558),(26,102,1.11571092867824),(26,103,0.921170690023499),(26,104,-0.32876064333018),(26,107,-0.022049623096408),(26,109,1.51828821680349),(26,112,-2.36402478102969),(26,113,1.75025177770318),(26,117,-1.41451765495773),(27,85,-2.40050965910825),(27,87,0.460219122898038),(27,94,0.562845240638447),(27,100,0.522019104586932),(27,102,-2.09721671193579),(27,103,-1.57051301614429),(27,104,-0.598437452314829),(27,105,0.353724784081545),(27,108,-0.529824213385418),(27,110,1.12489700003052),(27,114,-0.714636677144688),(28,87,0.328470717490158),(28,88,2.10028382213813),(28,97,-0.279549546800134),(28,99,-3.09436323129978),(28,104,1.26448866237373),(28,113,-2.08395641956847),(28,114,0.054475539414655),(29,88,1.30207220679342),(29,91,0.0277871028778954),(29,102,1.24343852046266),(29,105,-0.495902890102847),(29,116,0.308511612292856),(30,95,1.84762108218635),(30,96,-1.51598406933805),(30,99,-1.3589281899472),(30,101,2.22014526810511),(30,104,-1.08447523422956),(30,109,0.727111117893002),(30,110,2.9504074221015),(30,114,0.275437177648244),(30,118,-1.58948789941099),(31,85,0.352771080660421),(31,92,2.21063875240333),(31,94,-2.11727500228889),(31,96,3.26055177465133),(31,99,1.72315134128849),(31,103,2.42538224433119),(31,107,-1.37557603686636),(31,108,2.76372569963683),(31,109,-0.545037690359203),(31,111,1.92954039124729),(31,112,-0.526215399639882),(31,117,0.74008911404767),(32,86,-1.73276467177343),(32,87,0.162823877681814),(32,89,-0.0729697561571093),(32,92,-0.793374431592761),(32,98,-0.28133487960448),(32,99,-0.867778557695242),(32,104,2.23535874507889),(32,106,1.02673421430097),(32,109,-0.251937925351726),(32,116,0.210707419049654),(32,118,1.70703756828517),(33,96,1.62645344401379),(33,98,1.18591113010041),(33,108,1.8542283394879),(33,110,-3.05409405804621),(33,111,1.11726737266152),(33,114,0.396595660267952),(34,85,-2.47474593340861),(34,90,0.439024018066958),(34,99,-0.799356059450056),(34,104,-1.04669331949828),(34,109,2.51152073732719),(35,86,-2.26386303292947),(35,87,-0.423543504135258),(35,97,-0.443662831507309),(35,98,-1.44279305398724),(35,100,-1.20773186437574),(35,104,-0.16978972746971),(35,107,-0.56953642384106),(35,109,-1.91555528427992),(35,110,0.995094149601733),(35,112,-1.76381725516526),(36,85,-1.95655690176092),(36,87,0.805032502212592),(36,90,-0.779595324564348),(36,91,-1.69980468153935),(36,104,0.185247352519303),(36,107,-0.26502273628956),(36,109,1.8527024140141),(36,112,0.818811609241005),(36,115,0.340891750846889),(36,117,-1.92312387462996),(36,118,1.88903469954527),(37,85,-1.3546708578753),(37,86,-0.833384197515793),(37,87,-0.188756981109043),(37,91,1.59658345286416),(37,99,-2.25395977660451),(37,105,-0.195158238471633),(37,111,1.172917874691),(37,112,-0.985251930295724),(37,118,2.25299844355602),(38,87,0.635364848780785),(38,90,-0.473189489425336),(38,103,1.96626178777429),(38,105,1.00944547868282),(38,106,1.59787285988952),(38,111,0.773728141117588),(38,115,0.487243263039033),(39,87,-1.01876888332774),(39,89,0.470900601214637),(39,91,-0.363422040467544),(39,94,1.93320261238441),(39,97,0.61482589190344),(39,98,-0.353144932401502),(39,107,-0.33844264046144),(39,108,-1.81249427777947),(39,109,2.76465651417585),(39,111,0.973204748680074),(39,113,-0.786461989196448),(39,116,-1.80227057710501),(39,118,0.340556047242653),(40,88,1.99397259437849),(40,92,0.188375499740593),(40,99,1.58818323313089),(40,104,-0.222800378429518),(40,110,1.11331522568438),(40,116,-2.2282937101352),(40,118,-0.497146519363994),(41,88,-1.38866847743156),(41,93,-0.806512649922178),(41,96,-1.35123752555925),(41,97,-0.708105716116825),(41,100,-1.01901303140355),(41,101,2.32921842097232),(41,104,2.28885769219031),(41,105,-0.647167882320627),(41,106,-0.354632709738456),(41,107,-3.04025391399884),(41,109,-1.03419598986785),(41,110,-0.772515030365917),(41,111,-2.5105822931608),(41,112,-0.949880977813044),(42,85,0.351855525376141),(42,86,1.82207708975494),(42,87,-1.03526413769951),(42,99,-0.161702322458571),(42,100,-1.52224036378063),(42,103,1.70369579149754),(42,109,0.767799920651875),(42,113,-0.486281929990539),(43,85,-0.908246101260414),(43,88,-1.53431806390576),(43,89,2.17320780053102),(43,93,-0.542130802331614),(43,97,-1.67081209753716),(43,98,0.978308969389935),(43,101,-0.351222266304514),(43,102,-0.399639881588183),(43,103,-0.799127170628987),(43,105,1.83843501083407),(43,110,0.187017426068911),(43,112,-1.63647114474929),(43,114,1.17352824488052),(43,116,-0.693838312936796),(44,89,-0.682615131076998),(44,98,1.65160069582202),(44,99,-2.97805719168676),(45,87,-1.41508987701041),(45,88,-1.84881130405591),(45,90,-2.65390484328745),(45,91,1.30971709341716),(45,95,2.42660298471023),(45,98,1.28688924832911),(45,108,1.21285134434034),(45,109,-1.27986999114963),(45,112,-1.09738456373791),(45,115,-3.17556535538804),(46,85,-2.70220801416059),(46,89,0.358050782799768),(46,91,-2.40958891567736),(46,94,0.262764366588336),(46,97,0.640812402722251),(46,100,-0.837328714865566),(46,101,-1.29146702475051),(46,108,1.9182409131138),(46,112,0.855868709372234),(47,86,1.37206640827662),(47,91,0.43771172215949),(47,92,0.0833765678884243),(47,94,-2.64867091891232),(47,95,-1.24621570482498),(47,100,-0.968565935239723),(47,101,-1.73505355998413),(47,104,-0.64622943815424),(47,105,-0.205214087343974),(47,108,-0.0356303598132267),(47,112,-2.09503463850826),(47,114,2.35168004394665),(47,118,-0.986144596697897),(48,86,0.351420636616108),(48,91,-0.591357158116398),(48,98,0.309213538010804),(48,99,-2.35595263527329),(48,100,-0.106875820184942),(48,103,-1.61931211279641),(48,105,1.73017059846797),(48,106,0.937528611102634),(48,111,1.71323282570879),(48,115,-2.38158818323313),(49,87,1.65707876827296),(49,89,2.23029267250587),(49,93,1.65826136051515),(49,94,1.33144627216407),(49,95,1.72162541581469),(49,102,0.790116580706198),(49,113,0.309114352855007),(49,114,0.0233161412396619),(50,89,-0.647503585924863),(50,105,-0.631351664784692),(50,107,-0.748130741294595),(51,87,-0.911679433576464),(51,92,-1.16478469191565),(51,97,2.87501907406842),(51,98,1.71212652974029),(51,103,-0.300683614612262),(51,106,1.83320108645894),(51,112,0.333880123294778),(51,118,-0.241348002563555),(52,89,2.35427411725211),(52,97,-0.211142307809687),(52,106,0.19159520249031),(52,110,-0.674764244514298),(52,111,0.308694723349712),(52,113,1.99256874294259),(52,114,-0.6759697256386),(52,118,-1.21657460249641),(53,88,0.290444654683065),(53,90,-0.89935758537553),(53,92,-0.505272072511978),(53,94,0.622814111758782),(53,104,-2.43381298257393),(53,105,2.23104037598804),(53,109,2.33420819727165),(54,85,2.01670888393811),(54,91,0.011864070558794),(54,94,0.962614825891903),(54,96,1.67577135532701),(54,111,0.824228644672994),(54,112,1.10910367137669),(54,113,1.69795831171606),(54,118,-0.906476027710807),(55,87,1.6151310769982),(55,95,-1.71689504684591),(55,107,-0.632343516342662),(55,110,1.40850550859096),(55,117,-2.40858180486465),(56,107,-2.11912900173956),(56,111,-0.62968840601825),(56,113,-1.65660573137608),(56,114,-0.635647144993439),(57,87,-1.76128421887875),(57,90,0.844706564531388),(57,91,1.55415509506516),(57,92,-0.228553117465743),(57,93,2.50383007293924),(57,94,-0.482367931150243),(57,95,1.28780480361339),(57,96,1.30961027863399),(57,100,2.71617023224586),(57,102,1.27307962279122),(57,103,1.14940336313974),(57,115,-0.0176015503402814),(58,86,-1.10225226599933),(58,87,1.73304696798608),(58,89,-0.250160222174749),(58,90,2.47077852717673),(58,95,0.714651936399426),(58,96,1.15131076998199),(58,101,-0.394512771996216),(58,103,-0.256973479415265),(58,109,-2.12720114749596),(58,110,2.7189397869808),(58,113,0.579897457808161),(58,114,-1.88750877407147),(58,115,-2.39945677053133),(58,118,-2.15353862117374),(59,85,-0.927686391796625),(59,86,1.80104983672597),(59,90,2.6411938840907),(59,91,2.2308267464217),(59,93,2.56657612842189),(59,97,-0.538872951445051),(59,98,0.526596881008332),(59,100,0.91613513595996),(59,102,-2.28199102755821),(59,112,1.08491012298959),(59,114,0.221129490035707),(60,85,1.98211615344707),(60,87,-2.07937864314707),(60,90,2.70992156743065),(60,91,-0.54582354197821),(60,96,1.35448774681845),(60,100,-1.62182988982818),(60,101,0.172811059907834),(60,105,2.05580309457686),(60,107,0.844569231238746),(60,109,-2.52383495590075),(60,110,-2.01979125339518),(60,114,0.254066591387677),(61,89,0.289971617786187),(61,94,2.02156895657216),(61,96,1.49844355601672),(61,98,0.278176213873714),(61,100,-1.81440168462172),(61,102,-0.65294351023896),(61,103,-1.02583391827143),(61,114,0.409100619525742),(61,115,-2.42522965178381),(62,93,-1.24904629657888),(62,95,-2.96892452772607),(62,107,-0.43168431653798),(62,109,-0.773949400311289),(62,110,1.11642048402356),(62,111,1.54951628162481),(63,87,0.475203711050752),(63,90,-2.48619037446211),(63,93,-0.88327433088168),(63,97,0.192754905850398),(63,100,0.0122302926725059),(63,103,-0.530945768608661),(63,104,-0.114627521591845),(63,108,-1.93900875881222),(63,111,-0.993224890896329),(63,114,-1.9085207678457),(63,117,1.37501144444105),(64,87,0.337382122257149),(64,94,0.978988006225776),(64,99,0.0310373241370891),(64,110,0.91262550737022),(64,112,-2.81810205389569),(64,116,2.09566789757988),(65,87,2.98840296639912),(65,88,-1.14165166173284),(65,90,-0.0584047975096896),(65,97,0.705710013122959),(65,99,-0.0755333109530931),(65,107,-2.6446882534257),(65,110,-1.27016510513627),(65,111,1.36425366985076),(65,114,0.970885341959899),(65,116,2.18340861232337),(65,117,1.7573091830195),(66,85,-0.233787041840877),(66,102,2.25203711050752),(66,105,0.911160618915372),(66,108,0.180379650257881),(66,111,2.62196722312082),(66,115,1.99133274330882),(66,118,0.354838709677419),(67,86,0.494674520096438),(67,90,1.07744071779534),(67,92,1.39669484542375),(67,104,2.25222022156438),(67,109,1.48083437604907),(67,111,0.726569414349803),(68,87,-0.659634693441572),(68,88,-1.52278206732383),(68,90,-2.44047364726707),(68,93,1.94837794122135),(68,95,0.683194982757042),(68,96,-1.1919919431135),(68,97,0.673345133823664),(68,103,0.495284890285958),(68,107,-1.81943723868526),(68,112,0.54147465437788),(68,114,2.12988677632984),(69,87,0.717734305856502),(69,88,-2.13638721884823),(69,92,2.04184087649159),(69,94,-2.3794061098056),(69,95,1.18205816827906),(69,97,1.50589007232887),(69,108,1.90282906582843),(69,113,-1.31878109073153),(69,114,0.674016541032136),(69,118,1.2302621539964),(70,85,-1.28353221228675),(70,86,1.64334543900876),(70,87,-0.650090029602954),(70,90,0.487792596209601),(70,96,-0.00350962858973968),(70,97,-1.73787652211066),(70,99,0.835840937528611),(70,105,0.337206640827662),(70,107,2.84102908413953),(70,109,0.742210150456252),(70,110,2.63624988555559),(70,111,-0.274117252113407),(71,85,-1.44038209173864),(71,93,-1.73793755912961),(71,96,-1.8691671498764),(71,100,-0.161519211401715),(71,104,0.272911770989105),(71,106,2.04794457838679),(71,111,-1.35086367381817),(71,113,2.3726615192114),(72,94,-1.09222693563646),(72,96,1.64944914090396),(72,99,0.00495925778984954),(72,110,0.0777001251258888),(72,112,1.30352183599353),(72,114,1.40606402783288),(72,115,-0.242255928220466),(72,116,0.718008972441786),(73,88,2.54956205938902),(73,94,0.8879207739494),(73,99,0.22072511978515),(73,100,-0.0260093997009186),(73,106,-2.22151860103153),(73,110,-0.0933027130954924),(73,115,1.30793176061281),(74,90,0.257820368053224),(74,94,-1.06822412793359),(74,99,2.35088656270028),(74,102,-2.29201635792108),(74,106,1.54789880062258),(74,107,-1.81948301644948),(74,110,0.450956755272073),(74,113,0.368701742606891),(74,116,1.67464217047639),(75,85,1.37340922269356),(75,86,-1.0895107882931),(75,93,0.43374431592761),(75,98,-1.85034485915708),(75,103,-0.00777459028901029),(75,105,-0.0931730094302194),(75,111,-0.93160802026429),(75,117,-1.6262550737022),(76,86,-0.379589220862453),(76,89,-1.67167424542985),(76,92,1.07611316263314),(76,94,0.744651631214332),(76,99,-0.0711920529801325),(76,101,-1.85125278481399),(76,103,-1.28177739799188),(76,106,-0.579973754081851),(76,110,-0.633472701193274),(76,113,1.44383068330943),(77,88,-0.385418256172369),(77,91,-0.910901211584826),(77,93,-1.94106112857448),(77,98,-1.84022034363842),(77,101,-0.675176244392224),(77,102,2.36843470564898),(77,103,0.00679036835840937),(77,104,1.55278176213874),(77,105,2.22289193395795),(77,109,1.23412274544511),(78,88,-1.31124301889096),(78,93,1.1550492873928),(78,94,0.434163945432905),(78,101,-2.23209326456496),(78,104,-0.485351115451521),(78,110,-1.25298318430128),(78,114,0.0904034546952727),(78,116,-0.0314340647602771),(78,117,-2.14450514236885),(78,118,-2.35885189367351),(79,87,3.0672627948851),(79,92,-0.181661427655873),(79,94,-0.0314035462508011),(79,107,1.23174993133335),(79,108,2.06253242591632),(79,114,0.554986724448378),(79,118,-3.14209418012024),(80,87,0.577867976928007),(80,88,0.0753807184057131),(80,91,0.477263710440382),(80,99,-1.59624774925993),(80,101,2.74827570421461),(80,107,1.81546983245338),(80,113,-2.25692007202368),(81,85,-0.234458449049348),(81,86,-1.03329569383831),(81,90,1.61265907773064),(81,93,-0.206564531388287),(81,96,-0.837580492568743),(81,97,-1.81952879421369),(81,106,0.554757835627308),(81,107,2.30752739036225),(81,110,0.926145207068087),(81,115,1.78089999084445),(82,86,-1.55850398266549),(82,92,-0.473937192907498),(82,110,0.247291482284005),(82,112,1.89538254951628),(83,87,-1.6308328501236),(83,91,0.290955839716788),(83,93,1.08642841883602),(83,101,-1.82995086519974),(83,103,-0.397419660023804),(83,105,3.06745353556932),(83,108,-0.871105075228126),(84,85,-3.10261848811304),(84,86,0.107257301553392),(84,89,-1.60487685781426),(84,95,-0.899151585436567),(84,99,0.331453901791436),(84,104,0.32090212714011),(84,111,-1.05656605731376),(84,113,0.399060029908139),(84,114,1.07699819940794)]
orgname='BHNEAT_5_13'
cnodes = 119

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()