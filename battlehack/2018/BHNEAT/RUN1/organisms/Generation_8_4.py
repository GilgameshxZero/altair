edge = [(0,85,1.28100680562761),(0,89,-1.25149540696432),(0,90,0.207869197668386),(0,93,-2.76470229194006),(0,98,-1.61079744865261),(0,101,-0.0998260444959866),(0,105,3.74994659260842),(0,108,-2.84379100924711),(0,113,0.687879573961608),(0,114,2.60708944975127),(0,117,0.615291299172949),(0,118,0.278618732261116),(1,86,0.681417279580065),(1,92,0.316339609973449),(1,98,1.33667256691183),(1,102,0.976203192236091),(1,104,1.85746330149236),(1,107,-1.5581072420423),(1,108,-0.247734000671407),(1,109,-0.807649464400159),(1,113,-2.35645619067965),(2,87,0.366176335947752),(2,88,-0.861651966917936),(2,100,-0.8793069246498),(2,106,-1.73382518997772),(2,108,-3.16861476485489),(2,110,-0.715285195471053),(2,113,0.828188421277505),(2,118,2.63495284890286),(3,89,-0.810785241248817),(3,92,0.934873500778222),(3,97,1.18163853877377),(3,99,-2.16564683980834),(3,101,-4.10983611560411),(3,103,3.11008026367992),(3,105,0.623981444746239),(3,108,1.5598544267098),(3,109,-2.28646961882382),(3,111,-1.28846095156713),(3,112,-0.972067934202094),(3,116,1.41319009979553),(4,90,0.292336802270577),(4,91,1.7996154667806),(4,97,-2.64841151158177),(4,99,-1.25571459089938),(4,101,-2.06926175725578),(4,108,-3.64043855098117),(4,113,-4.84105197302164),(4,118,-1.90688802758873),(5,86,-0.989127780999176),(5,87,2.0102389599292),(5,89,2.57960753196814),(5,92,0.309366130558184),(5,93,0.258781701101718),(5,99,0.308297982726524),(5,104,-1.87554551835688),(5,114,3.31774346140934),(5,118,2.9413281655324),(6,89,2.76588488418226),(6,92,-3.29355754264962),(6,94,-2.91478469191565),(6,100,-2.15744499038667),(6,101,3.07018494216742),(6,103,-1.90619373149815),(6,107,1.65142521439253),(6,110,1.01778466139714),(6,113,-4.8031098361156),(7,85,-0.604953154087954),(7,86,-0.0902737510299996),(7,90,0.406262398144475),(7,95,-2.11442915128025),(7,99,1.77986236152226),(7,100,-2.38983581041902),(7,104,1.19606616412854),(7,106,0.959807123020112),(7,108,-1.29529709768975),(7,112,-1.86268196661275),(7,116,-0.968161564989166),(8,92,2.61137730033265),(8,93,-4.53854487746819),(8,95,0.332125308999909),(8,99,-0.790078432569354),(8,106,-1.26410718100528),(8,107,-1.00659199804682),(8,115,-0.194738608966338),(8,116,-0.225959044160283),(8,118,-2.58606219672231),(9,85,-5.4306695760979),(9,87,-2.96002075258644),(9,98,-2.06479842524491),(9,101,-2.35647907956175),(9,103,0.552385021515549),(9,105,2.92219306009095),(9,106,0.668095950193793),(9,113,-0.4143040253914),(10,89,-1.15208899197363),(10,96,3.22398297067171),(10,106,1.45757164220099),(10,108,0.803430280465102),(10,109,0.0269554734946744),(10,111,-2.08892330698569),(10,112,-3.50428785058138),(10,114,0.649540696432386),(10,115,5.05748161259804),(10,116,-0.887859736930448),(10,117,3.4327143162328),(11,89,2.40250862147893),(11,97,-1.78146458326975),(11,105,0.654110843226417),(11,112,-2.37416455580309),(11,115,2.36735892818995),(12,92,0.269142735068819),(12,93,-0.95859401226844),(12,94,-4.43613238929411),(12,97,-1.84584337900937),(12,98,1.00884273812067),(12,99,1.91750846888638),(12,108,1.54913480025636),(12,116,-0.841837824640645),(13,86,-2.14235358745079),(13,87,4.99414807580798),(13,90,1.90346995452742),(13,99,2.39083529160436),(13,102,0.54010132145146),(13,104,-2.61156804101688),(13,113,-4.31364635151219),(13,116,-0.858630634479812),(13,118,-1.69991912594989),(14,90,-2.49419385357219),(14,93,-0.298173467207862),(14,95,-0.226790673543504),(14,102,-0.913068025757622),(14,104,-0.226485488448744),(14,106,4.80126346629231),(14,109,3.12400433362835),(14,110,3.16753898739586),(14,111,1.98180333872494),(15,85,-2.43851283303324),(15,92,-2.381275368511),(15,99,0.321375164036988),(15,101,-2.79618213446455),(15,104,-3.9629352702414),(15,108,3.30811487166967),(15,117,-1.06060975981933),(16,86,-2.72835474715415),(16,87,3.79584643086032),(16,88,-0.789574877163),(16,90,-0.159146397289956),(16,91,-2.3505355998413),(16,95,1.49459822382275),(16,97,-5.20646534623249),(16,98,-1.67469557786798),(16,99,-3.03095339823603),(16,101,0.359744560075686),(16,108,2.26911221655934),(16,110,-3.65961943418683),(17,89,-3.62511062959685),(17,96,-2.82579271828364),(17,99,2.07645649586474),(17,101,2.89509262367626),(17,106,0.921575060274056),(17,107,2.32551805169836),(17,109,-0.299600207525864),(18,90,-1.43958861049226),(18,91,-2.40142521439253),(18,93,-0.431104464857937),(18,99,0.747741630298776),(18,102,-4.75651570177313),(18,103,-1.70778527176733),(18,104,-1.85087130344554),(18,110,2.15991698965423),(18,111,3.88647877437666),(18,116,-3.06844538712729),(18,117,1.40179143650624),(18,118,1.75422681356243),(19,87,-2.4449446089053),(19,89,2.33889278847621),(19,93,4.96166112247078),(19,95,3.67156743064669),(19,101,2.45260475478378),(19,105,1.74011963255715),(19,115,3.29828028199103),(20,88,-2.77455977050081),(20,101,0.824465163121433),(20,103,2.1105533005768),(20,104,-2.55192724387341),(20,105,0.170949430829798),(20,106,0.267929624317148),(20,111,-0.625820184942167),(20,116,1.25975829340495),(21,86,0.460448011719107),(21,87,-2.46816156498917),(21,94,-3.5903729361858),(21,96,0.233008819849238),(21,101,1.23824274422437),(21,102,4.18372905667287),(21,105,2.23698385570849),(21,107,1.86798455763421),(21,108,-4.99114200262459),(22,86,0.906964323862423),(22,88,1.6342051454207),(22,91,1.731246375927),(22,92,2.92873165074618),(22,93,2.10274056215094),(22,98,1.92596209601123),(22,106,0.410863063447981),(22,115,-3.00541703543199),(22,117,-3.74599444563128),(23,85,0.130596331675161),(23,86,-1.11588641010773),(23,88,-2.09297463911863),(23,90,3.42809839167455),(23,97,-3.20629749443037),(23,104,-0.807153538621174),(23,112,-3.14291055024873),(23,114,-1.71611682485427),(23,115,-2.43343913083285),(23,116,-2.58172856837672),(24,89,-1.0080721457564),(24,90,-3.70058290353099),(24,91,-1.66060365611744),(24,101,-0.469153416547135),(24,107,-2.46304971465194),(24,108,-1.16222876674703),(24,110,-2.8480025635548),(24,112,1.22605059968871),(25,90,4.25463881344035),(25,92,-1.0458006530961),(25,94,-0.485732596819971),(25,98,-0.318582720419935),(25,105,0.430326242866299),(25,108,-2.0501571703238),(25,109,0.575899533066805),(25,115,2.04464857936338),(26,85,-1.12064729758599),(26,87,0.386188848536637),(26,89,1.37833033234657),(26,95,2.06185338908048),(26,98,2.16876735740226),(26,100,-0.728858302560503),(26,101,-1.8185903500473),(26,102,-1.54094058046205),(26,103,-1.92399365215003),(26,104,1.6572161015656),(26,107,3.56565294351024),(26,109,-1.56928464613788),(26,112,-2.29684591204566),(26,113,2.37954344309824),(26,117,2.16816461684011),(27,85,-1.40179143650624),(27,87,-1.53682058168279),(27,94,1.47215186010315),(27,100,2.6512115848262),(27,102,0.340853602710044),(27,103,1.09336375011444),(27,104,0.0602130191961425),(27,105,2.97653889584033),(27,108,-0.163960692159795),(27,110,-1.25840021973327),(27,114,-1.56659901730399),(28,87,0.141087069307535),(28,88,-1.67295602282785),(28,97,0.481734672078616),(28,99,-2.46552934354686),(28,104,1.7473677785577),(28,113,2.13672292245247),(28,114,1.61239204077273),(29,88,-0.762993255409406),(29,91,4.0361033967101),(29,102,-0.650288399914548),(29,105,-0.00959044160283218),(29,116,-2.54214606158635),(30,95,-2.38928647724845),(30,96,0.7195806756798),(30,99,0.942854091006195),(30,101,-1.69176305429243),(30,104,-2.93073061311686),(30,109,0.331232642597736),(30,110,3.5058824427015),(30,114,0.334192938016907),(30,118,1.63002410962249),(31,85,-2.2673497726371),(31,92,-1.93062379833369),(31,94,-1.64885402996918),(31,96,0.983336893826106),(31,99,-0.917920468764305),(31,103,-0.0961409344767601),(31,107,1.92770165105136),(31,108,0.914654988250374),(31,109,4.14917447431867),(31,111,0.753761406292917),(31,112,1.11941892757958),(31,117,0.474936674092837),(32,86,-3.09018982512894),(32,87,2.9224753563036),(32,89,4.87827692495499),(32,92,0.0791879024628437),(32,98,0.252586443678091),(32,99,0.670308542130802),(32,104,0.552896206549272),(32,106,0.921407208471938),(32,109,-0.831461531418805),(32,116,-0.0538575395977658),(32,118,-0.272095400860622),(33,96,-4.03078554643391),(33,98,3.14069032868435),(33,108,-1.04345835749382),(33,110,-2.62950529496139),(33,111,1.88296151615955),(33,114,-2.94822534867397),(34,85,-1.77893917661061),(34,90,-1.52613910336619),(34,99,0.367023224585711),(34,104,-2.52466658528397),(34,109,2.007629627369),(35,86,-0.730574968718528),(35,87,0.566431165501877),(35,97,-3.33014160588397),(35,98,-2.57354960783715),(35,100,-2.64525284585101),(35,104,1.09108249153111),(35,107,-3.90700247199927),(35,109,-0.700720236823634),(35,110,-1.01982940153203),(35,112,3.55681783501694),(36,85,-2.59664448988311),(36,87,-2.42854091006195),(36,90,-1.70430616168706),(36,91,2.88098544267098),(36,104,-1.12666707358013),(36,107,-4.05482650227363),(36,109,1.99972533341472),(36,112,0.875362407300027),(36,115,1.09458449049348),(36,117,0.927488021485031),(36,118,-1.12807092501602),(37,85,-0.990150151066622),(37,86,0.0889233069856872),(37,87,-3.23595385601367),(37,91,-3.05665761284219),(37,99,-1.2628711813715),(37,105,3.78641621143223),(37,111,-1.75972014526811),(37,112,1.53568376720481),(37,118,-1.06411938840907),(38,87,3.14114047669912),(38,90,2.67558061464278),(38,103,0.282517471846675),(38,105,1.84851374858852),(38,106,0.558030945768609),(38,111,1.97510452589496),(38,115,-0.224112674336985),(39,87,-0.824022644734031),(39,89,-1.80955687124241),(39,91,1.98290200506607),(39,94,2.06302072206793),(39,97,2.71373638111515),(39,98,-2.48947874385815),(39,107,-0.884861293374432),(39,108,3.06719412823878),(39,109,1.31769768364513),(39,111,-3.3088702047792),(39,113,1.48890652180547),(39,116,-1.62054811243019),(39,118,0.165089877010407),(40,88,0.0994369335001679),(40,92,-3.39400158696249),(40,99,-3.93092898342845),(40,104,-0.407475508896146),(40,110,0.389088106936857),(40,116,-4.17652668843654),(40,118,0.697500534073916),(41,88,-0.849673451948607),(41,93,1.94251075777459),(41,96,-3.00392925809503),(41,97,-1.50753807184057),(41,100,-0.903538621173742),(41,101,-1.21507156590472),(41,104,2.99887081514939),(41,105,3.20805993835261),(41,106,-1.42875453962828),(41,107,-0.600604266487625),(41,109,-2.45118564409314),(41,110,1.33783227027192),(41,111,-0.947653126621296),(41,112,0.359675893429365),(42,85,-2.59877315591906),(42,86,-1.1099124118778),(42,87,-2.10138248847926),(42,99,-0.789513840144047),(42,100,0.984702597125156),(42,103,2.32676931058687),(42,109,-3.06212042603839),(42,113,-0.785363322855312),(43,85,0.848437452314829),(43,88,0.43900875881222),(43,89,2.55384228034303),(43,93,-1.0691091647084),(43,97,0.353350932340464),(43,98,-1.99412518692587),(43,101,2.31764427625355),(43,102,-1.88175603503525),(43,103,2.2114093447676),(43,105,5.01007110812708),(43,110,-1.46525467696158),(43,112,-2.41975920896023),(43,114,-0.594904934842982),(43,116,0.0450148014770955),(44,89,0.715811639759514),(44,98,2.58217108676412),(44,99,0.0225989562669758),(45,87,-0.648350474562822),(45,88,1.59498123111667),(45,90,-1.045777764214),(45,91,-1.17582476271859),(45,95,0.895176549577319),(45,98,-3.46333201086459),(45,108,-5.84806360057375),(45,109,3.42666402172918),(45,112,2.39400921658986),(45,115,0.132930997650075),(46,85,-2.38012329477828),(46,89,1.55986205633717),(46,91,-0.1534012878811),(46,94,-4.3455153050325),(46,97,4.25975829340495),(46,100,4.26039918210395),(46,101,-0.566446424756615),(46,108,1.07596819971313),(46,112,1.23661763359478),(47,86,-0.735656300546281),(47,91,0.583651234473709),(47,92,-1.24661244544816),(47,94,-3.99198126163518),(47,95,-0.839983825189978),(47,100,3.35190130314035),(47,101,0.114902188177129),(47,104,0.44045838801233),(47,105,0.316003906369213),(47,108,-0.00530259102145447),(47,112,-0.85033722952971),(47,114,-1.43433179723502),(47,118,-1.01677755058443),(48,86,2.47607348857082),(48,91,-3.96880245368816),(48,98,0.136692403942991),(48,99,2.57721945860164),(48,100,3.32630390331736),(48,103,2.41890469069491),(48,105,-0.571619312112796),(48,106,-3.91532639545885),(48,111,0.602877895443586),(48,115,0.569437238685262),(49,87,2.3778801843318),(49,89,-1.08084353160192),(49,93,2.24941251869259),(49,94,2.06976531266213),(49,95,0.240661336100345),(49,102,-1.09201330607013),(49,113,0.413365581225013),(49,114,6.4678334910123),(50,89,2.18436994537187),(50,105,0.287575914792322),(50,107,-1.07132175664541),(51,87,2.36006500442518),(51,92,4.19035920285653),(51,97,2.07824945829646),(51,98,0.750198370311594),(51,103,-2.15234076967681),(51,106,-1.45370342112491),(51,112,-0.146526993621631),(51,118,-3.02960295419172),(52,89,1.28777428510392),(52,97,-1.00500503555406),(52,106,4.56221198156682),(52,110,-0.536744285409101),(52,111,1.38999603259377),(52,113,3.38229773857845),(52,114,-1.59808648945585),(52,118,4.34035004730369),(53,88,1.90627765739921),(53,90,-1.43894772179327),(53,92,0.17954802087466),(53,94,2.54615924558245),(53,104,-1.367297891171),(53,105,-1.01921903134251),(53,109,-2.37328714865566),(54,85,-2.17119357890561),(54,91,1.8309961241493),(54,94,2.31855983153783),(54,96,-1.09557634205145),(54,111,2.96803949095126),(54,112,1.11622974333934),(54,113,2.22742393261513),(54,118,0.651997436445204),(55,87,-3.99623096407971),(55,95,-0.10544145023957),(55,107,0.261085848567156),(55,110,-4.37677388836329),(55,117,-4.45095675527207),(56,107,0.424909207434309),(56,111,0.29780724509415),(56,113,-0.917600024414807),(56,114,-1.01702169866024),(57,87,-1.981246375927),(57,90,-0.812768944364758),(57,91,-0.669347209082309),(57,92,3.35323648792993),(57,93,1.5898312326426),(57,94,-0.375484481337931),(57,95,-1.14724417859432),(57,96,1.83764152958769),(57,100,-0.877468184453871),(57,102,1.97420422986541),(57,103,1.24908444471572),(57,115,0.247619556260872),(58,86,0.134289071321757),(58,87,-2.76384014404736),(58,89,1.9982528153325),(58,90,-4.79964598529008),(58,95,-4.27687154759362),(58,96,-1.52016510513627),(58,101,-2.33877071443831),(58,103,1.54177220984527),(58,109,0.1036866359447),(58,110,2.53498947111423),(58,113,-0.57792138431959),(58,114,-5.24285103915525),(58,115,-1.05142368846706),(58,118,1.04922635578478),(59,85,3.34169286172063),(59,86,-3.55910672322764),(59,90,0.138203070162053),(59,91,2.08964049195837),(59,93,-4.08903775139622),(59,97,2.51337473677786),(59,98,0.569238868373669),(59,100,-2.0381710257271),(59,102,-0.902325510422071),(59,112,0.48749504074221),(59,114,-1.90232551042207),(60,85,3.68298135319071),(60,87,-1.35153508102664),(60,90,0.146160771507919),(60,91,0.829264198736534),(60,96,-2.71045564134648),(60,100,2.83445234534745),(60,101,-3.51422925504318),(60,105,-2.4821085238197),(60,107,3.63865321817682),(60,109,-0.576792199468978),(60,110,-0.72682119205298),(60,114,-1.82184820093387),(61,89,1.33156834620197),(61,94,-3.25675984984893),(61,96,0.133999145481734),(61,98,-0.312166203802606),(61,100,0.206801049836726),(61,102,0.32769249549852),(61,103,1.30718405713065),(61,114,3.46141697439497),(61,115,-4.49079866939299),(62,93,2.84467604602191),(62,95,-0.993568224127934),(62,107,-3.80657368694113),(62,109,-1.99057741019929),(62,110,-0.116809595019379),(62,111,0.810579241309854),(63,87,-1.62925351725822),(63,90,1.68724631488998),(63,93,0.127376628925443),(63,97,-0.516647846919156),(63,100,3.47743919186987),(63,103,-3.95700704977569),(63,104,1.42453535569323),(63,108,1.39929654835658),(63,111,-1.03805658131657),(63,114,5.15691854609821),(63,117,-3.38508255256813),(64,87,3.23709830011902),(64,94,2.09080019531846),(64,99,-4.95461134678182),(64,110,-3.96894741660817),(64,112,0.761482589190344),(64,116,0.0201651051362651),(65,87,4.14659566026795),(65,88,0.441534165471358),(65,90,-1.47442548905912),(65,97,-0.507271034882657),(65,99,-0.89791558580279),(65,107,1.26355021820734),(65,110,0.139156773583178),(65,111,-0.167271950437941),(65,114,2.50069429609058),(65,116,1.2519684438612),(65,117,4.53123569444868),(66,85,-0.649578844569231),(66,102,2.45664845728935),(66,105,-2.04749443037202),(66,108,2.511764885403),(66,111,2.22086245307779),(66,115,0.462187566759239),(66,118,-1.46658223212378),(67,86,1.24943540757469),(67,90,1.572946867275),(67,92,-1.08014923551134),(67,104,0.55466628009888),(67,109,2.25731681264687),(67,111,0.161038544877468),(68,87,1.95491653187658),(68,88,-0.791215247047334),(68,90,0.0231711783196509),(68,93,-1.09080782494583),(68,95,-2.2072511978515),(68,96,1.12857448042238),(68,97,-0.337809381389813),(68,103,3.48559526352733),(68,107,-0.76731162450026),(68,112,0.149311807611316),(68,114,-0.524231696523942),(69,87,2.72215186010315),(69,88,0.678655354472488),(69,92,0.646038697470016),(69,94,3.49996948149052),(69,95,2.81350138859218),(69,97,-0.461973937192908),(69,108,1.92059083834346),(69,113,-1.72171697134312),(69,114,2.03004547257912),(69,118,2.26808221686453),(70,85,-1.27809991760002),(70,86,3.13167210913419),(70,87,-2.13843195898312),(70,90,-0.224982451857051),(70,96,0.612582781456954),(70,97,-0.274910733359783),(70,99,0.544778283028657),(70,105,1.98848689230018),(70,107,2.19468520157475),(70,109,0.409863582262642),(70,110,-0.686208685567797),(70,111,-2.59062471388897),(71,85,-0.549172948393201),(71,93,0.68862727744377),(71,96,-0.106044190801721),(71,100,1.34526352732933),(71,104,0.0562303537095246),(71,106,-0.793885616626484),(71,111,2.6217764824366),(71,113,-0.37793359172338),(72,94,2.45696127201147),(72,96,0.872272408215583),(72,99,-0.455694753868221),(72,110,0.0302133243812372),(72,112,2.68090609454634),(72,114,0.819116794335764),(72,115,2.90398876918851),(72,116,-0.359355449079867),(73,88,1.25124362926115),(73,94,0.319055757316813),(73,99,0.746482741782891),(73,100,-2.08787804803613),(73,106,1.19846186712241),(73,110,-1.32724997711112),(73,115,0.974631488998077),(74,90,-2.71170690023499),(74,94,-1.1233024079104),(74,99,-0.990249336222419),(74,102,-0.221663563951537),(74,106,1.36102633747368),(74,107,-2.37636951811274),(74,110,1.03901791436506),(74,113,-3.67374187444685),(74,116,0.544808801538133),(75,85,1.27713095492416),(75,86,-1.51058992278817),(75,93,-0.0173268837549975),(75,98,-2.07129123813593),(75,103,-0.853801080355235),(75,105,0.222083193456832),(75,111,2.10593737601856),(75,117,-0.317789239173559),(76,86,2.03299050874355),(76,89,1.94692068239387),(76,92,0.485007782219916),(76,94,0.617084261604663),(76,99,0.994033631397442),(76,101,2.68234809411908),(76,103,-0.96393475142674),(76,106,2.94891201513718),(76,110,-0.928624835963012),(76,113,1.33335367900632),(77,88,-0.991698965422529),(77,91,-2.39992980742821),(77,93,0.669347209082308),(77,98,-2.9877925962096),(77,101,-0.603350932340464),(77,102,4.14250617999817),(77,103,-1.61832026123844),(77,104,-0.0506225775933103),(77,105,1.58558915982543),(77,109,-1.02305673390912),(78,88,-1.70307016205329),(78,93,1.181188390759),(78,94,0.134357737968078),(78,101,-2.54654835657826),(78,104,1.13595995971557),(78,110,-2.12904751731925),(78,114,0.340815454573199),(78,116,-0.684835352641377),(78,117,-3.7430341502121),(78,118,0.10505996887112),(79,87,0.151066621906186),(79,92,1.53340250862148),(79,94,-0.886486404004029),(79,107,1.07248908963286),(79,108,2.19524979400006),(79,114,1.85476241340373),(79,118,-2.95517593920713),(80,87,-1.14169743949705),(80,88,1.1020615253151),(80,91,2.30842005676443),(80,99,-0.629337443159276),(80,101,1.040215765862),(80,107,-0.087359233375042),(80,113,-0.455450605792413),(81,85,-2.75040437025056),(81,86,3.46583452864162),(81,90,-2.62041077913755),(81,93,-1.75227362895596),(81,96,0.433385723441267),(81,97,0.318559831537827),(81,106,-2.73208563493759),(81,107,-0.747528000732444),(81,110,0.376674703207495),(81,115,-1.80865657521287),(82,86,-1.81821649830622),(82,92,3.11515396588031),(82,110,1.08943449201941),(82,112,2.86482589190344),(83,87,0.527207251197852),(83,91,1.29276406140324),(83,93,1.30482650227363),(83,101,-1.4675130466628),(83,103,-0.578821680349132),(83,105,-1.42094180120243),(83,108,-1.13699758903775),(84,85,1.34110538041322),(84,86,-1.47839289529099),(84,89,-2.01048310800501),(84,95,0.834215826899014),(84,99,-1.09801782280953),(84,104,1.32068849757378),(84,111,-0.525147251808222),(84,113,1.60618915372173),(84,114,-0.292886135441145),(35,105,2.72072511978515)]
orgname='BHNEAT_8_4'
cnodes = 119

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()