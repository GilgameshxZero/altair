edge = [(0,85,1.05378887295145),(0,89,1.53820917386395),(0,90,0.461363567003387),(0,93,-1.50485244300668),(0,98,-2.36581011383404),(0,101,0.33158360545671),(0,105,1.25370036927396),(0,108,1.10885952330088),(0,113,0.800805688650166),(0,114,2.09572130497146),(0,117,1.46382030701621),(0,118,0.397793511764885),(1,86,-0.620273445844905),(1,92,-0.458342234565264),(1,98,1.38740195928831),(1,102,0.744560075685903),(1,104,-0.154942472609638),(1,107,-0.256645405438398),(1,108,-0.495818964201788),(1,109,-0.960036011841182),(1,113,0.124088259529405),(2,87,-0.285775322733238),(2,88,-1.17294839320048),(2,100,1.71750541703543),(2,106,-0.243308816797388),(2,108,0.222602008117924),(2,110,1.24179815057833),(2,113,2.91782891323588),(2,118,-0.886516922513504),(3,89,0.609454634235664),(3,92,0.993179113132115),(3,97,-1.81173131504257),(3,99,-3.1022827845088),(3,101,-0.0465407269508957),(3,103,1.84524063844722),(3,105,-0.0303506576738792),(3,108,0.123920407727287),(3,109,0.0802789391766106),(3,111,-0.715430158391064),(3,112,-1.29834894863735),(3,116,2.34046449171422),(4,90,-2.71964171269875),(4,91,-0.010528885769219),(4,97,-2.44994964445936),(4,99,0.724021118808557),(4,101,-0.621173741874447),(4,108,-0.908566545609912),(4,113,1.1285439619129),(4,118,-0.302697836237678),(5,86,1.47543259987182),(5,87,0.591143528550065),(5,89,1.18228705710013),(5,92,0.441969054231391),(5,93,1.22591326639607),(5,99,0.242591631824702),(5,104,-1.20241401409955),(5,114,-0.802880947294534),(5,118,0.397152623065889),(6,89,-1.67589342936491),(6,92,-0.894451734977264),(6,94,0.0486007263405255),(6,100,2.29192480239265),(6,101,-0.32792138431959),(6,103,1.44172490615558),(6,107,2.94344920194098),(6,110,0.011017181920835),(6,113,-1.5744499038667),(7,85,0.418179876094852),(7,86,2.22867519150365),(7,90,-1.83860286263619),(7,95,-1.11632129886776),(7,99,0.580889309366131),(7,100,1.70967741935484),(7,104,-0.00222785119174781),(7,106,1.46488845484787),(7,108,-1.76352732932524),(7,112,0.730399487289041),(7,116,-0.120929593798639),(8,92,1.29952391125217),(8,93,1.34275337992492),(8,95,2.10995818964202),(8,99,1.64156010620441),(8,106,2.43246253852962),(8,107,-0.0667287209692679),(8,115,1.08342234565264),(8,116,-1.04411450544755),(8,118,-2.6525162511063),(9,85,-0.573152867213965),(9,87,-0.0355845820490127),(9,98,-0.833414716025269),(9,101,-2.7872859889523),(9,103,-0.392406994842372),(9,105,-0.851268044068728),(9,106,0.203634754478591),(9,113,0.678655354472488),(10,89,-1.38401440473647),(10,96,1.60623493148595),(10,106,-0.596667378765221),(10,108,-1.55977050080874),(10,109,0.949797051911985),(10,111,1.17313150425733),(10,112,0.0405896176030762),(10,114,-2.71381267738884),(10,115,-0.114520706808679),(10,116,2.21114230780969),(10,117,0.371593371379742),(11,89,0.32082583086642),(11,97,0.716971343119602),(11,105,-0.680791650135807),(11,112,-0.327173680837428),(11,115,0.641880550553911),(12,92,-0.19792779320658),(12,93,-1.55209509567553),(12,94,-1.68813135166478),(12,97,-1.14581743827631),(12,98,-2.86280404065065),(12,99,-1.35465559862056),(12,108,-0.868923001800592),(12,116,-1.32946256904813),(13,86,-0.0941801202429273),(13,87,-0.0412610248115482),(13,90,0.406079287087619),(13,99,-1.32842493972594),(13,102,-0.972701193273721),(13,104,-0.729682302316355),(13,113,-0.45478682821131),(13,116,0.951475569933165),(13,118,-2.00894192327647),(14,90,2.35485396893216),(14,93,-2.08616901150548),(14,95,-0.773491622669149),(14,102,1.6512344737083),(14,104,-0.747093111972411),(14,106,-2.03672902615436),(14,109,0.658742027039399),(14,110,0.30886257515183),(14,111,0.688726462599567),(15,85,-1.25298318430128),(15,92,-0.365489669484542),(15,99,0.493972594378491),(15,101,-1.65303506576739),(15,104,-0.365108188116092),(15,108,-0.465254676961577),(15,117,1.92902920621357),(16,86,1.29064302499466),(16,87,-0.661915952024903),(16,88,-0.697882015442366),(16,90,-1.16652424695578),(16,91,-1.31084627826777),(16,95,-2.32532731101413),(16,97,-0.912045655690176),(16,98,-1.15855891598254),(16,99,-0.112247077852718),(16,101,0.559709463789788),(16,108,0.646443067720572),(16,110,0.95394756920072),(17,89,0.732856227301859),(17,96,0.233802301095615),(17,99,1.58215582750938),(17,101,0.298196356089969),(17,106,0.919248023926512),(17,107,0.901181066316721),(17,109,0.931134983367412),(18,90,0.779488509781182),(18,91,-0.657902768028809),(18,93,0.634723960081789),(18,99,-2.04596087527085),(18,102,-1.84434034241768),(18,103,0.814233832819605),(18,104,2.44605853450117),(18,110,-2.1615955076754),(18,111,2.33587145603809),(18,116,-0.445646534623249),(18,117,-1.87739188818018),(18,118,0.437910092471084),(19,87,0.617023224585711),(19,89,-0.195577867976928),(19,93,-2.11491744743187),(19,95,-0.794396801660207),(19,101,0.946134830774865),(19,105,0.390331736198004),(19,115,-1.60354930265206),(20,88,0.790536210211493),(20,101,1.06962797936949),(20,103,2.18169194616535),(20,104,-1.56498916592914),(20,105,0.0883968626972259),(20,106,-0.946485793633839),(20,111,2.77544480727561),(20,116,-0.992263557847834),(21,86,1.74750511185034),(21,87,2.00627155369732),(21,94,-0.214194158757286),(21,96,-0.851084933011872),(21,101,-0.690298165837581),(21,102,-1.47695852534562),(21,105,-0.0191351054414503),(21,107,0.398342844935453),(21,108,0.326517532883694),(22,86,1.14493240150151),(22,88,-1.45046845912046),(22,91,0.919080172124394),(22,92,-1.75418866542558),(22,93,0.870708334604938),(22,98,-0.329966124454482),(22,106,2.21344645527512),(22,115,-2.04420606097598),(22,117,-0.200125125888852),(23,85,1.21671193578906),(23,86,-1.69489120151372),(23,88,0.6954863124485),(23,90,-0.62656025879696),(23,97,2.46790978728599),(23,104,-1.43006683553575),(23,112,1.85267189550462),(23,114,-1.33320108645894),(23,115,-1.9720908230842),(23,116,-0.394116031373028),(24,89,-0.103503524887844),(24,90,-3.36600848414563),(24,91,-0.959242530594806),(24,101,0.0202185125278481),(24,107,-1.61595507675405),(24,108,-0.25830866420484),(24,110,-0.518433179723502),(24,112,1.47511215552232),(25,90,0.352214117862484),(25,92,-1.97476119266335),(25,94,2.4375133518479),(25,98,-0.103808709982604),(25,105,-2.34542374950407),(25,108,-1.91808832056642),(25,109,1.61914426099429),(25,115,0.0488906521805475),(26,85,1.25864436780908),(26,87,-2.82874538407544),(26,89,-0.570665608691671),(26,95,1.06295968504898),(26,98,-1.87137974181341),(26,100,1.76473281044954),(26,101,2.29908139286477),(26,102,0.746879482406079),(26,103,-2.76149784844508),(26,104,-1.49343852046266),(26,107,1.25727103488266),(26,109,-1.02404858546709),(26,112,-1.09141819513535),(26,113,-0.482802819910276),(26,117,-3.01109347819453),(27,85,0.950514236884671),(27,87,-2.2237159337138),(27,94,-2.38218329416791),(27,100,-0.625995666371654),(27,102,1.10119937742241),(27,103,-0.148472548600726),(27,104,-1.14098025452437),(27,105,2.13226722006897),(27,108,-0.740531632435072),(27,110,0.694448683126316),(27,114,-2.22693563646351),(28,87,-1.63867610705893),(28,88,0.0159611804559465),(28,97,-0.836588641010773),(28,99,-1.67683950315867),(28,104,-0.874248481704154),(28,113,1.64908291879025),(28,114,-0.585879085665456),(29,88,-2.09451582384716),(29,91,0.61085848567156),(29,102,-1.4008911404767),(29,105,0.12945951719718),(29,116,-0.367625965147862),(30,95,1.59619434186834),(30,96,2.66513565477462),(30,99,-2.01086458937346),(30,101,0.93710135196997),(30,104,-0.0746177556688131),(30,109,-1.45280312509537),(30,110,-0.812021240882595),(30,114,-0.135929441206091),(30,118,-1.21201208532975),(31,85,-0.467009491256447),(31,92,0.457869197668386),(31,94,2.41445661793878),(31,96,-0.817484054078799),(31,99,-2.43713187047945),(31,103,-0.647923215430158),(31,107,-1.15045625171667),(31,108,1.81022064882351),(31,109,1.11516159550768),(31,111,-0.396679586169011),(31,112,0.534302804651021),(31,117,-0.379314554277169),(32,86,0.188146610919523),(32,87,-1.60423596911527),(32,89,1.89168980986969),(32,92,0.76082644123661),(32,98,0.306756797997986),(32,99,-1.38918729209265),(32,104,-0.36848048341319),(32,106,-0.821619312112796),(32,109,2.17712942899869),(32,116,0.0587633899960326),(32,118,0.798684652241584),(33,96,-0.758262886440626),(33,98,-0.873332926419874),(33,108,0.193700979644154),(33,110,-3.13061922055727),(33,111,-0.489745780816065),(33,114,-1.78669087801752),(34,85,0.197820978423414),(34,90,1.68808557390057),(34,99,0.497421185949278),(34,104,-1.50248725852229),(34,109,0.0571916867580188),(35,86,-0.0744651631214332),(35,87,1.11827448347423),(35,97,0.229651783806879),(35,98,1.19475386822108),(35,100,-0.67276528214362),(35,104,0.707464827417829),(35,107,-0.93328653828547),(35,109,1.51136814477981),(35,110,-0.231803338724937),(35,112,0.858027893917661),(36,85,-0.951048310800501),(36,87,-1.64642780846583),(36,90,1.48107852412488),(36,91,-1.99021881771294),(36,104,-1.7177343058565),(36,107,1.9265114291818),(36,109,2.08424634540849),(36,112,1.52226325266274),(36,115,-0.792443617053743),(36,117,0.231131931516465),(36,118,0.706091494491409),(37,85,1.00280770287179),(37,86,0.710715048677023),(37,87,0.944654683065279),(37,91,-0.0966673787652211),(37,99,2.46230964079714),(37,105,-2.44074831385235),(37,111,2.89310892056032),(37,112,-0.835215308084353),(37,118,-1.87676625873592),(38,87,-2.10606707968383),(38,90,0.967345194860683),(38,103,0.0376140629291665),(38,105,0.528565324869533),(38,106,-0.45898312326426),(38,111,1.91244239631336),(38,115,1.69530320139164),(39,87,-1.90629291665395),(39,89,-0.710287789544359),(39,91,-1.72620319223609),(39,94,2.14633625293741),(39,97,0.815744499038667),(39,98,1.54521317178869),(39,107,1.57135227515488),(39,108,0.728553117465743),(39,109,0.914548173467208),(39,111,0.285180211798456),(39,113,0.163029877620777),(39,116,-0.694158757286294),(39,118,-0.953276161992248),(40,88,3.23462630085147),(40,92,-0.906720175786615),(40,99,1.20592364268929),(40,104,1.7544785912656),(40,110,-1.76747947630238),(40,116,-0.775765251625111),(40,118,-2.12874233222449),(41,88,-0.599703970458083),(41,93,3.20545060579241),(41,96,-0.886974700155644),(41,97,0.7654805139317),(41,100,-1.12692648091067),(41,101,-0.960341196935942),(41,104,-0.888958403271584),(41,105,-2.23621326334422),(41,106,-1.5102389599292),(41,107,0.506454664754173),(41,109,0.54147465437788),(41,110,-2.3780022583697),(41,111,0.516037476729637),(41,112,-0.971312601092563),(42,85,-0.995162816248054),(42,86,2.45182653279214),(42,87,-1.99838251899777),(42,99,0.282753990295114),(42,100,-0.141743217261269),(42,103,0.357188634907071),(42,109,-0.126850184636982),(42,113,-0.172261726737266),(43,85,-2.00479140598773),(43,88,-2.16963713492233),(43,89,0.870174260689108),(43,93,-1.59768974883267),(43,97,-2.38967558824427),(43,98,0.26113162633137),(43,101,1.39118625446333),(43,102,-0.700994903408918),(43,103,0.122684408093509),(43,105,1.96981719412824),(43,110,-1.10957670827357),(43,112,1.30201116977447),(43,114,1.42532120731223),(43,116,-0.414441358684042),(44,89,-1.36005737479781),(44,98,0.0740684224982451),(44,99,0.343638416699728),(45,87,2.21140171514023),(45,88,0.307306131168554),(45,90,-1.59274575029756),(45,91,-1.05479598376415),(45,95,0.0388653218176824),(45,98,1.94354075746941),(45,108,-0.687459944456313),(45,109,-1.78693502609333),(45,112,-0.108279671620838),(45,115,-1.04071169164098),(46,85,-1.72908719138157),(46,89,0.316095461897641),(46,91,1.48841822565386),(46,94,-0.0853602710043642),(46,97,-1.34424878688925),(46,100,1.74085207678457),(46,101,-0.106387524033326),(46,108,-1.9254280220954),(46,112,0.753776665547655),(47,86,2.14389477217933),(47,91,-0.925031281472213),(47,92,-2.03169347209082),(47,94,1.92175054170354),(47,95,-1.26433606982635),(47,100,-0.54170354319895),(47,101,2.23639637440107),(47,104,-1.65698721274453),(47,105,-1.4623706778161),(47,108,0.959730826746422),(47,112,-1.25615710928678),(47,114,2.34084597308267),(47,118,-0.430509353923154),(48,86,-0.1044495986816),(48,91,-0.816660054322947),(48,98,0.834849085970641),(48,99,2.50538651692251),(48,100,-1.82464064455092),(48,103,0.0735953856013672),(48,105,0.932233649708548),(48,106,-0.295449690237129),(48,111,-1.2466048158208),(48,115,-1.84253975035859),(49,87,0.60940885647145),(49,89,-0.117526779992065),(49,93,0.309732352671896),(49,94,0.780693990905484),(49,95,1.93063142796106),(49,102,-0.536957914975433),(49,113,-0.58348338267159),(49,114,1.06257820368053),(50,89,2.03988769188513),(50,105,-0.267601550340281),(50,107,-0.0168614764854884),(51,87,0.224524674214911),(51,92,-1.01921140171514),(51,97,-1.70415356913968),(51,98,-0.948255867183447),(51,103,1.49491866817225),(51,106,-1.9379558702353),(51,112,-0.872157963805048),(51,118,0.0229346598712118),(52,89,0.451948606830042),(52,97,1.29609057893612),(52,106,-1.39248329111606),(52,110,-0.674764244514298),(52,111,0.226340525528733),(52,113,0.211279641102329),(52,114,-2.20067445905942),(52,118,2.30663472396008),(53,88,0.123935666982025),(53,90,-0.501495406964324),(53,92,1.20088808862575),(53,94,-2.05381939146092),(53,104,-0.546769615771966),(53,105,0.662160100100711),(53,109,0.276024658955657),(54,85,-0.675984984893338),(54,91,0.475173192541276),(54,94,2.41750846888638),(54,96,0.0138401440473647),(54,111,1.48022400585955),(54,112,-1.26033814508499),(54,113,-0.367900631733146),(54,118,0.460905789361248),(55,87,-1.02131717886898),(55,95,-1.23432111575671),(55,107,3.10707419049654),(55,110,0.872005371257668),(55,117,0.0131382183294168),(56,107,1.66695150608844),(56,111,0.337519455549791),(56,113,-2.86016418958098),(56,114,-1.75196081423383),(57,87,-2.74752037110508),(57,90,0.922421948912015),(57,91,-1.11285744804224),(57,92,-1.65407269508957),(57,93,2.13919492172002),(57,94,-0.462843714712973),(57,95,2.14026306955168),(57,96,-0.774895474105045),(57,100,2.07246620075076),(57,102,-2.33977782525101),(57,103,1.61694692831202),(57,115,-0.0665913876766258),(58,86,-0.612582781456954),(58,87,-0.0705740531632435),(58,89,2.10440382091739),(58,90,0.32944730979339),(58,95,-1.33596301156652),(58,96,-0.622104556413465),(58,101,0.936078981902524),(58,103,0.0875270851771599),(58,109,0.332758568071535),(58,110,2.55612353892636),(58,113,-0.904431287575915),(58,114,-2.60350352488784),(58,115,0.455580309457686),(58,118,0.798150578325755),(59,85,2.53526413769952),(59,86,0.334635456404309),(59,90,1.80600909451582),(59,91,0.197790459913938),(59,93,0.767815179906613),(59,97,0.146183660390027),(59,98,0.175008392590106),(59,100,1.68053224280526),(59,102,0.808389538254952),(59,112,1.4734946745201),(59,114,-1.70944853053377),(60,85,1.52795495468001),(60,87,0.0588396862697226),(60,90,-0.466154972991119),(60,91,0.923261207922605),(60,96,-0.67108676412244),(60,100,-0.487792596209601),(60,101,-0.581225012970367),(60,105,1.93403424176763),(60,107,0.645130771813105),(60,109,0.274987029633473),(60,110,1.43015839106418),(60,114,2.55287331766716),(61,89,-0.426252021851253),(61,94,1.61090426343577),(61,96,-0.10361033967101),(61,98,-1.68205816827906),(61,100,1.97289956358531),(61,102,1.64394054994354),(61,103,1.53209021271401),(61,114,2.2598193304239),(61,115,2.46870326853236),(62,93,1.64220099490341),(62,95,-0.131382183294168),(62,107,-0.43168431653798),(62,109,-2.1454512161626),(62,110,0.0296029541917173),(62,111,2.47560045167394),(63,87,-0.397381511886959),(63,90,-0.00843836787011321),(63,93,1.32633442182684),(63,97,0.0861384929960021),(63,100,-0.115207373271889),(63,103,1.06341746269112),(63,104,0.434766685995056),(63,108,-0.579638050477615),(63,111,-2.37496566667684),(63,114,1.1244087038789),(63,117,-0.591448713644826),(64,87,0.274727622302927),(64,94,1.21784112063967),(64,99,-1.50074770348216),(64,110,-0.753425702688681),(64,112,-2.40298165837581),(64,116,-2.10321359904782),(65,87,2.43658253730888),(65,88,1.58838160344249),(65,90,-1.91396832178716),(65,97,1.1258125553148),(65,99,-0.735862300485244),(65,107,-2.51727347636341),(65,110,-1.96299630726035),(65,111,-0.803888058107242),(65,114,-1.05890072328867),(65,116,-0.672795800653096),(65,117,-0.517059846797083),(66,85,-1.0073091830195),(66,102,0.246925260170293),(66,105,0.131168553727836),(66,108,-1.74243903927732),(66,111,-1.13457136753441),(66,115,2.09105197302164),(66,118,-2.22113711966308),(67,86,-0.100894192327647),(67,90,-1.11531418805506),(67,92,0.0168767357402264),(67,104,1.67668691061129),(67,109,-0.951475569933165),(67,111,0.95440534684286),(68,87,2.04443494979705),(68,88,0.586184270760216),(68,90,2.76268807031465),(68,93,-0.675923947874386),(68,95,1.2845545823542),(68,96,1.64426099429304),(68,97,-1.23924985503708),(68,103,2.07396160771508),(68,107,2.98872341074862),(68,112,-0.772041993469039),(68,114,-1.65332499160741),(69,87,1.76000244148076),(69,88,-0.0499740592669454),(69,92,2.01162755211036),(69,94,1.70859401226844),(69,95,-0.681249427777947),(69,97,-0.691778313547166),(69,108,0.159077730643635),(69,113,-1.08693197424238),(69,114,0.199392681661428),(69,118,1.54338206122013),(70,85,2.15903195287942),(70,86,0.595629749443037),(70,87,-0.0292062135685293),(70,90,-1.2169713431196),(70,96,3.13547166356395),(70,97,2.65137180700095),(70,99,-0.533646656697287),(70,105,-0.949201940977203),(70,107,-1.5551774651326),(70,109,1.38714255195776),(70,110,2.77822199163793),(70,111,2.71346171452986),(71,85,0.726340525528733),(71,93,-2.09744560075686),(71,96,1.61778618732261),(71,100,0.878887295144505),(71,104,1.70888393810846),(71,106,-0.26586199530015),(71,111,-1.73955504013184),(71,113,-1.93180639057588),(72,94,0.278527176732688),(72,96,-1.88605914487136),(72,99,-0.491714224677267),(72,110,1.01977599414045),(72,112,1.8929410687582),(72,114,0.518433179723502),(72,115,-1.17981505783258),(72,116,1.55459761345256),(73,88,1.91221350749229),(73,94,0.381542405468917),(73,99,0.0965605639820551),(73,100,0.697119052705466),(73,106,2.35793633838923),(73,110,-0.373470259712516),(73,115,1.7772453993347),(74,90,-1.26715903195288),(74,94,0.820154423657949),(74,99,0.905545213171789),(74,102,-1.83280434583575),(74,106,1.36730552079836),(74,107,1.17316202276681),(74,110,-2.35749382000183),(74,113,-0.740348521378216),(74,116,0.954008606219672),(75,85,0.317011017181921),(75,86,1.25637073885311),(75,93,-1.71955015717032),(75,98,1.9488814966277),(75,103,0.388424329355754),(75,105,1.03183080538347),(75,111,1.22162541581469),(75,117,0.226050599688711),(76,86,-2.16743980224006),(76,89,1.51911984618671),(76,92,-0.341776787621693),(76,94,2.0393536179693),(76,99,0.777199621570483),(76,101,-1.27155369731742),(76,103,-1.62263863032929),(76,106,0.558626056703391),(76,110,-0.665517136143071),(76,113,-1.21387371440779),(77,88,-1.32039857173376),(77,91,2.34348582415235),(77,93,2.09021271401105),(77,98,-1.23700674459059),(77,101,-2.43159276100955),(77,102,0.960768456068606),(77,103,1.57956175420392),(77,104,0.423749504074221),(77,105,1.6384624774926),(77,109,0.745750297555467),(78,88,-1.12588885158849),(78,93,-0.264290292062136),(78,94,-0.863231299783319),(78,101,-0.114978484450819),(78,104,0.102511673329875),(78,110,-0.80085146641438),(78,114,-1.767326883755),(78,116,2.04847865230262),(78,117,-0.71431623279519),(78,118,1.75595873897519),(79,87,1.7764824365978),(79,92,-1.3670003357036),(79,94,1.73963133640553),(79,107,-0.170079653309732),(79,108,2.30263679921873),(79,114,0.0184026612140263),(79,118,-1.63040559099094),(80,87,1.84530167546617),(80,88,-0.176320688497574),(80,91,1.84112063966796),(80,99,0.256675923947874),(80,101,-1.28040406506546),(80,107,-1.79680776390881),(80,113,-0.7570879238258),(81,85,-0.208517715994751),(81,86,-2.47737052522355),(81,90,-2.2288583025605),(81,93,-1.20093386638997),(81,96,0.926129947813349),(81,97,-0.797997985778375),(81,106,-2.37148655659658),(81,107,1.26682332834864),(81,110,-1.97628711813715),(81,115,-0.155522324289682),(82,86,0.972731711783197),(82,92,0.651203955198828),(82,110,1.62314218573565),(82,112,0.838831751457259),(83,87,2.33344523453475),(83,91,-0.106234931485946),(83,93,1.09770500808741),(83,101,-0.454908902249214),(83,103,1.64029358806116),(83,105,0.886516922513504),(83,108,-1.05719168675802),(84,85,-0.5397961363567),(84,86,-1.51455732902005),(84,89,-1.16454054383984),(84,95,-0.0932950834681234),(84,99,0.171208838160344),(84,104,1.46702475051119),(84,111,0.130558183538316),(84,113,-2.19000823999756),(84,114,1.9012115848262)]
orgname='BHNEAT_4_1'
cnodes = 119

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()