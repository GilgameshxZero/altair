edge = [(0,85,-2.54925687429426),(0,89,-1.40855128635517),(0,90,4.49545274208808),(0,93,-2.00917081209754),(0,98,-2.55725272377697),(0,101,-0.872402111880856),(0,105,-3.62218085268715),(0,108,1.93968016602069),(0,113,-0.190023499252297),(0,114,-4.06199835200049),(0,117,3.43150120548112),(0,118,-0.157261879329814),(1,86,-0.731818597979675),(1,92,1.78748435926389),(1,98,2.61902218695639),(1,102,-1.61684011352886),(1,104,-3.18640705587939),(1,107,-1.44541764580218),(1,108,-2.05954161198767),(1,109,-0.202505569627979),(1,113,3.97941526535844),(2,87,-3.99652088991974),(2,88,0.0943021942808313),(2,100,-0.767647328104495),(2,106,3.20830408642842),(2,108,2.75640125736259),(2,110,-2.30050050355541),(2,113,-0.350856044190802),(2,118,0.984801782280953),(3,89,-0.497054963835566),(3,92,-0.215674306466872),(3,97,-3.11075167088839),(3,99,3.18626972258675),(3,101,1.98844874416333),(3,103,-2.32244331186865),(3,105,2.28846095156713),(3,108,1.22434156315806),(3,109,-4.23595385601367),(3,111,-0.867458113345744),(3,112,-2.89423810541093),(3,116,-4.77344584490494),(4,90,4.04249702444533),(4,91,0.399731437116611),(4,97,-1.35787530137028),(4,99,-0.82891323587756),(4,101,3.89100314340648),(4,108,0.0724051637318033),(4,113,-2.07101657155065),(4,118,-0.5271462141789),(5,86,-2.15993224890896),(5,87,-0.71736808374279),(5,89,0.586138492996002),(5,92,0.834513382366405),(5,93,1.49165318765831),(5,99,-0.788705099642934),(5,104,1.50770592364269),(5,114,3.9013336588641),(5,118,-0.0322428052613909),(6,89,-1.29181798760949),(6,92,-2.17680898464919),(6,94,-3.40685750907926),(6,100,1.31723990600299),(6,101,2.40301217688528),(6,103,0.529068880275887),(6,107,2.59532456434828),(6,110,-1.875713370159),(6,113,-1.94695883053072),(7,85,-0.21393475142674),(7,86,-1.2750785851619),(7,90,2.86391796624653),(7,95,-1.45812860499893),(7,99,2.84276863917966),(7,100,3.34885708182012),(7,104,-0.213385418256172),(7,106,-0.702154606769005),(7,108,2.10911893063143),(7,112,-1.5733664967803),(7,116,3.29920346690268),(8,92,0.765068514053774),(8,93,0.479689931943724),(8,95,-1.48249763481552),(8,99,2.05993835261086),(8,106,-1.94531083101901),(8,107,0.808191167943358),(8,115,3.89840388195441),(8,116,2.65956602679525),(8,118,3.44569231238746),(9,85,-2.25716422009949),(9,87,1.98138370921964),(9,98,0.296151615955077),(9,101,0.0889309366130558),(9,103,4.80239265114292),(9,105,-0.360759300515763),(9,106,2.20905178991058),(9,113,3.14270455030976),(10,89,-0.145222327341533),(10,96,2.46876430555132),(10,106,5.31888790551469),(10,108,3.56138798181097),(10,111,-1.55282753990295),(10,112,-1.31725516525773),(10,114,-1.89574877162999),(10,115,0.138126773888363),(10,116,-0.821710867641224),(10,117,-3.86773277993103),(11,89,-3.57690664387951),(11,97,2.22534867397076),(11,105,-0.707296975615711),(11,112,-0.883068330942717),(11,115,-4.57770012512589),(12,92,-1.87440107425153),(12,93,-1.54069643238624),(12,94,1.32343516342662),(12,97,-0.716467787713248),(12,98,2.99975585192419),(12,99,3.97288430433058),(12,108,3.63362529374065),(12,116,-0.67574083681753),(13,86,-2.58120975371563),(13,87,-0.140858180486465),(13,90,-1.76454969939268),(13,99,0.723914304025391),(13,102,2.44224372081668),(13,104,4.26940214239937),(13,113,1.1357310708945),(13,116,-3.5504776146733),(13,118,-1.14253669850764),(14,90,-3.17715994750816),(14,93,-1.09123508407849),(14,95,-1.14535966063417),(14,102,3.03927732169561),(14,104,1.6971343119602),(14,106,4.85139011810663),(14,109,-0.635364848780785),(14,110,2.74779503769036),(14,111,-3.57519760734886),(15,85,-0.517792291024506),(15,92,-0.371059297463912),(15,99,1.62674336985382),(15,101,-3.6017181920835),(15,104,-1.88157292397839),(15,108,-2.11037018951994),(15,117,1.50630207220679),(16,86,-2.92901394695883),(16,87,-2.86906033509323),(16,88,-2.93342387157811),(16,90,2.10406811731315),(16,91,-4.25176244392224),(16,95,-2.59297463911863),(16,97,-3.80669576097903),(16,98,3.10118411816767),(16,99,-0.475493636890774),(16,101,1.16714987640004),(16,108,4.73180333872494),(16,110,4.54567094943083),(17,89,0.163075655384991),(17,96,-2.48837244788964),(17,99,1.08563493758965),(17,101,0.0477919858394116),(17,106,2.33400982696005),(17,107,3.15894039735099),(17,109,-2.4752647480697),(18,90,-0.845469527268288),(18,91,-2.63718070009461),(18,93,-0.440672017578661),(18,99,-0.0189977721488082),(18,102,-1.43737601855525),(18,103,-2.29244361705374),(18,104,-1.47762993255409),(18,110,-0.0478682821131016),(18,111,0.172185430463576),(18,116,0.797448652607807),(18,117,-2.88628803369243),(18,118,1.13975951414533),(19,87,1.4192022461623),(19,89,-2.44366283150731),(19,93,-3.53350932340464),(19,95,1.73398541215247),(19,101,-1.32963042085025),(19,105,-0.657383953367717),(19,115,-1.57182531205176),(20,88,1.21337015900143),(20,101,0.3691671498764),(20,103,3.73345133823664),(20,104,1.93940549943541),(20,105,-3.60922574541459),(20,106,-0.0301980651264991),(20,111,-2.04580828272347),(20,116,-2.96221808526872),(21,86,0.967970824304941),(21,87,1.03013702810755),(21,94,2.35276345103305),(21,96,2.22067934202094),(21,101,1.35451826532792),(21,102,2.534012878811),(21,105,-0.928815576647237),(21,107,-1.11113315225684),(21,108,-1.52389599291971),(22,86,1.53801080355235),(22,88,-1.82222968230232),(22,91,0.599322489089633),(22,92,3.2026734214301),(22,93,1.36838892788476),(22,98,-0.853816339609973),(22,106,-3.2493362224189),(22,115,-0.866374706259346),(22,117,-2.12584307382427),(23,85,-0.475920896023438),(23,86,0.319666127506332),(23,88,-2.1289864803003),(23,90,0.968230231635487),(23,97,-2.27788628803369),(23,104,4.2715842158269),(23,112,-2.08464308603168),(23,114,-2.0864589373455),(23,115,-2.08812219611194),(23,116,-3.0804773094882),(24,89,-2.21446882534257),(24,90,-2.26940214239936),(24,91,-0.032517471846675),(24,101,4.61980040894803),(24,107,1.00547807245094),(24,108,0.185659352397229),(24,110,-1.26874599444563),(24,112,1.02394177068392),(25,90,0.846690267647328),(25,92,2.10756248664815),(25,94,-1.35070345164342),(25,98,-3.08027893917661),(25,105,-0.241447187719352),(25,108,0.75846125675222),(25,109,2.10144352549821),(25,115,-1.76322214423048),(26,85,4.3104953154088),(26,87,-2.50311288796655),(26,89,1.64113284707175),(26,95,-4.17815179906613),(26,98,-1.74449903866695),(26,100,-0.317773979918821),(26,101,0.857081820123905),(26,102,3.1715140232551),(26,103,3.5225684377575),(26,104,2.49121066927091),(26,107,-0.288109988708151),(26,109,0.825312051759392),(26,112,0.577959532456435),(26,113,-3.64961699270608),(26,117,-0.417477950376904),(27,85,0.75449385052034),(27,87,-0.634083071382794),(27,94,-1.42634357737968),(27,100,2.83169042023988),(27,102,-1.42262031922361),(27,103,-0.76334421826838),(27,104,0.849360637226478),(27,105,2.00917081209754),(27,108,0.718024231696524),(27,110,2.66158024842067),(27,114,-2.28478347117527),(28,87,-3.46971037934507),(28,88,2.17744987334819),(28,97,0.951261940366833),(28,99,2.32389294106876),(28,104,1.65779595324564),(28,113,-0.601199377422407),(28,114,-0.940824610126041),(29,88,2.49256874294259),(29,91,-0.182927945799127),(29,102,1.07118442335276),(29,105,-0.84858241523484),(29,116,-0.112643818475906),(30,95,3.34258552812281),(30,96,-1.60448011719108),(30,99,1.31907101657155),(30,101,-1.99809259315775),(30,104,1.17473372600482),(30,109,-2.8676412244026),(30,110,4.38317514572588),(30,114,0.673650318918424),(30,118,-0.116016113773003),(31,85,-0.387600329599902),(31,92,0.4954222235786),(31,94,-0.567659535508286),(31,96,2.10977507858516),(31,99,0.511108737449263),(31,103,-1.2194586016419),(31,107,0.206534012878811),(31,108,-0.173482467116306),(31,109,2.94079409161657),(31,111,2.21745963927122),(31,112,3.13524277474288),(31,117,-0.1572161015656),(32,86,0.571993163853878),(32,87,1.51332132938627),(32,89,-0.706076235236671),(32,92,1.07374797814875),(32,98,2.98986785485397),(32,99,0.854304635761589),(32,104,4.40408032471694),(32,106,0.869716483046968),(32,109,0.686758018738365),(32,116,-3.96095156712546),(32,118,0.694235053559984),(33,96,1.30166020691549),(33,98,-2.44282357249672),(33,108,3.42292550431837),(33,110,-1.47354045228431),(33,111,0.880809961241493),(33,114,-3.83692434461501),(34,85,1.47753837702567),(34,90,1.94587542344432),(34,99,-2.2468489638966),(34,104,-2.71094393749809),(34,109,-1.87249366740928),(35,86,-2.1584215826899),(35,87,-1.63025299844356),(35,97,0.468764305551317),(35,98,4.58899197363201),(35,100,0.393093661305582),(35,104,-1.18727683339946),(35,107,-0.254127628406629),(35,109,-1.68578142643513),(35,110,1.33211767937254),(35,112,0.00236518448438983),(36,85,1.1593829157384),(36,87,-0.17406231879635),(36,90,-1.7276528214362),(36,91,0.903729361857966),(36,104,4.60715048677023),(36,107,-0.522309030426954),(36,109,-1.04136783959471),(36,112,2.62681966612751),(36,115,0.088274788659322),(36,117,-4.43202002014222),(36,118,2.37839899899289),(37,85,1.11671803949095),(37,86,1.52050843836787),(37,87,2.73819696646016),(37,91,-0.188070314645833),(37,99,3.56988738670003),(37,105,0.490020447401349),(37,111,0.555070650349437),(37,112,-2.47204504531999),(37,118,0.741874446852016),(38,87,3.593768120365),(38,90,-0.245307779168065),(38,103,1.28875087740715),(38,105,0.835108493301187),(38,106,-2.4008911404767),(38,111,0.974730674153874),(38,115,0.170690023499252),(39,87,1.78084658345286),(39,89,-1.44550920133061),(39,91,-3.66374706259346),(39,94,-3.63173314615314),(39,97,-0.58531449324015),(39,98,-0.552964873195593),(39,107,-1.76696066164129),(39,108,1.7064882351146),(39,109,-0.134830774864956),(39,111,-0.559266945402387),(39,113,-0.187398907437361),(39,116,-1.89536729026154),(39,118,-0.481917783135472),(40,88,4.08937345500046),(40,92,-1.8580431531724),(40,99,-0.0381786553544732),(40,104,-0.494125186925871),(40,110,0.946241645558031),(40,116,-0.310968352305673),(40,118,2.66586809900204),(41,88,2.07426679280984),(41,93,1.53677480391858),(41,96,-2.49461348307749),(41,97,-2.49229407635731),(41,100,0.117191076387829),(41,101,0.418759727774896),(41,104,2.7471694082461),(41,105,-1.59353923154393),(41,106,4.289574877163),(41,107,-2.93267616809595),(41,109,2.16634113589892),(41,110,-1.23682363353374),(41,111,-1.68433179723502),(41,112,-1.19203772087771),(42,85,-0.410824915311136),(42,86,0.493377483443708),(42,87,1.24993133335368),(42,99,-0.731528672139653),(42,100,-1.36939603869747),(42,103,-3.11128574480422),(42,109,-0.534958952604755),(42,113,0.657246620075075),(43,85,0.569521164586322),(43,88,0.595263527329325),(43,89,2.01713614307077),(43,93,-0.700445570238349),(43,97,-2.99090548417615),(43,98,1.11464278084658),(43,101,5.05229346598712),(43,102,3.13655507065035),(43,103,2.86606952116459),(43,105,0.619449446089053),(43,110,-3.4473555711539),(43,112,-2.43704031495102),(43,114,-1.34928434095279),(43,116,-1.99697866756188),(44,89,-0.687505722220527),(44,98,-3.40983306375317),(44,99,-2.01718192083499),(45,87,-3.42767113254189),(45,88,-0.0505691702017274),(45,90,-1.46121097445601),(45,91,-0.319895016327403),(45,95,-1.37063203833125),(45,98,-1.5643330179754),(45,108,1.49209570604572),(45,109,2.12039551988281),(45,112,-1.52403332621235),(45,115,-3.91370891445662),(46,85,-2.64601580858791),(46,89,-1.28438673055208),(46,91,0.328257087923826),(46,94,-1.14069032868435),(46,97,-0.544083986938078),(46,100,2.28218939786981),(46,101,1.59018219550157),(46,108,-0.509201330607013),(46,112,-2.14654988250374),(47,86,-1.58456678975799),(47,91,-2.44317453535569),(47,92,-1.30834376049074),(47,94,-1.61088900418104),(47,95,-1.06227301858577),(47,100,1.44163335062716),(47,101,4.12038026062807),(47,104,0.573976866969817),(47,105,2.53469954527421),(47,108,1.5210425122837),(47,112,-0.161305581835383),(47,114,-1.07379375591296),(47,118,3.67258217108676),(48,86,-1.52154606769005),(48,91,-3.04161198767052),(48,98,2.99472029786065),(48,99,-1.32674642170476),(48,100,1.49061555833613),(48,103,-4.17206335642567),(48,105,-3.24039429914243),(48,106,1.66116824854274),(48,111,-1.66266365550706),(48,115,0.429395428327281),(49,87,2.36048463393048),(49,89,2.7288583025605),(49,93,-0.471694082461013),(49,94,-0.0102999969481492),(49,95,-3.07155064546648),(49,102,-3.05023346659749),(49,113,-2.70227668080691),(49,114,2.59259315775018),(50,89,-1.75754570146794),(50,105,2.5528885769219),(50,107,0.0960112308114871),(51,87,1.38056581316569),(51,92,1.54121524704733),(51,97,0.645496993926817),(51,98,-1.90142521439253),(51,103,-3.83082064271981),(51,106,0.946729941709647),(51,112,1.87971129490036),(51,118,0.711661122470778),(52,89,-0.238837855159154),(52,97,0.490554521317179),(52,106,2.79236732078005),(52,110,-2.28598895229957),(52,111,1.13867610705893),(52,113,2.15805536057619),(52,114,0.453901791436506),(52,118,0.26593829157384),(53,88,-0.397778252510147),(53,90,-1.3380840479751),(53,92,1.48486281929991),(53,94,-0.0538651692251353),(53,104,-1.39045381023591),(53,105,-0.609393597216712),(53,109,-1.93671987060152),(54,85,-0.642445142979217),(54,91,-0.5420850245674),(54,94,3.30437635425886),(54,96,2.38242744224372),(54,111,-0.272682882168035),(54,112,-0.201101718192083),(54,113,0.313074129459517),(54,118,-0.383068330942717),(55,87,-2.67989135410627),(55,95,-2.53852961821345),(55,107,-1.43368327890866),(55,110,-0.679494613483077),(55,117,-3.69890438550981),(56,107,-3.42330698568682),(56,111,0.265114291817988),(56,113,-1.63141270180364),(56,114,3.57930234687338),(57,87,0.567659535508286),(57,90,2.12694174016541),(57,91,-1.0895107882931),(57,92,-0.425931577501755),(57,93,3.94773705252235),(57,94,-1.31019013031404),(57,95,-2.84228034302805),(57,96,1.00433362834559),(57,100,1.52786339915159),(57,102,-3.41906491286966),(57,103,0.237891781365398),(57,115,1.9052705465865),(58,86,-1.41283913693655),(58,87,0.435377056184576),(58,89,4.93707083346049),(58,90,-3.64902188177129),(58,95,-2.49299600207526),(58,96,0.142521439252907),(58,101,-4.61125522629475),(58,103,-1.52850428785058),(58,109,3.15095980712302),(58,110,3.70201727347636),(58,113,1.0378276924955),(58,114,1.4616077150792),(58,115,-0.682760093997009),(59,85,-0.91567735831782),(59,86,4.37360759300516),(59,90,4.3685262611774),(59,91,1.70278023621326),(59,93,1.08238471633045),(59,97,-0.727500228888821),(59,98,2.68878749961852),(59,100,2.87801751762444),(59,102,-1.36101870784631),(59,112,-0.921353801080355),(59,114,-0.076784569841609),(60,85,-1.92445142979217),(60,87,-3.24417859431745),(60,90,3.54322946867275),(60,91,0.0234229560228278),(60,96,0.286233100375378),(60,100,0.463011566515092),(60,101,-3.90734580523087),(60,105,3.13943906979583),(60,107,-1.52916043580432),(60,109,0.553270058290353),(60,110,-3.36159855952635),(60,114,-0.766182439649647),(61,89,-0.883770256660665),(61,94,-3.0758995330668),(61,96,-0.0199285866878262),(61,98,0.301599169896542),(61,100,2.16925565355388),(61,102,0.934095278786584),(61,103,1.53881954405347),(61,114,2.27013458662679),(61,115,-1.37249366740928),(62,93,-0.480544450209052),(62,95,-1.58421582689901),(62,107,-4.13716544083987),(62,109,-2.96774193548387),(62,110,0.480437635425886),(62,111,-3.19092379528184),(63,87,0.646259956663716),(63,90,3.70474868007446),(63,93,-0.900143436994537),(63,97,2.97367778557695),(63,100,-4.66562395092624),(63,103,-0.569643238624225),(63,104,2.26909695730461),(63,108,-2.21962645344401),(63,111,-0.613513595995971),(63,114,-3.23149815363018),(63,117,2.33164464247566),(64,87,-0.642719809564501),(64,94,-0.24130985442671),(64,99,1.68979461043123),(64,110,1.61952574236274),(64,112,-2.40206610309153),(64,116,-0.205114902188177),(65,87,1.29082613605152),(65,88,-0.558519241920225),(65,90,2.74849696340831),(65,97,1.92973113193152),(65,99,0.335642567217017),(65,107,-4.74169133579516),(65,110,-2.5818811609241),(65,111,0.529923398541215),(65,114,-1.0114444410535),(65,116,-0.95524460585345),(65,117,-1.23996704000977),(66,85,3.69980468153935),(66,102,3.22418897061068),(66,105,-0.848231452375866),(66,108,3.26282540360729),(66,111,-0.871883297219764),(66,115,0.706030457472457),(66,118,-0.180608539078951),(67,86,-1.28676717429121),(67,90,-0.440015869624927),(67,92,-0.395580919827876),(67,104,1.73531296731468),(67,109,-1.93920712912381),(67,111,1.89460432752464),(68,87,-2.19206823938719),(68,88,-1.66455580309458),(68,90,-3.6791436506241),(68,93,-1.63824884792627),(68,95,1.71309549241615),(68,96,-1.92046876430555),(68,97,-1.70023194067202),(68,103,1.78533280434584),(68,107,0.0245674001281777),(68,112,2.39585558641316),(68,114,-0.724188970610675),(69,87,-0.136631366924039),(69,88,0.779824213385418),(69,92,-0.598086489455855),(69,94,-0.442793053987243),(69,95,2.07052827539903),(69,97,-1.07480086672567),(69,108,0.995132297738578),(69,113,1.56724753563036),(69,114,-0.444090090639973),(69,118,-1.19092379528184),(70,85,-2.10284737693411),(70,86,-3.13347270119327),(70,87,-0.25693533127842),(70,90,0.956785790581988),(70,96,1.39690847499008),(70,97,-0.454115421002838),(70,99,-0.176854762413404),(70,105,-2.44648579363384),(70,107,1.90952787865841),(70,109,-1.86628315073092),(70,110,-1.91816461684011),(70,111,-4.04116946928312),(71,85,1.48336741233558),(71,93,-1.46044801171911),(71,96,-0.831385235145116),(71,100,-1.86353648487808),(71,104,-1.08584856715598),(71,106,0.712698751792962),(71,111,0.767967772453993),(71,113,1.22508926664022),(72,94,-2.42095706045717),(72,96,-1.84743797112949),(72,99,-1.20023194067202),(72,110,-2.67853328043458),(72,112,-0.951185644093143),(72,114,-2.23689992980743),(72,115,1.54194769127476),(72,116,0.718008972441786),(73,88,2.22537919248024),(73,94,-1.39858699301126),(73,99,-0.495162816248054),(73,100,0.907406842249824),(73,106,1.96607867671743),(73,110,0.688192388683737),(73,115,-3.38413647877438),(74,90,1.32442701498459),(74,94,-0.730185857722709),(74,99,0.311365092928861),(74,102,1.04863124485),(74,106,-2.34899441511277),(74,107,1.00248725852229),(74,110,-1.64889980773339),(74,113,-1.79323709830012),(74,116,-0.514389477217933),(75,85,2.48191778313547),(75,86,0.43191320535905),(75,93,-2.88801232947783),(75,98,0.783639027069918),(75,103,1.6842402417066),(75,105,-1.10034485915708),(75,111,1.34766685995056),(75,117,1.29673146763512),(76,86,0.0821710867641225),(76,89,2.00735496078372),(76,92,-0.341776787621693),(76,94,2.04367198706015),(76,99,-4.01603747672964),(76,101,0.301828058717612),(76,103,1.01969969786676),(76,106,0.748832667012543),(76,110,-0.499740592669454),(76,113,2.15575121311075),(77,88,-3.35036774803919),(77,91,3.63335062715537),(77,93,0.604876857814264),(77,98,1.46351512192145),(77,101,0.932844019898068),(77,102,0.207037568285165),(77,103,0.159230323191015),(77,104,0.423749504074221),(77,105,0.640430921353801),(77,109,-1.20262764366588),(78,88,-0.534440137943663),(78,93,0.661275063325907),(78,94,2.61676381725517),(78,101,-1.32724997711112),(78,104,-0.769447920163579),(78,110,-1.59730826746422),(78,114,0.422833948789941),(78,116,-0.838801232947783),(78,117,-0.102557451094089),(78,118,1.5809961241493),(79,87,3.90556047242653),(79,92,0.572985015411847),(79,94,0.775826288644063),(79,107,1.68958098086489),(79,108,-3.86004211554308),(79,114,2.60592974639119),(79,118,1.13429670094913),(80,87,1.93882564775536),(80,88,1.77426984466079),(80,91,2.05261391033662),(80,99,1.20230719931639),(80,101,-2.10574663533433),(80,107,-1.76322214423048),(80,113,-1.69057283242286),(81,85,1.89649647511216),(81,86,0.878627887813959),(81,90,1.66982024597919),(81,93,2.20198675496689),(81,96,0.211020233771783),(81,97,-3.97901852473525),(81,106,-0.65393536179693),(81,107,0.274437696462905),(81,110,4.67534409619434),(81,115,-0.242027039399396),(82,86,2.52088991973632),(82,92,0.444654683065279),(82,110,0.021744438001648),(82,112,0.838831751457259),(83,87,-1.26918851283303),(83,91,2.05131687368389),(83,93,1.41076387829218),(83,101,-1.7984099856563),(83,103,0.21614734336375),(83,105,2.44822534867397),(83,108,-3.0823236793115),(84,85,-0.684865871150853),(84,86,0.152500991851558),(84,89,-0.684987945188757),(84,95,-1.53408917508469),(84,99,0.988647114474929),(84,104,1.89977721488083),(84,111,2.90932950834681),(84,113,-0.552354503006073),(84,114,-0.336298715170751),(10,119,3.34710226752525),(119,109,3.47543259987182),(58,120,-1.3520615253151),(120,118,1.79670094912564),(95,104,1.72840052491836)]
orgname='BHNEAT_10_14'
cnodes = 121

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()