edge = [(0,85,-0.123493148594623),(0,89,0.461317789239174),(0,90,0.354167302468947),(0,93,-0.097506637775811),(0,98,-0.537919248023927),(0,101,1.79059724723045),(0,105,0.397106845301675),(0,108,-1.19220557267983),(0,113,-1.10454115421003),(0,114,1.82500686666463),(0,117,1.54164250618),(0,118,2.39646595660268),(1,86,-1.02014221625416),(1,92,-1.04213080233161),(1,98,3.31560716574602),(1,102,-0.4835352641377),(1,104,-2.8790856654561),(1,107,-0.643406476027711),(1,108,-2.43797112949004),(1,109,-0.434598834192938),(1,113,-0.328959013641774),(2,87,0.819605090487381),(2,88,-0.225302896206549),(2,100,-0.0719016083254494),(2,106,1.03134250923185),(2,108,1.57223731192969),(2,110,0.372707296975616),(2,113,-0.946882534257027),(2,118,2.42001098666341),(3,89,-1.77396465956603),(3,92,0.549272133548998),(3,97,0.973616748558),(3,99,-1.18703268532365),(3,101,-1.04760887478256),(3,103,0.84720908230842),(3,105,0.875499740592669),(3,108,-2.53607287820063),(3,109,-1.23522141178625),(3,111,-1.17569505905332),(3,112,0.315179906613361),(3,116,-0.270897549363689),(4,90,-0.601809747611927),(4,91,0.940061647389142),(4,97,0.963820307016205),(4,99,0.773461104159673),(4,101,1.34461500900296),(4,108,-1.24927518539995),(4,113,1.88990447706534),(4,118,-0.585741752372814),(5,86,1.8931394390698),(5,87,-1.45832697531053),(5,89,0.0227668080690939),(5,92,0.331873531296731),(5,93,3.31200598162786),(5,99,1.67223120822779),(5,104,0.0133671071504868),(5,114,0.720770897549364),(5,118,-0.903775139622181),(6,89,-0.333841975157933),(6,92,-1.97019867549669),(6,94,0.209509567552721),(6,100,0.723517563402203),(6,101,-1.88200018311106),(6,103,-2.52438428907132),(6,107,2.49839777825251),(6,110,-0.661229285561693),(6,113,-1.94479201635792),(7,85,0.364391003143406),(7,86,1.67560350352489),(7,90,-1.07144383068331),(7,95,2.13789788506729),(7,99,-2.01501510666219),(7,100,-1.17398602252266),(7,104,1.50572222052675),(7,106,0.645771660512101),(7,108,0.711752677999206),(7,112,1.74819177831355),(7,116,-0.702002014221625),(8,92,-1.3135471663564),(8,93,-2.05914487136448),(8,95,0.910763878292184),(8,99,-1.48509170812098),(8,106,0.634022034363842),(8,107,-0.496169927060762),(8,115,0.113498336741234),(8,116,-1.2383342997528),(8,118,1.55598620563372),(9,85,-0.831415753654592),(9,87,-1.69846186712241),(9,98,0.811487166966765),(9,101,-0.629551072725608),(9,103,2.11142307809687),(9,105,-0.226477858821375),(9,106,-0.569963682973724),(9,113,-1.05710013122959),(10,89,-2.52223273415326),(10,96,-1.49536118655965),(10,106,-0.794961394085513),(10,108,1.07443464461196),(10,109,-1.1451307718131),(10,111,-3.02786339915159),(10,112,-1.24912259285257),(10,114,2.06479079561754),(10,115,-0.219473860896634),(10,116,-0.886715292825099),(10,117,1.33564256721702),(11,89,2.0512405774102),(11,97,0.62678914761803),(11,105,1.47370830408643),(11,112,-1.0272682882168),(11,115,-0.511490218817713),(12,92,1.52897732474746),(12,93,0.908261360515152),(12,94,2.33069856868191),(12,97,-3.06730857264931),(12,98,-1.34577471236305),(12,99,1.93485824152348),(12,108,-0.689703054902799),(12,116,1.71820734275338),(13,86,0.922544022949919),(13,87,0.116809595019379),(13,90,-1.04652546769616),(13,99,-1.73679311502426),(13,102,-0.371868037965026),(13,104,1.65686513870663),(13,113,-1.64130069887387),(13,116,-1.57597582934049),(13,118,-2.08471938230537),(14,90,-2.89906002990814),(14,93,2.35819574571978),(14,95,0.796761986144596),(14,102,-0.240104373302408),(14,104,-2.32703634754479),(14,106,0.732917264320811),(14,109,-0.146000549333171),(14,110,-0.833857234412671),(14,111,0.26532792138432),(15,85,-2.11955626087222),(15,92,-0.411343729972228),(15,99,-0.743095187231056),(15,101,-0.295876949369793),(15,104,-0.699819940794092),(15,108,-1.95579393902402),(15,117,0.827112643818476),(16,86,-1.8206579790643),(16,87,1.1901455732902),(16,88,1.19519638660848),(16,90,3.3434247871334),(16,91,0.706808679464095),(16,95,-2.07614368114261),(16,97,-1.55900753807184),(16,98,-2.74013489181188),(16,99,-0.372035889767144),(16,101,-1.59851374858852),(16,108,0.552140873439741),(16,110,-0.105883968626972),(17,89,2.55465865047151),(17,96,-0.86481826227607),(17,99,-1.13992736594745),(17,101,-0.915173802911466),(17,106,-0.552812280648213),(17,107,1.38344981231117),(17,109,0.800729392376476),(18,90,0.0701162755211036),(18,91,-0.707876827295755),(18,93,-1.3197729422895),(18,99,1.39896847437971),(18,102,-0.863704336680197),(18,103,-2.49089022492141),(18,104,2.52319406720176),(18,110,0.160725730155339),(18,111,-2.07351908932768),(18,116,-0.0654622028260139),(18,117,-0.613345744193854),(18,118,-0.304879909665212),(19,87,-0.260994293038728),(19,89,1.21639149143956),(19,93,-0.803018280587176),(19,95,-2.18420972319712),(19,101,2.4565111239967),(19,105,1.47564622943815),(19,115,-1.19812616351817),(20,88,0.457655568102054),(20,101,0.103579821161535),(20,103,-0.474974822229682),(20,104,-0.173772392956328),(20,105,2.21027253028962),(20,106,0.545762504959258),(20,111,-1.29490035706656),(20,116,-0.497772148808252),(21,86,-1.35921811578722),(21,87,1.89703054902799),(21,94,-2.8336283455916),(21,96,-0.0765251625110629),(21,101,0.670140690328684),(21,102,0.475859859004486),(21,105,-0.970854823450423),(21,107,0.0382702108829005),(21,108,-1.8937040314951),(22,86,-0.0793939024018067),(22,88,1.27735221411786),(22,91,-2.05853450117496),(22,92,-1.2521897030549),(22,93,-0.219336527603992),(22,98,2.15941343424787),(22,106,1.09782708212531),(22,115,2.64371166112247),(22,117,2.73834955900754),(23,85,0.614505447553942),(23,86,1.42429883724479),(23,88,-1.01338236640522),(23,90,-1.89753410443434),(23,97,1.21060823389386),(23,104,-0.318399609363079),(23,112,1.58131656849879),(23,114,0.823023163548692),(23,115,-1.07353434858242),(23,116,-1.90749839777825),(24,89,-0.176473281044954),(24,90,-2.40269173253578),(24,91,0.239265114291818),(24,101,-1.34633930478835),(24,107,2.00537125766778),(24,108,0.423245948667867),(24,110,-1.36228522598956),(24,112,1.98667867061373),(25,90,0.659199804681539),(25,92,-1.88113040559099),(25,94,0.2654805139317),(25,98,2.52810754722739),(25,105,-1.58975493636891),(25,108,2.34054078798791),(25,109,0.0531937620166631),(25,115,0.878154850917081),(26,85,0.98109378337962),(26,87,-1.10147404400769),(26,89,-0.412305063020722),(26,95,0.657734916226691),(26,98,-0.550004577776421),(26,100,-2.05359050263985),(26,101,1.30520035401471),(26,102,2.34003723258156),(26,103,-3.03196813867611),(26,104,2.00512710959197),(26,107,0.0237128818628498),(26,109,-2.02284310434278),(26,112,-0.266182439649647),(26,113,1.22685934018982),(26,117,-1.6186254463332),(27,85,0.639820551164281),(27,87,-2.29505294961394),(27,94,0.921063875240333),(27,100,2.83504745628224),(27,102,-0.846507156590472),(27,103,-1.83614612262337),(27,104,-0.412884914700766),(27,105,-0.860560930204169),(27,108,-3.07359538560137),(27,110,1.38781395916623),(27,114,2.45529038361766),(28,87,0.431165501876888),(28,88,0.939817499313333),(28,97,1.0148167363506),(28,99,-1.16422009949034),(28,104,1.66740928373058),(28,113,-0.161351359599597),(28,114,1.76458021790216),(29,88,-3.17983031708731),(29,91,-1.0431684316538),(29,102,-0.178456984160894),(29,105,-2.26967680898465),(29,116,0.0740531632435072),(30,95,0.164311655018769),(30,96,-1.6904660176397),(30,99,-1.79183324686422),(30,101,0.957014679403058),(30,104,-0.0746177556688131),(30,109,2.34438612018189),(30,110,0.615436262092959),(30,114,0.330469679860836),(30,118,2.68085268715476),(31,85,-2.51168858912931),(31,92,0.153843806268502),(31,94,-0.977980895413068),(31,96,-0.638111514633625),(31,99,0.677739799188208),(31,103,2.3787652211066),(31,107,0.75701162755211),(31,108,0.921674245429853),(31,109,0.232657856990265),(31,111,-0.447340311899167),(31,112,-1.2884914700766),(31,117,0.754600665303506),(32,86,-1.60473952452162),(32,87,0.150975066377758),(32,89,-2.47744682149724),(32,92,2.09787285988952),(32,98,-1.85601367229225),(32,99,-2.26781517990661),(32,104,-2.22357860042116),(32,106,0.174199652088992),(32,109,0.926023133030183),(32,116,0.750343333231605),(32,118,2.36939603869747),(33,96,0.538315988647114),(33,98,0.756050294503616),(33,108,-0.780999176000244),(33,110,-1.43791009247108),(33,111,-2.09718619342631),(33,114,0.380504776146733),(34,85,2.40560625019074),(34,90,1.25501266518143),(34,99,-2.72156437879574),(34,104,-0.0549943540757469),(34,109,0.36634418774987),(35,86,1.05647450178533),(35,87,-0.220603045747246),(35,97,-2.15132602923673),(35,98,-1.50250251777703),(35,100,1.73033845027009),(35,104,2.05844294564653),(35,107,-1.77449873348186),(35,109,-1.75725577562792),(35,110,-0.769539475692007),(35,112,0.519272438734092),(36,85,0.143116550187689),(36,87,-0.111270485549486),(36,90,-0.699713126010926),(36,91,-1.69888912625507),(36,104,2.02246162297433),(36,107,0.756492812891018),(36,109,-1.08745078890347),(36,112,-2.75191503646962),(36,115,2.40844447157201),(36,117,0.458082827234718),(36,118,2.20863979003265),(37,85,-0.446897793511765),(37,86,-2.03573717459639),(37,87,-2.25989562669759),(37,91,2.00010681478317),(37,99,1.42970061342204),(37,105,-1.21031830805383),(37,111,-0.798043763542589),(37,112,3.28901028473769),(37,118,-0.0929593798638874),(38,87,-0.745963927121799),(38,90,-1.08395641956847),(38,103,0.953047273171178),(38,105,0.891109958189642),(38,106,0.955687124240852),(38,111,0.233130893887143),(38,115,-1.16779076509903),(39,87,-0.499191259498886),(39,89,2.47146519363994),(39,91,-1.10873744926298),(39,94,1.5272682882168),(39,97,-0.692922757652516),(39,98,1.26036866359447),(39,107,0.417783135471664),(39,108,1.43639942625202),(39,109,0.483092745750298),(39,111,-2.32406079287088),(39,113,-2.39669484542375),(39,116,-1.95861690115055),(39,118,-2.57853938413648),(40,88,-0.990432447279275),(40,92,-1.43589587084567),(40,99,2.01857051301614),(40,104,0.998336741233558),(40,110,0.278878139591662),(40,116,-2.0879848628193),(40,118,-1.42132328257088),(41,88,0.076906643879513),(41,93,0.935178685872982),(41,96,1.90198980681784),(41,97,0.0386059144871365),(41,100,-0.154118472853786),(41,101,-0.0831171605578783),(41,104,2.26909695730461),(41,105,-1.97685171056246),(41,106,-0.0122379222998749),(41,107,-0.395138401440474),(41,109,0.695883053071688),(41,110,0.840418713950011),(41,111,1.1936399426252),(41,112,-0.862208929715873),(42,85,-0.341273232215339),(42,86,-1.55937376018555),(42,87,1.77645191808832),(42,99,2.29857783745842),(42,100,1.70992156743065),(42,103,-0.599383526108585),(42,109,-1.72190008239998),(42,113,1.55716116824854),(43,85,-1.09508041627247),(43,88,1.0026093325602),(43,89,1.82721945860164),(43,93,1.89545884578997),(43,97,-2.24465163121433),(43,98,1.5256202887051),(43,101,1.92452772606586),(43,102,3.37368388927885),(43,103,-0.941114535966063),(43,105,0.384228034302805),(43,110,2.42355113376263),(43,112,0.855754264961699),(43,114,-0.988708151493881),(43,116,-1.93563646351512),(44,89,3.37458418530839),(44,98,0.595187231055635),(44,99,-0.634083071382794),(45,87,0.975310525833918),(45,88,-1.15900143436995),(45,90,0.709173863948485),(45,91,0.162831507309183),(45,95,0.365794854579302),(45,98,-2.67886898403882),(45,108,-2.33698538163396),(45,109,-1.59218115787225),(45,112,-1.16849269081698),(45,115,1.46931363872188),(46,85,-1.9035004730369),(46,89,-1.88886684774316),(46,91,0.804116946928312),(46,94,0.910153508102664),(46,97,-1.30018005920591),(46,100,-1.12161626026185),(46,101,1.60666219061861),(46,108,-1.21425519577624),(46,112,-0.144230475783563),(47,86,-0.609424115726188),(47,91,0.218955046235542),(47,92,1.84818567461165),(47,94,-0.919415875728629),(47,95,-1.75519577623829),(47,100,-0.300607318338572),(47,101,-0.684148686178167),(47,104,-1.48045289468062),(47,105,-2.3989226966155),(47,108,-1.67836542863247),(47,112,-1.00926236762597),(47,114,-0.481810968352306),(47,118,1.49584948271126),(48,86,1.39991454817347),(48,91,-1.22562334055605),(48,98,0.222190008239998),(48,99,-0.259590441602832),(48,100,-0.692983794671468),(48,103,-2.40221869563891),(48,105,-0.506546220282601),(48,106,-0.182607501449629),(48,111,0.486617633594775),(48,115,-2.578508865627),(49,87,0.202139347514267),(49,89,0.192388683736686),(49,93,-0.458800012207404),(49,94,0.180211798455763),(49,95,0.490340891750847),(49,102,0.949980162968841),(49,113,1.41680654316843),(49,114,-0.338785973693045),(50,89,0.248741111484115),(50,105,-1.25917844172491),(50,107,0.778557695242164),(51,87,-1.85096285897397),(51,92,0.27774895474105),(51,97,-0.603167821283608),(51,98,1.17178868984039),(51,103,1.77382732627339),(51,106,-1.13577684865871),(51,112,-0.371257667775506),(51,118,1.78385265663625),(52,89,2.01490829187902),(52,97,-0.0675984984893338),(52,106,-1.53042695394757),(52,110,-0.942335276345103),(52,111,2.23413800469985),(52,113,-2.22190008239998),(52,114,-2.12912381359294),(52,118,0.158391064180425),(53,88,-1.92957853938414),(53,90,-1.65913876766259),(53,92,-0.427655873287149),(53,94,-0.801873836481826),(53,104,-0.265358439893796),(53,105,-1.55325479903562),(53,109,0.230399487289041),(54,85,-0.880230109561449),(54,91,1.8977172154912),(54,94,1.97712637714774),(54,96,1.74375133518479),(54,111,-1.19151890621662),(54,112,-0.149678029725028),(54,113,-1.27101962340159),(54,118,-2.42904446546831),(55,87,-2.07319864497818),(55,95,-0.534379100924711),(55,107,-0.688573870052187),(55,110,-0.571230201116977),(55,117,1.01765495773186),(56,107,-1.602038636433),(56,111,-0.62968840601825),(56,113,-2.38555558946501),(56,114,-2.02465895565661),(57,87,-1.97216711935789),(57,90,-2.09692678609577),(57,91,2.89429914242988),(57,92,0.274239326151311),(57,93,0.95165868099002),(57,94,1.75165562913907),(57,95,0.795144505142369),(57,96,1.52604754783776),(57,100,0.799081392864772),(57,102,-1.25972777489547),(57,103,2.52067629016999),(57,115,1.83950315866573),(58,86,-0.855357524338511),(58,87,-0.549455244605853),(58,89,0.723075045014801),(58,90,-1.91091647083956),(58,95,-2.08809167760247),(58,96,2.62176885280923),(58,101,-0.450209051789911),(58,103,-0.411679433576464),(58,109,2.27988525040437),(58,110,-2.20221564378796),(58,113,-1.4690389721366),(58,114,-1.87650685140538),(58,115,-0.633701590014344),(58,118,1.4752647480697),(59,85,-1.34713278603473),(59,86,-0.53857539597766),(59,90,1.9669484542375),(59,91,-0.606707968382824),(59,93,-0.149922177800836),(59,97,0.412366100039674),(59,98,0.976622821741386),(59,100,1.07399212622456),(59,102,-0.260170293282876),(59,112,0.43527024140141),(59,114,0.650242622150334),(60,85,1.69705801568651),(60,87,-0.142811365092929),(60,90,-0.0159154026917325),(60,91,1.7932676168096),(60,96,0.964659566026795),(60,100,2.29206213568529),(60,101,-1.51509140293588),(60,105,1.89252906888028),(60,107,-0.479781487472152),(60,109,-0.979140598773156),(60,110,-1.79692983794671),(60,114,-1.88933988464003),(61,89,1.25031281472213),(61,94,1.95919675283059),(61,96,1.00526444288461),(61,98,-2.30903042695395),(61,100,0.160069582201605),(61,102,0.101397747734001),(61,103,-0.814691610461745),(61,114,-2.00848414563433),(61,115,2.43392742698447),(62,93,-2.1407513657033),(62,95,0.534150212103641),(62,107,0.605334635456404),(62,109,0.000183111056855978),(62,110,-1.44169438764611),(62,111,-0.204840235602893),(63,87,-2.28557695242164),(63,90,-1.33660390026551),(63,93,1.97515793328654),(63,97,0.867442854091006),(63,100,-1.05906857509079),(63,103,-1.55400250251778),(63,104,-2.12221137119663),(63,108,-2.01202429273354),(63,111,-2.13821832941679),(63,114,1.65634632404553),(63,117,0.409894100772118),(64,87,-1.11659596545305),(64,94,-0.690694906460768),(64,99,0.0549333170567949),(64,110,2.26323740348521),(64,112,-1.28005310220649),(64,116,-2.52047791985839),(65,87,-0.135349589526048),(65,88,1.70854823450423),(65,90,-1.17580187383648),(65,97,1.49598681600391),(65,99,2.31919309060945),(65,107,-0.7226325266274),(65,110,0.337900936918241),(65,111,1.85023041474654),(65,114,0.74268318735313),(65,116,-1.53547776726585),(65,117,0.837885677663503),(66,85,0.805307168797876),(66,102,1.46861171300394),(66,105,2.78339487899411),(66,108,0.899319437238685),(66,111,-1.89642017883847),(66,115,-2.0730460524308),(66,118,-0.95699942014832),(67,86,-0.563859981078524),(67,90,1.14917447431867),(67,92,0.508682515945921),(67,104,3.00175481429487),(67,109,1.21701712088382),(67,111,-0.6767326883755),(68,87,0.661122470778527),(68,88,0.459318826868496),(68,90,1.59382915738395),(68,93,1.37766655476547),(68,95,0.651051362651448),(68,96,0.277169103061007),(68,97,0.596819971312601),(68,103,2.52876369518113),(68,107,-0.466246528519547),(68,112,-0.43618579668569),(68,114,0.370738853114414),(69,87,0.762901699880978),(69,88,-1.07625049592578),(69,92,-0.457243568224128),(69,94,-2.53651539658803),(69,95,0.901058992278817),(69,97,0.35254982146672),(69,108,-0.542252876369518),(69,113,-0.82448805200354),(69,114,1.01736503189184),(69,118,-0.227607043671987),(70,85,-1.79201635792108),(70,86,-0.010513626514481),(70,87,-2.17723624378185),(70,90,-1.18617816705832),(70,96,-0.999099703970458),(70,97,-2.01202429273354),(70,99,-1.30735190893277),(70,105,-2.31666005432295),(70,107,0.164174321726127),(70,109,2.17482528153325),(70,110,0.457548753318888),(70,111,-0.728614154484695),(71,85,-2.35639515366069),(71,93,-0.46134830774865),(71,96,-2.06831568346202),(71,100,-0.38860744041261),(71,104,1.3579210791345),(71,106,-0.641560106204413),(71,111,2.28946806237983),(71,113,0.908993804742576),(72,94,-1.48324533829768),(72,96,1.93595690786462),(72,99,3.0075075533311),(72,110,2.21762749107334),(72,112,1.50257881405072),(72,114,0.845164342173528),(72,115,0.812326425977355),(72,116,0.144718771935179),(73,88,0.217871639149144),(73,94,-2.48146000549333),(73,99,-1.5766624958037),(73,100,-1.07049775688955),(73,106,0.532776879177221),(73,110,-0.197378460036012),(73,115,2.39851069673757),(74,90,0.257820368053224),(74,94,-2.92873928037355),(74,99,-0.594805749687185),(74,102,1.51037629322184),(74,106,-0.0349284340952788),(74,107,1.98789941099277),(74,110,-1.57824945829646),(74,113,1.33269753105258),(74,116,-0.316232795190283),(75,85,-0.0725119785149693),(75,86,0.120700704977569),(75,93,-2.84772789696951),(75,98,0.00654622028260143),(75,103,0.881481368449965),(75,105,1.02539139988403),(75,111,3.00627155369732),(75,117,-2.32078005310221),(76,86,-0.379589220862453),(76,89,-0.0895413068025758),(76,92,-1.70839564195685),(76,94,0.160527359843745),(76,99,1.93552964873196),(76,101,0.235297708059938),(76,103,1.08435316019166),(76,106,-1.2321085238197),(76,110,-0.707403790398877),(76,113,0.151066621906186),(77,88,1.00912503433332),(77,91,-0.432172612689596),(77,93,0.0946836756492813),(77,98,-1.05932798242134),(77,101,0.817972350230415),(77,102,1.61302529984436),(77,103,0.097659230323191),(77,104,-1.86590166936247),(77,105,0.234015930661946),(77,109,-1.63759269997253),(78,88,-1.02807702871792),(78,93,0.661275063325907),(78,94,2.54000976592303),(78,101,1.06062501907407),(78,104,-1.99079866939299),(78,110,-2.39002655110324),(78,114,-0.986053041169469),(78,116,-0.399487289040803),(78,117,0.13418988616596),(78,118,1.01953184606464),(79,87,2.71068453016755),(79,92,0.0776696066164128),(79,94,-2.15392010254219),(79,107,-0.170079653309732),(79,108,-0.952543717764824),(79,114,-0.649327066866054),(79,118,-0.952620014038514),(80,87,0.312875759147923),(80,88,-3.35077974791711),(80,91,-1.84513382366405),(80,99,1.90316476943266),(80,101,1.92170476393933),(80,107,-0.349375896481216),(80,113,2.24799340800195),(81,85,2.06526383251442),(81,86,-0.579103976561785),(81,90,-0.225928525650807),(81,93,-0.0842463454084902),(81,96,0.530930509353923),(81,97,-2.45622119815668),(81,106,0.672902615436262),(81,107,-0.0953856013672292),(81,110,-1.24166081728568),(81,115,-0.371715445417646),(82,86,-2.05839716788232),(82,92,0.666310617389447),(82,110,-0.424192022461623),(82,112,-0.955732902005066),(83,87,0.356151005584887),(83,91,1.59956663716544),(83,93,2.25818659016694),(83,101,-2.43739127780999),(83,103,0.226752525406659),(83,105,0.999328592791528),(83,108,-1.98202459791864),(84,85,-3.20424512466811),(84,86,2.01002533036287),(84,89,-2.52157658619953),(84,95,-0.281350138859218),(84,99,0.390636921292764),(84,104,0.87397381511887),(84,111,-0.139866328928495),(84,113,1.7321085238197),(84,114,0.43618579668569),(35,105,0.612750633259072)]
orgname='BHNEAT_10_4'
cnodes = 119

import battlecode
import time
import random
import queue

#Start a game
game = battlecode.Game(orgname)

start = time.clock()

# convert to edge list
edgel = [[]] * cnodes
indeg = [0] * cnodes
for a in range(len(edge)):
	edgel[edge[a][0]].append((edge[a][1], edge[a][2]))
	indeg[edge[a][1]] += 1

# establish update order
q = []
qtop = 0
curindeg = indeg.copy ()
for a in range(cnodes):
	if curindeg[a] == 0:
		q.append(a)
while qtop != len(q):
	node = q[qtop]
	qtop += 1
	for a in range(len(edgel[node])):
		curindeg[edgel[node][a][0]] -= 1
		if curindeg[edgel[node][a][0]] == 0:
			q.append(edgel[node][a][0])

# node values
val = [0.0] * cnodes

dirlist = battlecode.Direction.directions()

def EntityAtLoc(state, loc):
	entlist = state.get_entities()
	for entity in entlist:
		if entity.location.distance_to(loc) <= 0.05:
			return entity
	return None

for state in game.turns():
	# Your Code will run within this loop
	for entity in state.get_entities(team=state.my_team): 
		# This line gets all the bots on your team

		# input 1 bias node and 84 feature nodes
		val[0] = 1.0
		val[1] = float(entity.hp)
		if entity.holding == None:
			val[2] = 0.0
		elif entity.holding.team == state.my_team:
			val[2] = 1.0
		elif entity.holding.team == state.other_team:
			val[2] = -1.0
		else:
			val[2] = 0.0
		for a in range(len(dirlist)): # 3-34
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			pre = 3 + a * 4

			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
			elif state.map.tile_at(thisloc) == 'G':
				val[pre + 0] = 1.0
			elif state.map.tile_at(thisloc) == 'D':
				val[pre + 0] = -1.0
			else:
				val[pre + 0] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 1] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 1] = 0.0
			elif locent.team == state.my_team and locent.is_thrower:
				val[pre + 1] = 1.0
			elif locent.team == state.other_team and locent.is_thrower:
				val[pre + 1] = -1.0
			else:
				val[pre + 1] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 2] = 0.0
			locent = EntityAtLoc(state, thisloc)
			if locent == None:
				val[pre + 2] = 0.0
			elif locent.team == state.my_team and locent.is_statue:
				val[pre + 2] = 1.0
			elif locent.team == state.other_team and locent.is_statue:
				val[pre + 2] = -1.0
			else:
				val[pre + 2] = 0.0

			if not state.map.location_on_map(thisloc):
				val[pre + 3] = 1.0
			else:
				val[pre + 3] = 0.0
		for a in range(len(dirlist)): # 35-66
			pre = 35 + a * 4
			thisloc = entity.location
			val[pre+3] = 0.0
			for b in range(7):
				thisloc = thisloc.adjacent_location_in_direction(dirlist[a])
				if not state.map.location_on_map(thisloc):
					val[pre + 0] = 0.0
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					val[pre + 3] = 1.0
					break
				entloc = EntityAtLoc(state, thisloc)
				if entloc != None:
					break
			if not state.map.location_on_map(thisloc):
				pass
			else:
				entloc = EntityAtLoc(state, thisloc)
				if entloc == None:
					val[pre + 1] = 0.0
					val[pre + 2] = 0.0
					if state.map.tile_at(thisloc) == 'G':
						val[pre + 0] = 1.0
					elif state.map.tile_at(thisloc) == 'D':
						val[pre + 0] = -1.0
					else:
						val[pre + 0] = 0.0
				else:
					val[pre + 0] = 0.0
					if entloc.team == state.my_team and entloc.is_thrower:
						val[pre + 1] = 1.0
					elif entloc.team == state.other_team and entloc.is_thrower:
						val[pre + 1] = -1.0
					else:
						val[pre + 1] = 0.0
					if entloc.team == state.my_team and entloc.is_statue:
						val[pre + 2] = 1.0
					elif entloc.team == state.other_team and entloc.is_statue:
						val[pre + 2] = -1.0
					else:
						val[pre + 2] = 0.0
		for a in range(len(dirlist)): # 67-82
			pre = 66 + a * 2
			thisloc = entity.location.adjacent_location_in_direction(dirlist[a])
			if not state.map.location_on_map(thisloc):
				val[pre + 0] = 0.0
				val[pre + 1] = 1.0
			else:
				val[pre + 1] = 0.0
				sector = state.map.sector_at(thisloc)
				if sector.team == state.my_team:
					val[pre + 0] = 1.0
				elif sector.team == state.other_team:
					val[pre + 0] = -1.0
				else:
					val[pre + 0] = 0.0
		val[83] = 0.0
		val[84] = 0.0
		
		# bfs propagate on all nodes

		for a in range(len(q)):
			for b in range(len(edgel[q[a]])):
				val[edgel[q[a]][b][0]] += val[q[a]] * edgel[q[a]][b][1]
					
		# get corresponding max of 34 output nodes
		maxout = val[85]
		maxoutid = 85
		for a in range(85, 119):
			if val[a] > maxout:
				maxout = val[a]
				maxoutid = a

		outval = []
		for a in range(85, 119):
			outval.append((val[a],a))
		stout = sorted(outval, key=lambda curval: curval[0], reverse=True)

		for a in range(len(stout)):
			maxoutid = stout[a][1]
			maxoutid -= 85
			if maxoutid == 0:
				break # do nothing
			elif maxoutid == 1:
				entity.queue_disintegrate()
				break
			elif maxoutid >= 2 and maxoutid <= 9 and entity.can_move(dirlist[maxoutid - 2]):
				entity.queue_move(dirlist[maxoutid - 2])
				break
			elif maxoutid >= 10 and maxoutid <= 17:
				entloc = EntityAtLoc(state, entity.location.adjacent_location_in_direction(dirlist[maxoutid - 10]))
				if entloc != None and entity.can_pickup(entloc):
					entity.queue_pickup(entloc)
					break
			elif maxoutid >= 18 and maxoutid <= 25 and entity.can_throw(dirlist[maxoutid - 18]):
				entity.queue_throw(dirlist[maxoutid - 18])
				break
			elif maxoutid >= 26 and maxoutid <= 33 and entity.can_build(dirlist[maxoutid - 26]):
				entity.queue_build(dirlist[maxoutid - 26])
				break
			else:
				pass

end = time.clock()
# print('clock time: ' + str(end - start))
# print('per round: ' + str((end - start) / 1000))
count = 0
for entity in state.get_entities(team=state.my_team):
	count += 1

file = open('result\\' + orgname + '.txt', 'w')
file.write(str(count - 1))
file.close()